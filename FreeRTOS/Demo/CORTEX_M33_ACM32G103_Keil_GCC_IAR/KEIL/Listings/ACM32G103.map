Component: ARM Compiler 6.15 Tool: armlink [5dd79300]

==============================================================================

Section Cross References

    system_acm32g103.o(.ARM.exidx.text.SystemInit) refers to system_acm32g103.o(.text.SystemInit) for [Anonymous Symbol]
    system_acm32g103.o(.text.SystemCoreClockUpdate) refers to hal_rcc.o(.text.HAL_RCC_GetSysCoreClockFreq) for HAL_RCC_GetSysCoreClockFreq
    system_acm32g103.o(.text.SystemCoreClockUpdate) refers to system_acm32g103.o(.data.g_SystemCoreClock) for g_SystemCoreClock
    system_acm32g103.o(.ARM.exidx.text.SystemCoreClockUpdate) refers to system_acm32g103.o(.text.SystemCoreClockUpdate) for [Anonymous Symbol]
    system_acm32g103.o(.text.SystemClock_FastConfig) refers to memseta.o(.text) for __aeabi_memclr4
    system_acm32g103.o(.text.SystemClock_FastConfig) refers to hal_rcc.o(.text.HAL_RCC_OscConfig) for HAL_RCC_OscConfig
    system_acm32g103.o(.text.SystemClock_FastConfig) refers to hal_rcc.o(.text.HAL_RCC_ClockConfig) for HAL_RCC_ClockConfig
    system_acm32g103.o(.ARM.exidx.text.SystemClock_FastConfig) refers to system_acm32g103.o(.text.SystemClock_FastConfig) for [Anonymous Symbol]
    system_acm32g103.o(.text.SystemClock_FlexibleConfig) refers to memseta.o(.text) for __aeabi_memclr4
    system_acm32g103.o(.text.SystemClock_FlexibleConfig) refers to hal_rcc.o(.text.HAL_RCC_OscConfig) for HAL_RCC_OscConfig
    system_acm32g103.o(.text.SystemClock_FlexibleConfig) refers to hal_rcc.o(.text.HAL_RCC_ClockConfig) for HAL_RCC_ClockConfig
    system_acm32g103.o(.ARM.exidx.text.SystemClock_FlexibleConfig) refers to system_acm32g103.o(.text.SystemClock_FlexibleConfig) for [Anonymous Symbol]
    system_acm32g103.o(.text.SystemClock_Config) refers to system_acm32g103.o(.text.SystemClock_FastConfig) for SystemClock_FastConfig
    system_acm32g103.o(.ARM.exidx.text.SystemClock_Config) refers to system_acm32g103.o(.text.SystemClock_Config) for [Anonymous Symbol]
    startup_acm32g103.o(RESET) refers to startup_acm32g103.o(STACK) for __initial_sp
    startup_acm32g103.o(RESET) refers to startup_acm32g103.o(.text) for Reset_Handler
    startup_acm32g103.o(RESET) refers to acm32g103_it.o(.text.SVC_Handler) for SVC_Handler
    startup_acm32g103.o(RESET) refers to acm32g103_it.o(.text.PendSV_Handler) for PendSV_Handler
    startup_acm32g103.o(RESET) refers to acm32g103_it.o(.text.SysTick_Handler) for SysTick_Handler
    startup_acm32g103.o(.text) refers to system_acm32g103.o(.text.SystemInit) for SystemInit
    startup_acm32g103.o(.text) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    hal.o(.text.HAL_Init) refers to system_accelerate.o(.text.System_EnableIAccelerate) for System_EnableIAccelerate
    hal.o(.text.HAL_Init) refers to hal.o(.text.__NVIC_SetPriorityGrouping) for __NVIC_SetPriorityGrouping
    hal.o(.text.HAL_Init) refers to hal_rcc.o(.text.HAL_RCC_GetSysCoreClockFreq) for HAL_RCC_GetSysCoreClockFreq
    hal.o(.text.HAL_Init) refers to system_acm32g103.o(.data.g_SystemCoreClock) for g_SystemCoreClock
    hal.o(.text.HAL_Init) refers to acm32g103_it.o(.text.HAL_InitTick) for HAL_InitTick
    hal.o(.text.HAL_Init) refers to hal.o(.text.HAL_MspInit) for HAL_MspInit
    hal.o(.ARM.exidx.text.HAL_Init) refers to hal.o(.text.HAL_Init) for [Anonymous Symbol]
    hal.o(.ARM.exidx.text.__NVIC_SetPriorityGrouping) refers to hal.o(.text.__NVIC_SetPriorityGrouping) for [Anonymous Symbol]
    hal.o(.text.HAL_InitTick) refers to system_acm32g103.o(.data.g_SystemCoreClock) for g_SystemCoreClock
    hal.o(.text.HAL_InitTick) refers to hal.o(.bss.g_systickHandle) for g_systickHandle
    hal.o(.text.HAL_InitTick) refers to hal_cortex.o(.text.HAL_SYSTICK_Config) for HAL_SYSTICK_Config
    hal.o(.text.HAL_InitTick) refers to hal_cortex.o(.text.HAL_NVIC_SetPriority) for HAL_NVIC_SetPriority
    hal.o(.ARM.exidx.text.HAL_InitTick) refers to hal.o(.text.HAL_InitTick) for [Anonymous Symbol]
    hal.o(.ARM.exidx.text.HAL_MspInit) refers to hal.o(.text.HAL_MspInit) for [Anonymous Symbol]
    hal.o(.text.HAL_DeInit) refers to hal.o(.text.HAL_MspDeInit) for HAL_MspDeInit
    hal.o(.ARM.exidx.text.HAL_DeInit) refers to hal.o(.text.HAL_DeInit) for [Anonymous Symbol]
    hal.o(.ARM.exidx.text.HAL_MspDeInit) refers to hal.o(.text.HAL_MspDeInit) for [Anonymous Symbol]
    hal.o(.text.HAL_IncTick) refers to hal.o(.bss.g_systickHandle) for g_systickHandle
    hal.o(.text.HAL_IncTick) refers to hal.o(.bss.g_msTick) for g_msTick
    hal.o(.ARM.exidx.text.HAL_IncTick) refers to hal.o(.text.HAL_IncTick) for [Anonymous Symbol]
    hal.o(.text.HAL_GetTick) refers to hal.o(.bss.g_msTick) for g_msTick
    hal.o(.ARM.exidx.text.HAL_GetTick) refers to hal.o(.text.HAL_GetTick) for [Anonymous Symbol]
    hal.o(.text.HAL_SetTickMsPeriod) refers to hal.o(.bss.g_systickHandle) for g_systickHandle
    hal.o(.text.HAL_SetTickMsPeriod) refers to acm32g103_it.o(.text.HAL_InitTick) for HAL_InitTick
    hal.o(.ARM.exidx.text.HAL_SetTickMsPeriod) refers to hal.o(.text.HAL_SetTickMsPeriod) for [Anonymous Symbol]
    hal.o(.text.HAL_GetTickMsPeriod) refers to hal.o(.bss.g_systickHandle) for g_systickHandle
    hal.o(.ARM.exidx.text.HAL_GetTickMsPeriod) refers to hal.o(.text.HAL_GetTickMsPeriod) for [Anonymous Symbol]
    hal.o(.text.HAL_Delay) refers to hal.o(.text.HAL_GetTick) for HAL_GetTick
    hal.o(.text.HAL_Delay) refers to hal.o(.bss.g_systickHandle) for g_systickHandle
    hal.o(.ARM.exidx.text.HAL_Delay) refers to hal.o(.text.HAL_Delay) for [Anonymous Symbol]
    hal.o(.ARM.exidx.text.HAL_SuspendTick) refers to hal.o(.text.HAL_SuspendTick) for [Anonymous Symbol]
    hal.o(.ARM.exidx.text.HAL_ResumeTick) refers to hal.o(.text.HAL_ResumeTick) for [Anonymous Symbol]
    hal.o(.text.HAL_DelayClks) refers to hal.o(.bss.g_systickHandle) for g_systickHandle
    hal.o(.ARM.exidx.text.HAL_DelayClks) refers to hal.o(.text.HAL_DelayClks) for [Anonymous Symbol]
    hal.o(.text.HAL_DelayUs) refers to hal.o(.bss.g_systickHandle) for g_systickHandle
    hal.o(.text.HAL_DelayUs) refers to hal.o(.text.HAL_DelayClks) for HAL_DelayClks
    hal.o(.ARM.exidx.text.HAL_DelayUs) refers to hal.o(.text.HAL_DelayUs) for [Anonymous Symbol]
    hal.o(.text.HAL_DelayMs) refers to hal.o(.bss.g_systickHandle) for g_systickHandle
    hal.o(.text.HAL_DelayMs) refers to hal.o(.text.HAL_DelayClks) for HAL_DelayClks
    hal.o(.ARM.exidx.text.HAL_DelayMs) refers to hal.o(.text.HAL_DelayMs) for [Anonymous Symbol]
    hal.o(.ARM.exidx.text.HAL_SimpleDelay) refers to hal.o(.text.HAL_SimpleDelay) for [Anonymous Symbol]
    hal.o(.text.HAL_StartDelay) refers to hal.o(.bss.g_msTick) for g_msTick
    hal.o(.ARM.exidx.text.HAL_StartDelay) refers to hal.o(.text.HAL_StartDelay) for [Anonymous Symbol]
    hal.o(.text.HAL_UpdateDelay) refers to hal.o(.bss.g_msTick) for g_msTick
    hal.o(.text.HAL_UpdateDelay) refers to hal.o(.bss.g_systickHandle) for g_systickHandle
    hal.o(.ARM.exidx.text.HAL_UpdateDelay) refers to hal.o(.text.HAL_UpdateDelay) for [Anonymous Symbol]
    hal.o(.text.HAL_GetClkDelay) refers to hal.o(.text.HAL_UpdateDelay) for HAL_UpdateDelay
    hal.o(.text.HAL_GetClkDelay) refers to hal.o(.bss.g_systickHandle) for g_systickHandle
    hal.o(.ARM.exidx.text.HAL_GetClkDelay) refers to hal.o(.text.HAL_GetClkDelay) for [Anonymous Symbol]
    hal.o(.text.HAL_GetUsDelay) refers to hal.o(.text.HAL_UpdateDelay) for HAL_UpdateDelay
    hal.o(.text.HAL_GetUsDelay) refers to hal.o(.bss.g_systickHandle) for g_systickHandle
    hal.o(.ARM.exidx.text.HAL_GetUsDelay) refers to hal.o(.text.HAL_GetUsDelay) for [Anonymous Symbol]
    hal.o(.text.HAL_GetMsDelay) refers to hal.o(.text.HAL_UpdateDelay) for HAL_UpdateDelay
    hal.o(.ARM.exidx.text.HAL_GetMsDelay) refers to hal.o(.text.HAL_GetMsDelay) for [Anonymous Symbol]
    hal.o(.ARM.exidx.text.HAL_GetUID) refers to hal.o(.text.HAL_GetUID) for [Anonymous Symbol]
    hal_uart.o(.text.HAL_UART_IRQHandler) refers to hal_uart.o(.rodata.str1.1) for .L.str
    hal_uart.o(.text.HAL_UART_IRQHandler) refers to main.o(.text.assert_failed) for assert_failed
    hal_uart.o(.text.HAL_UART_IRQHandler) refers to hal_uart.o(.text.HAL_UART_TxCpltCallback) for HAL_UART_TxCpltCallback
    hal_uart.o(.text.HAL_UART_IRQHandler) refers to hal_uart.o(.text.HAL_UART_RxCpltCallback) for HAL_UART_RxCpltCallback
    hal_uart.o(.ARM.exidx.text.HAL_UART_IRQHandler) refers to hal_uart.o(.text.HAL_UART_IRQHandler) for [Anonymous Symbol]
    hal_uart.o(.ARM.exidx.text.HAL_UART_TxCpltCallback) refers to hal_uart.o(.text.HAL_UART_TxCpltCallback) for [Anonymous Symbol]
    hal_uart.o(.ARM.exidx.text.HAL_UART_RxCpltCallback) refers to hal_uart.o(.text.HAL_UART_RxCpltCallback) for [Anonymous Symbol]
    hal_uart.o(.text.HAL_UART_MspInit) refers to hal_gpio.o(.text.HAL_GPIO_Init) for HAL_GPIO_Init
    hal_uart.o(.text.HAL_UART_MspInit) refers to hal_uart.o(.text.__NVIC_ClearPendingIRQ) for __NVIC_ClearPendingIRQ
    hal_uart.o(.text.HAL_UART_MspInit) refers to hal_uart.o(.text.__NVIC_SetPriority) for __NVIC_SetPriority
    hal_uart.o(.text.HAL_UART_MspInit) refers to hal_uart.o(.text.__NVIC_EnableIRQ) for __NVIC_EnableIRQ
    hal_uart.o(.ARM.exidx.text.HAL_UART_MspInit) refers to hal_uart.o(.text.HAL_UART_MspInit) for [Anonymous Symbol]
    hal_uart.o(.ARM.exidx.text.__NVIC_ClearPendingIRQ) refers to hal_uart.o(.text.__NVIC_ClearPendingIRQ) for [Anonymous Symbol]
    hal_uart.o(.ARM.exidx.text.__NVIC_SetPriority) refers to hal_uart.o(.text.__NVIC_SetPriority) for [Anonymous Symbol]
    hal_uart.o(.ARM.exidx.text.__NVIC_EnableIRQ) refers to hal_uart.o(.text.__NVIC_EnableIRQ) for [Anonymous Symbol]
    hal_uart.o(.text.HAL_UART_RS485Msp_Init) refers to hal_gpio.o(.text.HAL_GPIO_Init) for HAL_GPIO_Init
    hal_uart.o(.ARM.exidx.text.HAL_UART_RS485Msp_Init) refers to hal_uart.o(.text.HAL_UART_RS485Msp_Init) for [Anonymous Symbol]
    hal_uart.o(.text.HAL_UART_Init) refers to hal_uart.o(.text.HAL_UART_MspInit) for HAL_UART_MspInit
    hal_uart.o(.text.HAL_UART_Init) refers to hal_uart.o(.text.UART_Config_BaudRate) for UART_Config_BaudRate
    hal_uart.o(.ARM.exidx.text.HAL_UART_Init) refers to hal_uart.o(.text.HAL_UART_Init) for [Anonymous Symbol]
    hal_uart.o(.text.UART_Config_BaudRate) refers to hal_rcc.o(.text.HAL_RCC_GetPCLK1Freq) for HAL_RCC_GetPCLK1Freq
    hal_uart.o(.text.UART_Config_BaudRate) refers to hal_rcc.o(.text.HAL_RCC_GetPCLK2Freq) for HAL_RCC_GetPCLK2Freq
    hal_uart.o(.text.UART_Config_BaudRate) refers to uldiv.o(.text) for __aeabi_uldivmod
    hal_uart.o(.ARM.exidx.text.UART_Config_BaudRate) refers to hal_uart.o(.text.UART_Config_BaudRate) for [Anonymous Symbol]
    hal_uart.o(.text.HAL_UART_RS485_Init) refers to hal_uart.o(.text.HAL_UART_Init) for HAL_UART_Init
    hal_uart.o(.text.HAL_UART_RS485_Init) refers to hal_uart.o(.text.HAL_UART_RS485Msp_Init) for HAL_UART_RS485Msp_Init
    hal_uart.o(.ARM.exidx.text.HAL_UART_RS485_Init) refers to hal_uart.o(.text.HAL_UART_RS485_Init) for [Anonymous Symbol]
    hal_uart.o(.text.HAL_UART_IRDA_Init) refers to hal_uart.o(.text.HAL_UART_Init) for HAL_UART_Init
    hal_uart.o(.text.HAL_UART_IRDA_Init) refers to hal_rcc.o(.text.HAL_RCC_GetPCLK1Freq) for HAL_RCC_GetPCLK1Freq
    hal_uart.o(.text.HAL_UART_IRDA_Init) refers to hal_rcc.o(.text.HAL_RCC_GetPCLK2Freq) for HAL_RCC_GetPCLK2Freq
    hal_uart.o(.ARM.exidx.text.HAL_UART_IRDA_Init) refers to hal_uart.o(.text.HAL_UART_IRDA_Init) for [Anonymous Symbol]
    hal_uart.o(.text.HAL_UART_MultiProcessor_Init) refers to hal_uart.o(.text.HAL_UART_Init) for HAL_UART_Init
    hal_uart.o(.ARM.exidx.text.HAL_UART_MultiProcessor_Init) refers to hal_uart.o(.text.HAL_UART_MultiProcessor_Init) for [Anonymous Symbol]
    hal_uart.o(.text.HAL_UART_MspDeInit) refers to hal_gpio.o(.text.HAL_GPIO_DeInit) for HAL_GPIO_DeInit
    hal_uart.o(.text.HAL_UART_MspDeInit) refers to hal_uart.o(.text.__NVIC_DisableIRQ) for __NVIC_DisableIRQ
    hal_uart.o(.ARM.exidx.text.HAL_UART_MspDeInit) refers to hal_uart.o(.text.HAL_UART_MspDeInit) for [Anonymous Symbol]
    hal_uart.o(.ARM.exidx.text.__NVIC_DisableIRQ) refers to hal_uart.o(.text.__NVIC_DisableIRQ) for [Anonymous Symbol]
    hal_uart.o(.text.HAL_UART_DeInit) refers to hal_uart.o(.rodata.str1.1) for .L.str
    hal_uart.o(.text.HAL_UART_DeInit) refers to main.o(.text.assert_failed) for assert_failed
    hal_uart.o(.text.HAL_UART_DeInit) refers to hal_uart.o(.text.HAL_UART_MspDeInit) for HAL_UART_MspDeInit
    hal_uart.o(.ARM.exidx.text.HAL_UART_DeInit) refers to hal_uart.o(.text.HAL_UART_DeInit) for [Anonymous Symbol]
    hal_uart.o(.text.HAL_UART_Transmit) refers to hal_uart.o(.rodata.str1.1) for .L.str
    hal_uart.o(.text.HAL_UART_Transmit) refers to main.o(.text.assert_failed) for assert_failed
    hal_uart.o(.text.HAL_UART_Transmit) refers to hal.o(.text.HAL_GetTick) for HAL_GetTick
    hal_uart.o(.text.HAL_UART_Transmit) refers to hal_uart.o(.text.HAL_UART_Wait_Tx_Done) for HAL_UART_Wait_Tx_Done
    hal_uart.o(.ARM.exidx.text.HAL_UART_Transmit) refers to hal_uart.o(.text.HAL_UART_Transmit) for [Anonymous Symbol]
    hal_uart.o(.text.HAL_UART_Wait_Tx_Done) refers to hal_uart.o(.rodata.str1.1) for .L.str
    hal_uart.o(.text.HAL_UART_Wait_Tx_Done) refers to main.o(.text.assert_failed) for assert_failed
    hal_uart.o(.ARM.exidx.text.HAL_UART_Wait_Tx_Done) refers to hal_uart.o(.text.HAL_UART_Wait_Tx_Done) for [Anonymous Symbol]
    hal_uart.o(.text.HAL_UART_Receive) refers to hal_uart.o(.rodata.str1.1) for .L.str
    hal_uart.o(.text.HAL_UART_Receive) refers to main.o(.text.assert_failed) for assert_failed
    hal_uart.o(.text.HAL_UART_Receive) refers to hal.o(.text.HAL_GetTick) for HAL_GetTick
    hal_uart.o(.ARM.exidx.text.HAL_UART_Receive) refers to hal_uart.o(.text.HAL_UART_Receive) for [Anonymous Symbol]
    hal_uart.o(.text.HAL_UART_Receive_To_IDLEorBCNT) refers to hal_uart.o(.rodata.str1.1) for .L.str
    hal_uart.o(.text.HAL_UART_Receive_To_IDLEorBCNT) refers to main.o(.text.assert_failed) for assert_failed
    hal_uart.o(.ARM.exidx.text.HAL_UART_Receive_To_IDLEorBCNT) refers to hal_uart.o(.text.HAL_UART_Receive_To_IDLEorBCNT) for [Anonymous Symbol]
    hal_uart.o(.text.HAL_UART_Transmit_IT) refers to hal_uart.o(.rodata.str1.1) for .L.str
    hal_uart.o(.text.HAL_UART_Transmit_IT) refers to main.o(.text.assert_failed) for assert_failed
    hal_uart.o(.text.HAL_UART_Transmit_IT) refers to hal_uart.o(.text.HAL_UART_TxCpltCallback) for HAL_UART_TxCpltCallback
    hal_uart.o(.ARM.exidx.text.HAL_UART_Transmit_IT) refers to hal_uart.o(.text.HAL_UART_Transmit_IT) for [Anonymous Symbol]
    hal_uart.o(.text.HAL_UART_Receive_IT) refers to hal_uart.o(.rodata.str1.1) for .L.str
    hal_uart.o(.text.HAL_UART_Receive_IT) refers to main.o(.text.assert_failed) for assert_failed
    hal_uart.o(.ARM.exidx.text.HAL_UART_Receive_IT) refers to hal_uart.o(.text.HAL_UART_Receive_IT) for [Anonymous Symbol]
    hal_uart.o(.text.HAL_UART_Transmit_DMA) refers to hal_uart.o(.rodata.str1.1) for .L.str
    hal_uart.o(.text.HAL_UART_Transmit_DMA) refers to main.o(.text.assert_failed) for assert_failed
    hal_uart.o(.text.HAL_UART_Transmit_DMA) refers to hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    hal_uart.o(.ARM.exidx.text.HAL_UART_Transmit_DMA) refers to hal_uart.o(.text.HAL_UART_Transmit_DMA) for [Anonymous Symbol]
    hal_uart.o(.text.HAL_UART_Receive_DMA) refers to hal_uart.o(.rodata.str1.1) for .L.str
    hal_uart.o(.text.HAL_UART_Receive_DMA) refers to main.o(.text.assert_failed) for assert_failed
    hal_uart.o(.text.HAL_UART_Receive_DMA) refers to hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    hal_uart.o(.ARM.exidx.text.HAL_UART_Receive_DMA) refers to hal_uart.o(.text.HAL_UART_Receive_DMA) for [Anonymous Symbol]
    hal_uart.o(.ARM.exidx.text.HAL_UART_ErrorCallBack) refers to hal_uart.o(.text.HAL_UART_ErrorCallBack) for [Anonymous Symbol]
    hal_uart.o(.text.HAL_UART_GetState) refers to hal_uart.o(.rodata.str1.1) for .L.str
    hal_uart.o(.text.HAL_UART_GetState) refers to main.o(.text.assert_failed) for assert_failed
    hal_uart.o(.ARM.exidx.text.HAL_UART_GetState) refers to hal_uart.o(.text.HAL_UART_GetState) for [Anonymous Symbol]
    hal_uart.o(.ARM.exidx.text.HAL_UART_GetError) refers to hal_uart.o(.text.HAL_UART_GetError) for [Anonymous Symbol]
    hal_uart.o(.text.HAL_UART_Abort) refers to hal_uart.o(.rodata.str1.1) for .L.str
    hal_uart.o(.text.HAL_UART_Abort) refers to main.o(.text.assert_failed) for assert_failed
    hal_uart.o(.text.HAL_UART_Abort) refers to hal_dma.o(.text.HAL_DMA_Abort) for HAL_DMA_Abort
    hal_uart.o(.ARM.exidx.text.HAL_UART_Abort) refers to hal_uart.o(.text.HAL_UART_Abort) for [Anonymous Symbol]
    hal_uart.o(.text.HAL_UART_DMAPause) refers to hal_uart.o(.rodata.str1.1) for .L.str
    hal_uart.o(.text.HAL_UART_DMAPause) refers to main.o(.text.assert_failed) for assert_failed
    hal_uart.o(.ARM.exidx.text.HAL_UART_DMAPause) refers to hal_uart.o(.text.HAL_UART_DMAPause) for [Anonymous Symbol]
    hal_uart.o(.text.HAL_UART_DMAResume) refers to hal_uart.o(.rodata.str1.1) for .L.str
    hal_uart.o(.text.HAL_UART_DMAResume) refers to main.o(.text.assert_failed) for assert_failed
    hal_uart.o(.ARM.exidx.text.HAL_UART_DMAResume) refers to hal_uart.o(.text.HAL_UART_DMAResume) for [Anonymous Symbol]
    hal_uart.o(.text.HAL_UART_DMAStop) refers to hal_uart.o(.rodata.str1.1) for .L.str
    hal_uart.o(.text.HAL_UART_DMAStop) refers to main.o(.text.assert_failed) for assert_failed
    hal_uart.o(.text.HAL_UART_DMAStop) refers to hal_dma.o(.text.HAL_DMA_Abort) for HAL_DMA_Abort
    hal_uart.o(.ARM.exidx.text.HAL_UART_DMAStop) refers to hal_uart.o(.text.HAL_UART_DMAStop) for [Anonymous Symbol]
    hal_uart.o(.ARM.exidx.text.HAL_UART_MultiProcessor_EnterMuteMode) refers to hal_uart.o(.text.HAL_UART_MultiProcessor_EnterMuteMode) for [Anonymous Symbol]
    hal_uart.o(.ARM.exidx.text.HAL_UART_MultiProcessor_ExitMuteMode) refers to hal_uart.o(.text.HAL_UART_MultiProcessor_ExitMuteMode) for [Anonymous Symbol]
    hal_uart.o(.text.HAL_UART_SetDebugUart) refers to hal_uart.o(.rodata.str1.1) for .L.str
    hal_uart.o(.text.HAL_UART_SetDebugUart) refers to main.o(.text.assert_failed) for assert_failed
    hal_uart.o(.text.HAL_UART_SetDebugUart) refers to hal_uart.o(.bss.g_DebugUart) for g_DebugUart
    hal_uart.o(.ARM.exidx.text.HAL_UART_SetDebugUart) refers to hal_uart.o(.text.HAL_UART_SetDebugUart) for [Anonymous Symbol]
    hal_uart.o(.text.fputc) refers to hal_uart.o(.bss.g_DebugUart) for g_DebugUart
    hal_uart.o(.ARM.exidx.text.fputc) refers to hal_uart.o(.text.fputc) for [Anonymous Symbol]
    hal_cortex.o(.text.HAL_NVIC_SetPriorityGrouping) refers to hal_cortex.o(.rodata.str1.1) for .L.str
    hal_cortex.o(.text.HAL_NVIC_SetPriorityGrouping) refers to main.o(.text.assert_failed) for assert_failed
    hal_cortex.o(.text.HAL_NVIC_SetPriorityGrouping) refers to hal_cortex.o(.text.__NVIC_SetPriorityGrouping) for __NVIC_SetPriorityGrouping
    hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SetPriorityGrouping) refers to hal_cortex.o(.text.HAL_NVIC_SetPriorityGrouping) for [Anonymous Symbol]
    hal_cortex.o(.ARM.exidx.text.__NVIC_SetPriorityGrouping) refers to hal_cortex.o(.text.__NVIC_SetPriorityGrouping) for [Anonymous Symbol]
    hal_cortex.o(.text.HAL_NVIC_SetPriority) refers to hal_cortex.o(.rodata.str1.1) for .L.str
    hal_cortex.o(.text.HAL_NVIC_SetPriority) refers to main.o(.text.assert_failed) for assert_failed
    hal_cortex.o(.text.HAL_NVIC_SetPriority) refers to hal_cortex.o(.text.__NVIC_GetPriorityGrouping) for __NVIC_GetPriorityGrouping
    hal_cortex.o(.text.HAL_NVIC_SetPriority) refers to hal_cortex.o(.text.NVIC_EncodePriority) for NVIC_EncodePriority
    hal_cortex.o(.text.HAL_NVIC_SetPriority) refers to hal_cortex.o(.text.__NVIC_SetPriority) for __NVIC_SetPriority
    hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SetPriority) refers to hal_cortex.o(.text.HAL_NVIC_SetPriority) for [Anonymous Symbol]
    hal_cortex.o(.ARM.exidx.text.__NVIC_GetPriorityGrouping) refers to hal_cortex.o(.text.__NVIC_GetPriorityGrouping) for [Anonymous Symbol]
    hal_cortex.o(.ARM.exidx.text.__NVIC_SetPriority) refers to hal_cortex.o(.text.__NVIC_SetPriority) for [Anonymous Symbol]
    hal_cortex.o(.ARM.exidx.text.NVIC_EncodePriority) refers to hal_cortex.o(.text.NVIC_EncodePriority) for [Anonymous Symbol]
    hal_cortex.o(.text.HAL_NVIC_EnableIRQ) refers to hal_cortex.o(.rodata.str1.1) for .L.str
    hal_cortex.o(.text.HAL_NVIC_EnableIRQ) refers to main.o(.text.assert_failed) for assert_failed
    hal_cortex.o(.text.HAL_NVIC_EnableIRQ) refers to hal_cortex.o(.text.__NVIC_EnableIRQ) for __NVIC_EnableIRQ
    hal_cortex.o(.ARM.exidx.text.HAL_NVIC_EnableIRQ) refers to hal_cortex.o(.text.HAL_NVIC_EnableIRQ) for [Anonymous Symbol]
    hal_cortex.o(.ARM.exidx.text.__NVIC_EnableIRQ) refers to hal_cortex.o(.text.__NVIC_EnableIRQ) for [Anonymous Symbol]
    hal_cortex.o(.text.HAL_NVIC_DisableIRQ) refers to hal_cortex.o(.rodata.str1.1) for .L.str
    hal_cortex.o(.text.HAL_NVIC_DisableIRQ) refers to main.o(.text.assert_failed) for assert_failed
    hal_cortex.o(.text.HAL_NVIC_DisableIRQ) refers to hal_cortex.o(.text.__NVIC_DisableIRQ) for __NVIC_DisableIRQ
    hal_cortex.o(.ARM.exidx.text.HAL_NVIC_DisableIRQ) refers to hal_cortex.o(.text.HAL_NVIC_DisableIRQ) for [Anonymous Symbol]
    hal_cortex.o(.ARM.exidx.text.__NVIC_DisableIRQ) refers to hal_cortex.o(.text.__NVIC_DisableIRQ) for [Anonymous Symbol]
    hal_cortex.o(.text.HAL_NVIC_SystemReset) refers to hal_cortex.o(.text.__NVIC_SystemReset) for __NVIC_SystemReset
    hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SystemReset) refers to hal_cortex.o(.text.HAL_NVIC_SystemReset) for [Anonymous Symbol]
    hal_cortex.o(.ARM.exidx.text.__NVIC_SystemReset) refers to hal_cortex.o(.text.__NVIC_SystemReset) for [Anonymous Symbol]
    hal_cortex.o(.text.HAL_SYSTICK_Config) refers to hal_cortex.o(.text.SysTick_Config) for SysTick_Config
    hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_Config) refers to hal_cortex.o(.text.HAL_SYSTICK_Config) for [Anonymous Symbol]
    hal_cortex.o(.text.SysTick_Config) refers to hal_cortex.o(.text.__NVIC_SetPriority) for __NVIC_SetPriority
    hal_cortex.o(.ARM.exidx.text.SysTick_Config) refers to hal_cortex.o(.text.SysTick_Config) for [Anonymous Symbol]
    hal_cortex.o(.ARM.exidx.text.HAL_MPU_Enable) refers to hal_cortex.o(.text.HAL_MPU_Enable) for [Anonymous Symbol]
    hal_cortex.o(.ARM.exidx.text.HAL_MPU_Disable) refers to hal_cortex.o(.text.HAL_MPU_Disable) for [Anonymous Symbol]
    hal_cortex.o(.text.HAL_MPU_ConfigRegion) refers to hal_cortex.o(.text.MPU_ConfigRegion) for MPU_ConfigRegion
    hal_cortex.o(.ARM.exidx.text.HAL_MPU_ConfigRegion) refers to hal_cortex.o(.text.HAL_MPU_ConfigRegion) for [Anonymous Symbol]
    hal_cortex.o(.text.MPU_ConfigRegion) refers to hal_cortex.o(.rodata.str1.1) for .L.str
    hal_cortex.o(.text.MPU_ConfigRegion) refers to main.o(.text.assert_failed) for assert_failed
    hal_cortex.o(.ARM.exidx.text.MPU_ConfigRegion) refers to hal_cortex.o(.text.MPU_ConfigRegion) for [Anonymous Symbol]
    hal_cortex.o(.text.HAL_MPU_ConfigMemoryAttributes) refers to hal_cortex.o(.text.MPU_ConfigMemoryAttributes) for MPU_ConfigMemoryAttributes
    hal_cortex.o(.ARM.exidx.text.HAL_MPU_ConfigMemoryAttributes) refers to hal_cortex.o(.text.HAL_MPU_ConfigMemoryAttributes) for [Anonymous Symbol]
    hal_cortex.o(.text.MPU_ConfigMemoryAttributes) refers to hal_cortex.o(.rodata.str1.1) for .L.str
    hal_cortex.o(.text.MPU_ConfigMemoryAttributes) refers to main.o(.text.assert_failed) for assert_failed
    hal_cortex.o(.ARM.exidx.text.MPU_ConfigMemoryAttributes) refers to hal_cortex.o(.text.MPU_ConfigMemoryAttributes) for [Anonymous Symbol]
    hal_cortex.o(.text.HAL_NVIC_GetPriorityGrouping) refers to hal_cortex.o(.text.__NVIC_GetPriorityGrouping) for __NVIC_GetPriorityGrouping
    hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetPriorityGrouping) refers to hal_cortex.o(.text.HAL_NVIC_GetPriorityGrouping) for [Anonymous Symbol]
    hal_cortex.o(.text.HAL_NVIC_GetPriority) refers to hal_cortex.o(.rodata.str1.1) for .L.str
    hal_cortex.o(.text.HAL_NVIC_GetPriority) refers to main.o(.text.assert_failed) for assert_failed
    hal_cortex.o(.text.HAL_NVIC_GetPriority) refers to hal_cortex.o(.text.__NVIC_GetPriority) for __NVIC_GetPriority
    hal_cortex.o(.text.HAL_NVIC_GetPriority) refers to hal_cortex.o(.text.NVIC_DecodePriority) for NVIC_DecodePriority
    hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetPriority) refers to hal_cortex.o(.text.HAL_NVIC_GetPriority) for [Anonymous Symbol]
    hal_cortex.o(.ARM.exidx.text.NVIC_DecodePriority) refers to hal_cortex.o(.text.NVIC_DecodePriority) for [Anonymous Symbol]
    hal_cortex.o(.ARM.exidx.text.__NVIC_GetPriority) refers to hal_cortex.o(.text.__NVIC_GetPriority) for [Anonymous Symbol]
    hal_cortex.o(.text.HAL_NVIC_SetPendingIRQ) refers to hal_cortex.o(.rodata.str1.1) for .L.str
    hal_cortex.o(.text.HAL_NVIC_SetPendingIRQ) refers to main.o(.text.assert_failed) for assert_failed
    hal_cortex.o(.text.HAL_NVIC_SetPendingIRQ) refers to hal_cortex.o(.text.__NVIC_SetPendingIRQ) for __NVIC_SetPendingIRQ
    hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SetPendingIRQ) refers to hal_cortex.o(.text.HAL_NVIC_SetPendingIRQ) for [Anonymous Symbol]
    hal_cortex.o(.ARM.exidx.text.__NVIC_SetPendingIRQ) refers to hal_cortex.o(.text.__NVIC_SetPendingIRQ) for [Anonymous Symbol]
    hal_cortex.o(.text.HAL_NVIC_GetPendingIRQ) refers to hal_cortex.o(.rodata.str1.1) for .L.str
    hal_cortex.o(.text.HAL_NVIC_GetPendingIRQ) refers to main.o(.text.assert_failed) for assert_failed
    hal_cortex.o(.text.HAL_NVIC_GetPendingIRQ) refers to hal_cortex.o(.text.__NVIC_GetPendingIRQ) for __NVIC_GetPendingIRQ
    hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetPendingIRQ) refers to hal_cortex.o(.text.HAL_NVIC_GetPendingIRQ) for [Anonymous Symbol]
    hal_cortex.o(.ARM.exidx.text.__NVIC_GetPendingIRQ) refers to hal_cortex.o(.text.__NVIC_GetPendingIRQ) for [Anonymous Symbol]
    hal_cortex.o(.text.HAL_NVIC_ClearPendingIRQ) refers to hal_cortex.o(.rodata.str1.1) for .L.str
    hal_cortex.o(.text.HAL_NVIC_ClearPendingIRQ) refers to main.o(.text.assert_failed) for assert_failed
    hal_cortex.o(.text.HAL_NVIC_ClearPendingIRQ) refers to hal_cortex.o(.text.__NVIC_ClearPendingIRQ) for __NVIC_ClearPendingIRQ
    hal_cortex.o(.ARM.exidx.text.HAL_NVIC_ClearPendingIRQ) refers to hal_cortex.o(.text.HAL_NVIC_ClearPendingIRQ) for [Anonymous Symbol]
    hal_cortex.o(.ARM.exidx.text.__NVIC_ClearPendingIRQ) refers to hal_cortex.o(.text.__NVIC_ClearPendingIRQ) for [Anonymous Symbol]
    hal_cortex.o(.text.HAL_NVIC_GetActive) refers to hal_cortex.o(.rodata.str1.1) for .L.str
    hal_cortex.o(.text.HAL_NVIC_GetActive) refers to main.o(.text.assert_failed) for assert_failed
    hal_cortex.o(.text.HAL_NVIC_GetActive) refers to hal_cortex.o(.text.__NVIC_GetActive) for __NVIC_GetActive
    hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetActive) refers to hal_cortex.o(.text.HAL_NVIC_GetActive) for [Anonymous Symbol]
    hal_cortex.o(.ARM.exidx.text.__NVIC_GetActive) refers to hal_cortex.o(.text.__NVIC_GetActive) for [Anonymous Symbol]
    hal_cortex.o(.text.HAL_SYSTICK_CLKSourceConfig) refers to hal_cortex.o(.rodata.str1.1) for .L.str
    hal_cortex.o(.text.HAL_SYSTICK_CLKSourceConfig) refers to main.o(.text.assert_failed) for assert_failed
    hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_CLKSourceConfig) refers to hal_cortex.o(.text.HAL_SYSTICK_CLKSourceConfig) for [Anonymous Symbol]
    hal_cortex.o(.text.HAL_SYSTICK_IRQHandler) refers to hal_cortex.o(.text.HAL_SYSTICK_Callback) for HAL_SYSTICK_Callback
    hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_IRQHandler) refers to hal_cortex.o(.text.HAL_SYSTICK_IRQHandler) for [Anonymous Symbol]
    hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_Callback) refers to hal_cortex.o(.text.HAL_SYSTICK_Callback) for [Anonymous Symbol]
    hal_dma.o(.ARM.exidx.text.HAL_DMA_IRQHandler) refers to hal_dma.o(.text.HAL_DMA_IRQHandler) for [Anonymous Symbol]
    hal_dma.o(.text.HAL_DMA_Init) refers to hal_dma.o(.rodata.str1.1) for .L.str
    hal_dma.o(.text.HAL_DMA_Init) refers to main.o(.text.assert_failed) for assert_failed
    hal_dma.o(.ARM.exidx.text.HAL_DMA_Init) refers to hal_dma.o(.text.HAL_DMA_Init) for [Anonymous Symbol]
    hal_dma.o(.text.HAL_DMA_DeInit) refers to hal_dma.o(.rodata.str1.1) for .L.str
    hal_dma.o(.text.HAL_DMA_DeInit) refers to main.o(.text.assert_failed) for assert_failed
    hal_dma.o(.ARM.exidx.text.HAL_DMA_DeInit) refers to hal_dma.o(.text.HAL_DMA_DeInit) for [Anonymous Symbol]
    hal_dma.o(.text.HAL_DMA_RegisterCallback) refers to hal_dma.o(.rodata.str1.1) for .L.str
    hal_dma.o(.text.HAL_DMA_RegisterCallback) refers to main.o(.text.assert_failed) for assert_failed
    hal_dma.o(.ARM.exidx.text.HAL_DMA_RegisterCallback) refers to hal_dma.o(.text.HAL_DMA_RegisterCallback) for [Anonymous Symbol]
    hal_dma.o(.text.HAL_DMA_UnRegisterCallback) refers to hal_dma.o(.rodata.str1.1) for .L.str
    hal_dma.o(.text.HAL_DMA_UnRegisterCallback) refers to main.o(.text.assert_failed) for assert_failed
    hal_dma.o(.ARM.exidx.text.HAL_DMA_UnRegisterCallback) refers to hal_dma.o(.text.HAL_DMA_UnRegisterCallback) for [Anonymous Symbol]
    hal_dma.o(.text.HAL_DMA_Start) refers to hal_dma.o(.rodata.str1.1) for .L.str
    hal_dma.o(.text.HAL_DMA_Start) refers to main.o(.text.assert_failed) for assert_failed
    hal_dma.o(.ARM.exidx.text.HAL_DMA_Start) refers to hal_dma.o(.text.HAL_DMA_Start) for [Anonymous Symbol]
    hal_dma.o(.text.HAL_DMA_Start_IT) refers to hal_dma.o(.rodata.str1.1) for .L.str
    hal_dma.o(.text.HAL_DMA_Start_IT) refers to main.o(.text.assert_failed) for assert_failed
    hal_dma.o(.ARM.exidx.text.HAL_DMA_Start_IT) refers to hal_dma.o(.text.HAL_DMA_Start_IT) for [Anonymous Symbol]
    hal_dma.o(.text.HAL_DMA_InitLink) refers to hal_dma.o(.rodata.str1.1) for .L.str
    hal_dma.o(.text.HAL_DMA_InitLink) refers to main.o(.text.assert_failed) for assert_failed
    hal_dma.o(.ARM.exidx.text.HAL_DMA_InitLink) refers to hal_dma.o(.text.HAL_DMA_InitLink) for [Anonymous Symbol]
    hal_dma.o(.ARM.exidx.text.HAL_DMA_SetLinkNext) refers to hal_dma.o(.text.HAL_DMA_SetLinkNext) for [Anonymous Symbol]
    hal_dma.o(.text.HAL_DMA_Start_Link) refers to hal_dma.o(.rodata.str1.1) for .L.str
    hal_dma.o(.text.HAL_DMA_Start_Link) refers to main.o(.text.assert_failed) for assert_failed
    hal_dma.o(.ARM.exidx.text.HAL_DMA_Start_Link) refers to hal_dma.o(.text.HAL_DMA_Start_Link) for [Anonymous Symbol]
    hal_dma.o(.text.HAL_DMA_Abort) refers to hal_dma.o(.rodata.str1.1) for .L.str
    hal_dma.o(.text.HAL_DMA_Abort) refers to main.o(.text.assert_failed) for assert_failed
    hal_dma.o(.ARM.exidx.text.HAL_DMA_Abort) refers to hal_dma.o(.text.HAL_DMA_Abort) for [Anonymous Symbol]
    hal_dma.o(.text.HAL_DMA_GetState) refers to hal_dma.o(.rodata.str1.1) for .L.str
    hal_dma.o(.text.HAL_DMA_GetState) refers to main.o(.text.assert_failed) for assert_failed
    hal_dma.o(.ARM.exidx.text.HAL_DMA_GetState) refers to hal_dma.o(.text.HAL_DMA_GetState) for [Anonymous Symbol]
    hal_rcc.o(.text.HAL_RCC_OscConfig) refers to hal_rcc.o(.rodata.str1.1) for .L.str
    hal_rcc.o(.text.HAL_RCC_OscConfig) refers to main.o(.text.assert_failed) for assert_failed
    hal_rcc.o(.text.HAL_RCC_OscConfig) refers to hal_rcc.o(.text.HAL_RCC_GetSysCoreClockFreq) for HAL_RCC_GetSysCoreClockFreq
    hal_rcc.o(.text.HAL_RCC_OscConfig) refers to system_acm32g103.o(.data.g_SystemCoreClock) for g_SystemCoreClock
    hal_rcc.o(.text.HAL_RCC_OscConfig) refers to hal_rcc.o(.text.HAL_EFLASH_SetRdwaitBySysCoreClock) for HAL_EFLASH_SetRdwaitBySysCoreClock
    hal_rcc.o(.text.HAL_RCC_OscConfig) refers to hal.o(.bss.g_systickHandle) for g_systickHandle
    hal_rcc.o(.text.HAL_RCC_OscConfig) refers to acm32g103_it.o(.text.HAL_InitTick) for HAL_InitTick
    hal_rcc.o(.ARM.exidx.text.HAL_RCC_OscConfig) refers to hal_rcc.o(.text.HAL_RCC_OscConfig) for [Anonymous Symbol]
    hal_rcc.o(.text.HAL_RCC_GetSysCoreClockFreq) refers to hal_rcc.o(.text.HAL_RCC_GetSYSCLKFreq) for HAL_RCC_GetSYSCLKFreq
    hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetSysCoreClockFreq) refers to hal_rcc.o(.text.HAL_RCC_GetSysCoreClockFreq) for [Anonymous Symbol]
    hal_rcc.o(.ARM.exidx.text.HAL_EFLASH_SetRdwaitBySysCoreClock) refers to hal_rcc.o(.text.HAL_EFLASH_SetRdwaitBySysCoreClock) for [Anonymous Symbol]
    hal_rcc.o(.text.HAL_RCC_ClockConfig) refers to hal_rcc.o(.rodata.str1.1) for .L.str
    hal_rcc.o(.text.HAL_RCC_ClockConfig) refers to main.o(.text.assert_failed) for assert_failed
    hal_rcc.o(.text.HAL_RCC_ClockConfig) refers to hal_rcc.o(.text.HAL_RCC_GetSysCoreClockFreq) for HAL_RCC_GetSysCoreClockFreq
    hal_rcc.o(.text.HAL_RCC_ClockConfig) refers to system_acm32g103.o(.data.g_SystemCoreClock) for g_SystemCoreClock
    hal_rcc.o(.text.HAL_RCC_ClockConfig) refers to hal_rcc.o(.text.HAL_EFLASH_SetRdwaitBySysCoreClock) for HAL_EFLASH_SetRdwaitBySysCoreClock
    hal_rcc.o(.text.HAL_RCC_ClockConfig) refers to hal.o(.bss.g_systickHandle) for g_systickHandle
    hal_rcc.o(.text.HAL_RCC_ClockConfig) refers to acm32g103_it.o(.text.HAL_InitTick) for HAL_InitTick
    hal_rcc.o(.ARM.exidx.text.HAL_RCC_ClockConfig) refers to hal_rcc.o(.text.HAL_RCC_ClockConfig) for [Anonymous Symbol]
    hal_rcc.o(.text.HAL_RCC_SwitchSYSCLK) refers to hal_rcc.o(.rodata.str1.1) for .L.str
    hal_rcc.o(.text.HAL_RCC_SwitchSYSCLK) refers to main.o(.text.assert_failed) for assert_failed
    hal_rcc.o(.text.HAL_RCC_SwitchSYSCLK) refers to hal_rcc.o(.text.HAL_RCC_GetSysCoreClockFreq) for HAL_RCC_GetSysCoreClockFreq
    hal_rcc.o(.text.HAL_RCC_SwitchSYSCLK) refers to system_acm32g103.o(.data.g_SystemCoreClock) for g_SystemCoreClock
    hal_rcc.o(.text.HAL_RCC_SwitchSYSCLK) refers to hal_rcc.o(.text.HAL_EFLASH_SetRdwaitBySysCoreClock) for HAL_EFLASH_SetRdwaitBySysCoreClock
    hal_rcc.o(.text.HAL_RCC_SwitchSYSCLK) refers to hal.o(.bss.g_systickHandle) for g_systickHandle
    hal_rcc.o(.text.HAL_RCC_SwitchSYSCLK) refers to acm32g103_it.o(.text.HAL_InitTick) for HAL_InitTick
    hal_rcc.o(.ARM.exidx.text.HAL_RCC_SwitchSYSCLK) refers to hal_rcc.o(.text.HAL_RCC_SwitchSYSCLK) for [Anonymous Symbol]
    hal_rcc.o(.text.HAL_RCC_LPTIM1ClockConfig) refers to hal_rcc.o(.rodata.str1.1) for .L.str
    hal_rcc.o(.text.HAL_RCC_LPTIM1ClockConfig) refers to main.o(.text.assert_failed) for assert_failed
    hal_rcc.o(.ARM.exidx.text.HAL_RCC_LPTIM1ClockConfig) refers to hal_rcc.o(.text.HAL_RCC_LPTIM1ClockConfig) for [Anonymous Symbol]
    hal_rcc.o(.text.HAL_RCC_FLTClockConfig) refers to hal_rcc.o(.rodata.str1.1) for .L.str
    hal_rcc.o(.text.HAL_RCC_FLTClockConfig) refers to main.o(.text.assert_failed) for assert_failed
    hal_rcc.o(.ARM.exidx.text.HAL_RCC_FLTClockConfig) refers to hal_rcc.o(.text.HAL_RCC_FLTClockConfig) for [Anonymous Symbol]
    hal_rcc.o(.text.HAL_RCC_LPUART1ClockConfig) refers to hal_rcc.o(.rodata.str1.1) for .L.str
    hal_rcc.o(.text.HAL_RCC_LPUART1ClockConfig) refers to main.o(.text.assert_failed) for assert_failed
    hal_rcc.o(.ARM.exidx.text.HAL_RCC_LPUART1ClockConfig) refers to hal_rcc.o(.text.HAL_RCC_LPUART1ClockConfig) for [Anonymous Symbol]
    hal_rcc.o(.text.HAL_RCC_MCOConfig) refers to hal_rcc.o(.rodata.str1.1) for .L.str
    hal_rcc.o(.text.HAL_RCC_MCOConfig) refers to main.o(.text.assert_failed) for assert_failed
    hal_rcc.o(.ARM.exidx.text.HAL_RCC_MCOConfig) refers to hal_rcc.o(.text.HAL_RCC_MCOConfig) for [Anonymous Symbol]
    hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetRC64MVal) refers to hal_rcc.o(.text.HAL_RCC_GetRC64MVal) for [Anonymous Symbol]
    hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetRC32KVal) refers to hal_rcc.o(.text.HAL_RCC_GetRC32KVal) for [Anonymous Symbol]
    hal_rcc.o(.text.HAL_RCC_GetSYSCLKFreq) refers to hal_rcc.o(.text.HAL_RCC_GetRC64MVal) for HAL_RCC_GetRC64MVal
    hal_rcc.o(.text.HAL_RCC_GetSYSCLKFreq) refers to hal_rcc.o(.text.HAL_RCC_GetRC32KVal) for HAL_RCC_GetRC32KVal
    hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetSYSCLKFreq) refers to hal_rcc.o(.text.HAL_RCC_GetSYSCLKFreq) for [Anonymous Symbol]
    hal_rcc.o(.text.HAL_RCC_GetFCLKFreq) refers to system_acm32g103.o(.data.g_SystemCoreClock) for g_SystemCoreClock
    hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetFCLKFreq) refers to hal_rcc.o(.text.HAL_RCC_GetFCLKFreq) for [Anonymous Symbol]
    hal_rcc.o(.text.HAL_RCC_GetHCLKFreq) refers to system_acm32g103.o(.data.g_SystemCoreClock) for g_SystemCoreClock
    hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetHCLKFreq) refers to hal_rcc.o(.text.HAL_RCC_GetHCLKFreq) for [Anonymous Symbol]
    hal_rcc.o(.text.HAL_RCC_GetPCLK1Freq) refers to hal_rcc.o(.text.HAL_RCC_GetHCLKFreq) for HAL_RCC_GetHCLKFreq
    hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetPCLK1Freq) refers to hal_rcc.o(.text.HAL_RCC_GetPCLK1Freq) for [Anonymous Symbol]
    hal_rcc.o(.text.HAL_RCC_GetPCLK2Freq) refers to hal_rcc.o(.text.HAL_RCC_GetHCLKFreq) for HAL_RCC_GetHCLKFreq
    hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetPCLK2Freq) refers to hal_rcc.o(.text.HAL_RCC_GetPCLK2Freq) for [Anonymous Symbol]
    hal_rcc.o(.text.HAL_RCC_GetLPTIM1CLKFreq) refers to hal_rcc.o(.text.HAL_RCC_GetPCLK1Freq) for HAL_RCC_GetPCLK1Freq
    hal_rcc.o(.text.HAL_RCC_GetLPTIM1CLKFreq) refers to hal_rcc.o(.text.HAL_RCC_GetRC64MVal) for HAL_RCC_GetRC64MVal
    hal_rcc.o(.text.HAL_RCC_GetLPTIM1CLKFreq) refers to hal_rcc.o(.text.HAL_RCC_GetRC32KVal) for HAL_RCC_GetRC32KVal
    hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetLPTIM1CLKFreq) refers to hal_rcc.o(.text.HAL_RCC_GetLPTIM1CLKFreq) for [Anonymous Symbol]
    hal_rcc.o(.text.HAL_RCC_GetFLTCLKFreq) refers to hal_rcc.o(.text.HAL_RCC_GetPCLK1Freq) for HAL_RCC_GetPCLK1Freq
    hal_rcc.o(.text.HAL_RCC_GetFLTCLKFreq) refers to hal_rcc.o(.text.HAL_RCC_GetRC32KVal) for HAL_RCC_GetRC32KVal
    hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetFLTCLKFreq) refers to hal_rcc.o(.text.HAL_RCC_GetFLTCLKFreq) for [Anonymous Symbol]
    hal_rcc.o(.text.HAL_RCC_GetLPUART1CLKFreq) refers to hal_rcc.o(.text.HAL_RCC_GetRC32KVal) for HAL_RCC_GetRC32KVal
    hal_rcc.o(.text.HAL_RCC_GetLPUART1CLKFreq) refers to hal_rcc.o(.text.HAL_RCC_GetPCLK1Freq) for HAL_RCC_GetPCLK1Freq
    hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetLPUART1CLKFreq) refers to hal_rcc.o(.text.HAL_RCC_GetLPUART1CLKFreq) for [Anonymous Symbol]
    hal_gpio.o(.text.HAL_GPIO_Init) refers to hal_gpio.o(.rodata.str1.1) for .L.str
    hal_gpio.o(.text.HAL_GPIO_Init) refers to main.o(.text.assert_failed) for assert_failed
    hal_gpio.o(.text.HAL_GPIO_Init) refers to hal_exti.o(.text.HAL_EXTI_ClearPending) for HAL_EXTI_ClearPending
    hal_gpio.o(.text.HAL_GPIO_Init) refers to hal_exti.o(.text.HAL_EXTI_SetConfigLine) for HAL_EXTI_SetConfigLine
    hal_gpio.o(.text.HAL_GPIO_Init) refers to hal_exti.o(.text.HAL_EXTI_IsConfigLine) for HAL_EXTI_IsConfigLine
    hal_gpio.o(.text.HAL_GPIO_Init) refers to hal_exti.o(.text.HAL_EXTI_ClearConfigLine) for HAL_EXTI_ClearConfigLine
    hal_gpio.o(.ARM.exidx.text.HAL_GPIO_Init) refers to hal_gpio.o(.text.HAL_GPIO_Init) for [Anonymous Symbol]
    hal_gpio.o(.text.HAL_GPIO_DeInit) refers to hal_gpio.o(.rodata.str1.1) for .L.str
    hal_gpio.o(.text.HAL_GPIO_DeInit) refers to main.o(.text.assert_failed) for assert_failed
    hal_gpio.o(.text.HAL_GPIO_DeInit) refers to hal_exti.o(.text.HAL_EXTI_IsConfigLine) for HAL_EXTI_IsConfigLine
    hal_gpio.o(.text.HAL_GPIO_DeInit) refers to hal_exti.o(.text.HAL_EXTI_ClearConfigLine) for HAL_EXTI_ClearConfigLine
    hal_gpio.o(.text.HAL_GPIO_DeInit) refers to hal_exti.o(.text.HAL_EXTI_ClearPending) for HAL_EXTI_ClearPending
    hal_gpio.o(.ARM.exidx.text.HAL_GPIO_DeInit) refers to hal_gpio.o(.text.HAL_GPIO_DeInit) for [Anonymous Symbol]
    hal_gpio.o(.text.HAL_GPIO_WritePin) refers to hal_gpio.o(.rodata.str1.1) for .L.str
    hal_gpio.o(.text.HAL_GPIO_WritePin) refers to main.o(.text.assert_failed) for assert_failed
    hal_gpio.o(.ARM.exidx.text.HAL_GPIO_WritePin) refers to hal_gpio.o(.text.HAL_GPIO_WritePin) for [Anonymous Symbol]
    hal_gpio.o(.text.HAL_GPIO_ReadPin) refers to hal_gpio.o(.rodata.str1.1) for .L.str
    hal_gpio.o(.text.HAL_GPIO_ReadPin) refers to main.o(.text.assert_failed) for assert_failed
    hal_gpio.o(.ARM.exidx.text.HAL_GPIO_ReadPin) refers to hal_gpio.o(.text.HAL_GPIO_ReadPin) for [Anonymous Symbol]
    hal_gpio.o(.text.HAL_GPIO_TogglePin) refers to hal_gpio.o(.rodata.str1.1) for .L.str
    hal_gpio.o(.text.HAL_GPIO_TogglePin) refers to main.o(.text.assert_failed) for assert_failed
    hal_gpio.o(.ARM.exidx.text.HAL_GPIO_TogglePin) refers to hal_gpio.o(.text.HAL_GPIO_TogglePin) for [Anonymous Symbol]
    hal_gpio.o(.text.HAL_GPIO_LockPin) refers to hal_gpio.o(.rodata.str1.1) for .L.str
    hal_gpio.o(.text.HAL_GPIO_LockPin) refers to main.o(.text.assert_failed) for assert_failed
    hal_gpio.o(.ARM.exidx.text.HAL_GPIO_LockPin) refers to hal_gpio.o(.text.HAL_GPIO_LockPin) for [Anonymous Symbol]
    hal_exti.o(.text.HAL_EXTI_IRQHandler) refers to hal_exti.o(.rodata.str1.1) for .L.str
    hal_exti.o(.text.HAL_EXTI_IRQHandler) refers to main.o(.text.assert_failed) for assert_failed
    hal_exti.o(.text.HAL_EXTI_IRQHandler) refers to hal_exti.o(.text.HAL_EXTI_LineCallback) for HAL_EXTI_LineCallback
    hal_exti.o(.ARM.exidx.text.HAL_EXTI_IRQHandler) refers to hal_exti.o(.text.HAL_EXTI_IRQHandler) for [Anonymous Symbol]
    hal_exti.o(.ARM.exidx.text.HAL_EXTI_LineCallback) refers to hal_exti.o(.text.HAL_EXTI_LineCallback) for [Anonymous Symbol]
    hal_exti.o(.text.HAL_EXTI_SetConfigLine) refers to hal_exti.o(.rodata.str1.1) for .L.str
    hal_exti.o(.text.HAL_EXTI_SetConfigLine) refers to main.o(.text.assert_failed) for assert_failed
    hal_exti.o(.ARM.exidx.text.HAL_EXTI_SetConfigLine) refers to hal_exti.o(.text.HAL_EXTI_SetConfigLine) for [Anonymous Symbol]
    hal_exti.o(.text.HAL_EXTI_ClearConfigLine) refers to hal_exti.o(.rodata.str1.1) for .L.str
    hal_exti.o(.text.HAL_EXTI_ClearConfigLine) refers to main.o(.text.assert_failed) for assert_failed
    hal_exti.o(.ARM.exidx.text.HAL_EXTI_ClearConfigLine) refers to hal_exti.o(.text.HAL_EXTI_ClearConfigLine) for [Anonymous Symbol]
    hal_exti.o(.text.HAL_EXTI_IsConfigLine) refers to hal_exti.o(.rodata.str1.1) for .L.str
    hal_exti.o(.text.HAL_EXTI_IsConfigLine) refers to main.o(.text.assert_failed) for assert_failed
    hal_exti.o(.ARM.exidx.text.HAL_EXTI_IsConfigLine) refers to hal_exti.o(.text.HAL_EXTI_IsConfigLine) for [Anonymous Symbol]
    hal_exti.o(.text.HAL_EXTI_GenerateSWI) refers to hal_exti.o(.rodata.str1.1) for .L.str
    hal_exti.o(.text.HAL_EXTI_GenerateSWI) refers to main.o(.text.assert_failed) for assert_failed
    hal_exti.o(.ARM.exidx.text.HAL_EXTI_GenerateSWI) refers to hal_exti.o(.text.HAL_EXTI_GenerateSWI) for [Anonymous Symbol]
    hal_exti.o(.text.HAL_EXTI_GetPending) refers to hal_exti.o(.rodata.str1.1) for .L.str
    hal_exti.o(.text.HAL_EXTI_GetPending) refers to main.o(.text.assert_failed) for assert_failed
    hal_exti.o(.ARM.exidx.text.HAL_EXTI_GetPending) refers to hal_exti.o(.text.HAL_EXTI_GetPending) for [Anonymous Symbol]
    hal_exti.o(.text.HAL_EXTI_ClearPending) refers to hal_exti.o(.rodata.str1.1) for .L.str
    hal_exti.o(.text.HAL_EXTI_ClearPending) refers to main.o(.text.assert_failed) for assert_failed
    hal_exti.o(.ARM.exidx.text.HAL_EXTI_ClearPending) refers to hal_exti.o(.text.HAL_EXTI_ClearPending) for [Anonymous Symbol]
    hal_exti.o(.ARM.exidx.text.HAL_EXTI_ClearAllPending) refers to hal_exti.o(.text.HAL_EXTI_ClearAllPending) for [Anonymous Symbol]
    main.o(.text.main) refers to main.o(.text.prvSetupHardware) for prvSetupHardware
    main.o(.text.main) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    main.o(.text.main) refers to main.o(.bss.xPrintQueue) for xPrintQueue
    main.o(.text.main) refers to integer.o(.text.vStartIntegerMathTasks) for vStartIntegerMathTasks
    main.o(.text.main) refers to pollq.o(.text.vStartPolledQueueTasks) for vStartPolledQueueTasks
    main.o(.text.main) refers to semtest.o(.text.vStartSemaphoreTasks) for vStartSemaphoreTasks
    main.o(.text.main) refers to blockq.o(.text.vStartBlockingQueueTasks) for vStartBlockingQueueTasks
    main.o(.text.main) refers to main.o(.text.vCheckTask) for vCheckTask
    main.o(.text.main) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    main.o(.text.main) refers to main.o(.text.vPrintTask) for vPrintTask
    main.o(.text.main) refers to tasks.o(.text.vTaskStartScheduler) for vTaskStartScheduler
    main.o(.ARM.exidx.text.main) refers to main.o(.text.main) for [Anonymous Symbol]
    main.o(.text.prvSetupHardware) refers to hal.o(.text.HAL_Init) for HAL_Init
    main.o(.text.prvSetupHardware) refers to system_acm32g103.o(.text.SystemClock_Config) for SystemClock_Config
    main.o(.text.prvSetupHardware) refers to main.o(.text.uart_init) for uart_init
    main.o(.ARM.exidx.text.prvSetupHardware) refers to main.o(.text.prvSetupHardware) for [Anonymous Symbol]
    main.o(.text.vCheckTask) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    main.o(.text.vCheckTask) refers to main.o(.bss.xPrintQueue) for xPrintQueue
    main.o(.text.vCheckTask) refers to tasks.o(.text.vTaskDelayUntil) for vTaskDelayUntil
    main.o(.text.vCheckTask) refers to integer.o(.text.xAreIntegerMathsTaskStillRunning) for xAreIntegerMathsTaskStillRunning
    main.o(.text.vCheckTask) refers to pollq.o(.text.xArePollingQueuesStillRunning) for xArePollingQueuesStillRunning
    main.o(.text.vCheckTask) refers to semtest.o(.text.xAreSemaphoreTasksStillRunning) for xAreSemaphoreTasksStillRunning
    main.o(.text.vCheckTask) refers to blockq.o(.text.xAreBlockingQueuesStillRunning) for xAreBlockingQueuesStillRunning
    main.o(.text.vCheckTask) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    main.o(.ARM.exidx.text.vCheckTask) refers to main.o(.text.vCheckTask) for [Anonymous Symbol]
    main.o(.text.vPrintTask) refers to main.o(.bss.xPrintQueue) for xPrintQueue
    main.o(.text.vPrintTask) refers to main.o(.bss.UART2_Handle) for UART2_Handle
    main.o(.text.vPrintTask) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    main.o(.ARM.exidx.text.vPrintTask) refers to main.o(.text.vPrintTask) for [Anonymous Symbol]
    main.o(.text.assert_failed) refers to printf3.o(i.__0printf$3) for __2printf
    main.o(.ARM.exidx.text.assert_failed) refers to main.o(.text.assert_failed) for [Anonymous Symbol]
    main.o(.text.uart_init) refers to main.o(.bss.UART2_Handle) for UART2_Handle
    main.o(.text.uart_init) refers to hal_uart.o(.text.HAL_UART_Init) for HAL_UART_Init
    main.o(.text.uart_init) refers to hal_uart.o(.text.HAL_UART_SetDebugUart) for HAL_UART_SetDebugUart
    main.o(.ARM.exidx.text.uart_init) refers to main.o(.text.uart_init) for [Anonymous Symbol]
    semtest.o(.text.vStartSemaphoreTasks) refers to heap_2.o(.text.pvPortMalloc) for pvPortMalloc
    semtest.o(.text.vStartSemaphoreTasks) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    semtest.o(.text.vStartSemaphoreTasks) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    semtest.o(.text.vStartSemaphoreTasks) refers to semtest.o(.text.prvSemaphoreTest) for prvSemaphoreTest
    semtest.o(.text.vStartSemaphoreTasks) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    semtest.o(.ARM.exidx.text.vStartSemaphoreTasks) refers to semtest.o(.text.vStartSemaphoreTasks) for [Anonymous Symbol]
    semtest.o(.text.prvSemaphoreTest) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    semtest.o(.text.prvSemaphoreTest) refers to semtest.o(.bss.sNextCheckVariable) for sNextCheckVariable
    semtest.o(.text.prvSemaphoreTest) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    semtest.o(.text.prvSemaphoreTest) refers to semtest.o(.bss.sCheckVariables) for sCheckVariables
    semtest.o(.text.prvSemaphoreTest) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    semtest.o(.text.prvSemaphoreTest) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    semtest.o(.text.prvSemaphoreTest) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    semtest.o(.ARM.exidx.text.prvSemaphoreTest) refers to semtest.o(.text.prvSemaphoreTest) for [Anonymous Symbol]
    semtest.o(.text.xAreSemaphoreTasksStillRunning) refers to semtest.o(.bss.xAreSemaphoreTasksStillRunning.sLastCheckVariables) for xAreSemaphoreTasksStillRunning.sLastCheckVariables
    semtest.o(.text.xAreSemaphoreTasksStillRunning) refers to semtest.o(.bss.sCheckVariables) for sCheckVariables
    semtest.o(.ARM.exidx.text.xAreSemaphoreTasksStillRunning) refers to semtest.o(.text.xAreSemaphoreTasksStillRunning) for [Anonymous Symbol]
    integer.o(.text.vStartIntegerMathTasks) refers to integer.o(.text.vCompeteingIntMathTask) for vCompeteingIntMathTask
    integer.o(.text.vStartIntegerMathTasks) refers to integer.o(.bss.xTaskCheck) for xTaskCheck
    integer.o(.text.vStartIntegerMathTasks) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    integer.o(.ARM.exidx.text.vStartIntegerMathTasks) refers to integer.o(.text.vStartIntegerMathTasks) for [Anonymous Symbol]
    integer.o(.text.vCompeteingIntMathTask) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    integer.o(.text.vCompeteingIntMathTask) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    integer.o(.ARM.exidx.text.vCompeteingIntMathTask) refers to integer.o(.text.vCompeteingIntMathTask) for [Anonymous Symbol]
    integer.o(.text.xAreIntegerMathsTaskStillRunning) refers to integer.o(.bss.xTaskCheck) for xTaskCheck
    integer.o(.ARM.exidx.text.xAreIntegerMathsTaskStillRunning) refers to integer.o(.text.xAreIntegerMathsTaskStillRunning) for [Anonymous Symbol]
    pollq.o(.text.vStartPolledQueueTasks) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    pollq.o(.text.vStartPolledQueueTasks) refers to pollq.o(.bss.vStartPolledQueueTasks.xPolledQueue) for vStartPolledQueueTasks.xPolledQueue
    pollq.o(.text.vStartPolledQueueTasks) refers to pollq.o(.text.vPolledQueueConsumer) for vPolledQueueConsumer
    pollq.o(.text.vStartPolledQueueTasks) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    pollq.o(.text.vStartPolledQueueTasks) refers to pollq.o(.text.vPolledQueueProducer) for vPolledQueueProducer
    pollq.o(.ARM.exidx.text.vStartPolledQueueTasks) refers to pollq.o(.text.vStartPolledQueueTasks) for [Anonymous Symbol]
    pollq.o(.text.vPolledQueueConsumer) refers to pollq.o(.bss.xPollingConsumerCount) for xPollingConsumerCount
    pollq.o(.text.vPolledQueueConsumer) refers to queue.o(.text.uxQueueMessagesWaiting) for uxQueueMessagesWaiting
    pollq.o(.text.vPolledQueueConsumer) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    pollq.o(.text.vPolledQueueConsumer) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    pollq.o(.text.vPolledQueueConsumer) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    pollq.o(.text.vPolledQueueConsumer) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    pollq.o(.ARM.exidx.text.vPolledQueueConsumer) refers to pollq.o(.text.vPolledQueueConsumer) for [Anonymous Symbol]
    pollq.o(.text.vPolledQueueProducer) refers to pollq.o(.bss.xPollingProducerCount) for xPollingProducerCount
    pollq.o(.text.vPolledQueueProducer) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    pollq.o(.text.vPolledQueueProducer) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    pollq.o(.text.vPolledQueueProducer) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    pollq.o(.text.vPolledQueueProducer) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    pollq.o(.ARM.exidx.text.vPolledQueueProducer) refers to pollq.o(.text.vPolledQueueProducer) for [Anonymous Symbol]
    pollq.o(.text.xArePollingQueuesStillRunning) refers to pollq.o(.bss.xPollingConsumerCount) for xPollingConsumerCount
    pollq.o(.text.xArePollingQueuesStillRunning) refers to pollq.o(.bss.xPollingProducerCount) for xPollingProducerCount
    pollq.o(.ARM.exidx.text.xArePollingQueuesStillRunning) refers to pollq.o(.text.xArePollingQueuesStillRunning) for [Anonymous Symbol]
    blockq.o(.text.vStartBlockingQueueTasks) refers to heap_2.o(.text.pvPortMalloc) for pvPortMalloc
    blockq.o(.text.vStartBlockingQueueTasks) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    blockq.o(.text.vStartBlockingQueueTasks) refers to blockq.o(.bss.sBlockingConsumerCount) for sBlockingConsumerCount
    blockq.o(.text.vStartBlockingQueueTasks) refers to blockq.o(.bss.sBlockingProducerCount) for sBlockingProducerCount
    blockq.o(.text.vStartBlockingQueueTasks) refers to blockq.o(.text.vBlockingQueueConsumer) for vBlockingQueueConsumer
    blockq.o(.text.vStartBlockingQueueTasks) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    blockq.o(.text.vStartBlockingQueueTasks) refers to blockq.o(.text.vBlockingQueueProducer) for vBlockingQueueProducer
    blockq.o(.ARM.exidx.text.vStartBlockingQueueTasks) refers to blockq.o(.text.vStartBlockingQueueTasks) for [Anonymous Symbol]
    blockq.o(.text.vBlockingQueueConsumer) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    blockq.o(.ARM.exidx.text.vBlockingQueueConsumer) refers to blockq.o(.text.vBlockingQueueConsumer) for [Anonymous Symbol]
    blockq.o(.text.vBlockingQueueProducer) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    blockq.o(.ARM.exidx.text.vBlockingQueueProducer) refers to blockq.o(.text.vBlockingQueueProducer) for [Anonymous Symbol]
    blockq.o(.text.xAreBlockingQueuesStillRunning) refers to blockq.o(.bss.sBlockingConsumerCount) for sBlockingConsumerCount
    blockq.o(.text.xAreBlockingQueuesStillRunning) refers to blockq.o(.bss.xAreBlockingQueuesStillRunning.sLastBlockingConsumerCount) for xAreBlockingQueuesStillRunning.sLastBlockingConsumerCount
    blockq.o(.text.xAreBlockingQueuesStillRunning) refers to blockq.o(.bss.sBlockingProducerCount) for sBlockingProducerCount
    blockq.o(.text.xAreBlockingQueuesStillRunning) refers to blockq.o(.bss.xAreBlockingQueuesStillRunning.sLastBlockingProducerCount) for xAreBlockingQueuesStillRunning.sLastBlockingProducerCount
    blockq.o(.ARM.exidx.text.xAreBlockingQueuesStillRunning) refers to blockq.o(.text.xAreBlockingQueuesStillRunning) for [Anonymous Symbol]
    acm32g103_it.o(.text.SVC_Handler) refers to port.o(.text.vPortSVCHandler) for vPortSVCHandler
    acm32g103_it.o(.ARM.exidx.text.SVC_Handler) refers to acm32g103_it.o(.text.SVC_Handler) for [Anonymous Symbol]
    acm32g103_it.o(.text.PendSV_Handler) refers to port.o(.text.xPortPendSVHandler) for xPortPendSVHandler
    acm32g103_it.o(.ARM.exidx.text.PendSV_Handler) refers to acm32g103_it.o(.text.PendSV_Handler) for [Anonymous Symbol]
    acm32g103_it.o(.text.SysTick_Handler) refers to port.o(.text.xPortSysTickHandler) for xPortSysTickHandler
    acm32g103_it.o(.ARM.exidx.text.SysTick_Handler) refers to acm32g103_it.o(.text.SysTick_Handler) for [Anonymous Symbol]
    acm32g103_it.o(.ARM.exidx.text.HAL_InitTick) refers to acm32g103_it.o(.text.HAL_InitTick) for [Anonymous Symbol]
    tasks.o(.text.xTaskCreate) refers to heap_2.o(.text.pvPortMalloc) for pvPortMalloc
    tasks.o(.text.xTaskCreate) refers to heap_2.o(.text.vPortFree) for vPortFree
    tasks.o(.text.xTaskCreate) refers to tasks.o(.text.prvInitialiseNewTask) for prvInitialiseNewTask
    tasks.o(.text.xTaskCreate) refers to tasks.o(.text.prvAddNewTaskToReadyList) for prvAddNewTaskToReadyList
    tasks.o(.ARM.exidx.text.xTaskCreate) refers to tasks.o(.text.xTaskCreate) for [Anonymous Symbol]
    tasks.o(.text.prvInitialiseNewTask) refers to list.o(.text.vListInitialiseItem) for vListInitialiseItem
    tasks.o(.text.prvInitialiseNewTask) refers to port.o(.text.pxPortInitialiseStack) for pxPortInitialiseStack
    tasks.o(.ARM.exidx.text.prvInitialiseNewTask) refers to tasks.o(.text.prvInitialiseNewTask) for [Anonymous Symbol]
    tasks.o(.text.prvAddNewTaskToReadyList) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.text.prvInitialiseTaskLists) for prvInitialiseTaskLists
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.uxTaskNumber) for uxTaskNumber
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.prvAddNewTaskToReadyList) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.prvAddNewTaskToReadyList) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.prvAddNewTaskToReadyList) refers to tasks.o(.text.prvAddNewTaskToReadyList) for [Anonymous Symbol]
    tasks.o(.text.vTaskDelete) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskDelete) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxTaskNumber) for uxTaskNumber
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.vTaskDelete) refers to tasks.o(.text.prvDeleteTCB) for prvDeleteTCB
    tasks.o(.text.vTaskDelete) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.vTaskDelete) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxDeletedTasksWaitingCleanUp) for uxDeletedTasksWaitingCleanUp
    tasks.o(.text.vTaskDelete) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.ARM.exidx.text.vTaskDelete) refers to tasks.o(.text.vTaskDelete) for [Anonymous Symbol]
    tasks.o(.text.prvDeleteTCB) refers to heap_2.o(.text.vPortFree) for vPortFree
    tasks.o(.ARM.exidx.text.prvDeleteTCB) refers to tasks.o(.text.prvDeleteTCB) for [Anonymous Symbol]
    tasks.o(.text.prvResetNextTaskUnblockTime) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.prvResetNextTaskUnblockTime) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.ARM.exidx.text.prvResetNextTaskUnblockTime) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for [Anonymous Symbol]
    tasks.o(.text.vTaskDelayUntil) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.vTaskDelayUntil) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.vTaskDelayUntil) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.vTaskDelayUntil) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.vTaskDelayUntil) refers to tasks.o(.text.vTaskDelayUntil) for [Anonymous Symbol]
    tasks.o(.text.vTaskSuspendAll) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.ARM.exidx.text.vTaskSuspendAll) refers to tasks.o(.text.vTaskSuspendAll) for [Anonymous Symbol]
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to list.o(.text.vListInsert) for vListInsert
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.ARM.exidx.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for [Anonymous Symbol]
    tasks.o(.text.xTaskResumeAll) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskResumeAll) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskResumeAll) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskResumeAll) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxPendedTicks) for uxPendedTicks
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.text.xTaskIncrementTick) for xTaskIncrementTick
    tasks.o(.ARM.exidx.text.xTaskResumeAll) refers to tasks.o(.text.xTaskResumeAll) for [Anonymous Symbol]
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.vTaskDelay) refers to tasks.o(.text.vTaskDelay) for [Anonymous Symbol]
    tasks.o(.text.uxTaskPriorityGet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.uxTaskPriorityGet) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.uxTaskPriorityGet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.uxTaskPriorityGet) refers to tasks.o(.text.uxTaskPriorityGet) for [Anonymous Symbol]
    tasks.o(.text.uxTaskPriorityGetFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.uxTaskPriorityGetFromISR) refers to tasks.o(.text.uxTaskPriorityGetFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskPrioritySet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskPrioritySet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskPrioritySet) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskPrioritySet) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.ARM.exidx.text.vTaskPrioritySet) refers to tasks.o(.text.vTaskPrioritySet) for [Anonymous Symbol]
    tasks.o(.text.vTaskSuspend) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskSuspend) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.vTaskSuspend) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskSuspend) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    tasks.o(.ARM.exidx.text.vTaskSuspend) refers to tasks.o(.text.vTaskSuspend) for [Anonymous Symbol]
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.vTaskSwitchContext) refers to tasks.o(.text.vTaskSwitchContext) for [Anonymous Symbol]
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskResume) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskResume) refers to tasks.o(.text.prvTaskIsTaskSuspended) for prvTaskIsTaskSuspended
    tasks.o(.text.vTaskResume) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskResume) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskResume) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskResume) refers to tasks.o(.text.vTaskResume) for [Anonymous Symbol]
    tasks.o(.text.prvTaskIsTaskSuspended) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.ARM.exidx.text.prvTaskIsTaskSuspended) refers to tasks.o(.text.prvTaskIsTaskSuspended) for [Anonymous Symbol]
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.text.prvTaskIsTaskSuspended) for prvTaskIsTaskSuspended
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskResumeFromISR) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskResumeFromISR) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.ARM.exidx.text.xTaskResumeFromISR) refers to tasks.o(.text.xTaskResumeFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xIdleTaskHandle) for xIdleTaskHandle
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.text.prvIdleTask) for prvIdleTask
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.vTaskStartScheduler) refers to port.o(.text.xPortStartScheduler) for xPortStartScheduler
    tasks.o(.ARM.exidx.text.vTaskStartScheduler) refers to tasks.o(.text.vTaskStartScheduler) for [Anonymous Symbol]
    tasks.o(.text.prvIdleTask) refers to tasks.o(.text.prvCheckTasksWaitingTermination) for prvCheckTasksWaitingTermination
    tasks.o(.ARM.exidx.text.prvIdleTask) refers to tasks.o(.text.prvIdleTask) for [Anonymous Symbol]
    tasks.o(.text.vTaskEndScheduler) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskEndScheduler) refers to port.o(.text.vPortEndScheduler) for vPortEndScheduler
    tasks.o(.ARM.exidx.text.vTaskEndScheduler) refers to tasks.o(.text.vTaskEndScheduler) for [Anonymous Symbol]
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.uxPendedTicks) for uxPendedTicks
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskIncrementTick) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskIncrementTick) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.xTaskIncrementTick) refers to tasks.o(.text.xTaskIncrementTick) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetTickCount) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.xTaskGetTickCount) refers to tasks.o(.text.xTaskGetTickCount) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetTickCountFromISR) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.xTaskGetTickCountFromISR) refers to tasks.o(.text.xTaskGetTickCountFromISR) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetNumberOfTasks) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.ARM.exidx.text.uxTaskGetNumberOfTasks) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for [Anonymous Symbol]
    tasks.o(.text.pcTaskGetName) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.pcTaskGetName) refers to tasks.o(.text.pcTaskGetName) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPlaceOnEventList) refers to list.o(.text.vListInsert) for vListInsert
    tasks.o(.text.vTaskPlaceOnEventList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.ARM.exidx.text.vTaskPlaceOnEventList) refers to tasks.o(.text.vTaskPlaceOnEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.ARM.exidx.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.text.vTaskPlaceOnUnorderedEventList) for [Anonymous Symbol]
    tasks.o(.text.xTaskRemoveFromEventList) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskRemoveFromEventList) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.xTaskRemoveFromEventList) refers to tasks.o(.text.xTaskRemoveFromEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.text.vTaskRemoveFromUnorderedEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskSetTimeOutState) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskSetTimeOutState) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.vTaskSetTimeOutState) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.vTaskSetTimeOutState) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskSetTimeOutState) refers to tasks.o(.text.vTaskSetTimeOutState) for [Anonymous Symbol]
    tasks.o(.text.vTaskInternalSetTimeOutState) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.vTaskInternalSetTimeOutState) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.vTaskInternalSetTimeOutState) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for [Anonymous Symbol]
    tasks.o(.text.xTaskCheckForTimeOut) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    tasks.o(.text.xTaskCheckForTimeOut) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskCheckForTimeOut) refers to tasks.o(.text.xTaskCheckForTimeOut) for [Anonymous Symbol]
    tasks.o(.text.vTaskMissedYield) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.vTaskMissedYield) refers to tasks.o(.text.vTaskMissedYield) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetCurrentTaskHandle) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.xTaskGetCurrentTaskHandle) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for [Anonymous Symbol]
    tasks.o(.text.uxTaskResetEventItemValue) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.uxTaskResetEventItemValue) refers to tasks.o(.text.uxTaskResetEventItemValue) for [Anonymous Symbol]
    tasks.o(.text.ulTaskNotifyTake) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.ulTaskNotifyTake) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.ulTaskNotifyTake) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.ulTaskNotifyTake) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.ulTaskNotifyTake) refers to tasks.o(.text.ulTaskNotifyTake) for [Anonymous Symbol]
    tasks.o(.text.xTaskNotifyWait) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskNotifyWait) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskNotifyWait) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.xTaskNotifyWait) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskNotifyWait) refers to tasks.o(.text.xTaskNotifyWait) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotify) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotify) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskGenericNotify) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotify) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskGenericNotify) refers to tasks.o(.text.xTaskGenericNotify) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyFromISR) refers to tasks.o(.text.xTaskGenericNotifyFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskNotifyGiveFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskNotifyGiveFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.vTaskNotifyGiveFromISR) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskNotifyGiveFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskNotifyGiveFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskNotifyGiveFromISR) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskNotifyGiveFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskNotifyGiveFromISR) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.vTaskNotifyGiveFromISR) refers to tasks.o(.text.vTaskNotifyGiveFromISR) for [Anonymous Symbol]
    tasks.o(.text.xTaskNotifyStateClear) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskNotifyStateClear) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskNotifyStateClear) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskNotifyStateClear) refers to tasks.o(.text.xTaskNotifyStateClear) for [Anonymous Symbol]
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.prvInitialiseTaskLists) refers to list.o(.text.vListInitialise) for vListInitialise
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xDelayedTaskList1) for xDelayedTaskList1
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xDelayedTaskList2) for xDelayedTaskList2
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.ARM.exidx.text.prvInitialiseTaskLists) refers to tasks.o(.text.prvInitialiseTaskLists) for [Anonymous Symbol]
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.bss.uxDeletedTasksWaitingCleanUp) for uxDeletedTasksWaitingCleanUp
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.text.prvDeleteTCB) for prvDeleteTCB
    tasks.o(.ARM.exidx.text.prvCheckTasksWaitingTermination) refers to tasks.o(.text.prvCheckTasksWaitingTermination) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInitialise) refers to list.o(.text.vListInitialise) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInitialiseItem) refers to list.o(.text.vListInitialiseItem) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInsertEnd) refers to list.o(.text.vListInsertEnd) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInsert) refers to list.o(.text.vListInsert) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.uxListRemove) refers to list.o(.text.uxListRemove) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericReset) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGenericReset) refers to list.o(.text.vListInitialise) for vListInitialise
    queue.o(.text.xQueueGenericReset) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGenericReset) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueGenericReset) refers to queue.o(.text.xQueueGenericReset) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericCreate) refers to heap_2.o(.text.pvPortMalloc) for pvPortMalloc
    queue.o(.text.xQueueGenericCreate) refers to queue.o(.text.prvInitialiseNewQueue) for prvInitialiseNewQueue
    queue.o(.ARM.exidx.text.xQueueGenericCreate) refers to queue.o(.text.xQueueGenericCreate) for [Anonymous Symbol]
    queue.o(.text.prvInitialiseNewQueue) refers to queue.o(.text.xQueueGenericReset) for xQueueGenericReset
    queue.o(.ARM.exidx.text.prvInitialiseNewQueue) refers to queue.o(.text.prvInitialiseNewQueue) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericSend) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueGenericSend) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvIsQueueFull) for prvIsQueueFull
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.xQueueGenericSend) refers to queue.o(.text.xQueueGenericSend) for [Anonymous Symbol]
    queue.o(.text.prvCopyDataToQueue) refers to memcpya.o(.text) for __aeabi_memcpy
    queue.o(.ARM.exidx.text.prvCopyDataToQueue) refers to queue.o(.text.prvCopyDataToQueue) for [Anonymous Symbol]
    queue.o(.text.prvIsQueueFull) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvIsQueueFull) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvIsQueueFull) refers to queue.o(.text.prvIsQueueFull) for [Anonymous Symbol]
    queue.o(.text.prvUnlockQueue) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvUnlockQueue) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.prvUnlockQueue) refers to tasks.o(.text.vTaskMissedYield) for vTaskMissedYield
    queue.o(.text.prvUnlockQueue) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvUnlockQueue) refers to queue.o(.text.prvUnlockQueue) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericSendFromISR) refers to queue.o(.text.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(.text.xQueueGenericSendFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.xQueueGenericSendFromISR) refers to queue.o(.text.xQueueGenericSendFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueGiveFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.xQueueGiveFromISR) refers to queue.o(.text.xQueueGiveFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(.text.xQueueReceive) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueReceive) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.ARM.exidx.text.xQueueReceive) refers to queue.o(.text.xQueueReceive) for [Anonymous Symbol]
    queue.o(.text.prvCopyDataFromQueue) refers to memcpya.o(.text) for __aeabi_memcpy
    queue.o(.ARM.exidx.text.prvCopyDataFromQueue) refers to queue.o(.text.prvCopyDataFromQueue) for [Anonymous Symbol]
    queue.o(.text.prvIsQueueEmpty) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvIsQueueEmpty) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvIsQueueEmpty) refers to queue.o(.text.prvIsQueueEmpty) for [Anonymous Symbol]
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(.text.xQueueSemaphoreTake) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueSemaphoreTake) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.ARM.exidx.text.xQueueSemaphoreTake) refers to queue.o(.text.xQueueSemaphoreTake) for [Anonymous Symbol]
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(.text.xQueuePeek) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueuePeek) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.ARM.exidx.text.xQueuePeek) refers to queue.o(.text.xQueuePeek) for [Anonymous Symbol]
    queue.o(.text.xQueueReceiveFromISR) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueueReceiveFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.xQueueReceiveFromISR) refers to queue.o(.text.xQueueReceiveFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueuePeekFromISR) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.ARM.exidx.text.xQueuePeekFromISR) refers to queue.o(.text.xQueuePeekFromISR) for [Anonymous Symbol]
    queue.o(.text.uxQueueMessagesWaiting) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.uxQueueMessagesWaiting) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.uxQueueMessagesWaiting) refers to queue.o(.text.uxQueueMessagesWaiting) for [Anonymous Symbol]
    queue.o(.text.uxQueueSpacesAvailable) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.uxQueueSpacesAvailable) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.uxQueueSpacesAvailable) refers to queue.o(.text.uxQueueSpacesAvailable) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.uxQueueMessagesWaitingFromISR) refers to queue.o(.text.uxQueueMessagesWaitingFromISR) for [Anonymous Symbol]
    queue.o(.text.vQueueDelete) refers to heap_2.o(.text.vPortFree) for vPortFree
    queue.o(.ARM.exidx.text.vQueueDelete) refers to queue.o(.text.vQueueDelete) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueIsQueueEmptyFromISR) refers to queue.o(.text.xQueueIsQueueEmptyFromISR) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueIsQueueFullFromISR) refers to queue.o(.text.xQueueIsQueueFullFromISR) for [Anonymous Symbol]
    heap_2.o(.text.pvPortMalloc) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_2.o(.text.pvPortMalloc) refers to heap_2.o(.bss.pvPortMalloc.xHeapHasBeenInitialised) for pvPortMalloc.xHeapHasBeenInitialised
    heap_2.o(.text.pvPortMalloc) refers to heap_2.o(.text.prvHeapInit) for prvHeapInit
    heap_2.o(.text.pvPortMalloc) refers to heap_2.o(.bss.xStart) for xStart
    heap_2.o(.text.pvPortMalloc) refers to heap_2.o(.bss.xEnd) for xEnd
    heap_2.o(.text.pvPortMalloc) refers to heap_2.o(.data.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_2.o(.text.pvPortMalloc) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_2.o(.ARM.exidx.text.pvPortMalloc) refers to heap_2.o(.text.pvPortMalloc) for [Anonymous Symbol]
    heap_2.o(.text.prvHeapInit) refers to heap_2.o(.bss.ucHeap) for ucHeap
    heap_2.o(.text.prvHeapInit) refers to heap_2.o(.bss.xStart) for xStart
    heap_2.o(.text.prvHeapInit) refers to heap_2.o(.bss.xEnd) for xEnd
    heap_2.o(.ARM.exidx.text.prvHeapInit) refers to heap_2.o(.text.prvHeapInit) for [Anonymous Symbol]
    heap_2.o(.text.vPortFree) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_2.o(.text.vPortFree) refers to heap_2.o(.bss.xStart) for xStart
    heap_2.o(.text.vPortFree) refers to heap_2.o(.data.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_2.o(.text.vPortFree) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_2.o(.ARM.exidx.text.vPortFree) refers to heap_2.o(.text.vPortFree) for [Anonymous Symbol]
    heap_2.o(.text.xPortGetFreeHeapSize) refers to heap_2.o(.data.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_2.o(.ARM.exidx.text.xPortGetFreeHeapSize) refers to heap_2.o(.text.xPortGetFreeHeapSize) for [Anonymous Symbol]
    heap_2.o(.ARM.exidx.text.vPortInitialiseBlocks) refers to heap_2.o(.text.vPortInitialiseBlocks) for [Anonymous Symbol]
    port.o(.text.pxPortInitialiseStack) refers to port.o(.text.prvTaskExitError) for prvTaskExitError
    port.o(.ARM.exidx.text.pxPortInitialiseStack) refers to port.o(.text.pxPortInitialiseStack) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.prvTaskExitError) refers to port.o(.text.prvTaskExitError) for [Anonymous Symbol]
    port.o(.text.vPortSVCHandler) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    port.o(.ARM.exidx.text.vPortSVCHandler) refers to port.o(.text.vPortSVCHandler) for [Anonymous Symbol]
    port.o(.text.xPortStartScheduler) refers to port.o(.text.vPortSetupTimerInterrupt) for vPortSetupTimerInterrupt
    port.o(.text.xPortStartScheduler) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.text.xPortStartScheduler) refers to port.o(.text.vPortEnableVFP) for vPortEnableVFP
    port.o(.text.xPortStartScheduler) refers to port.o(.text.prvPortStartFirstTask) for prvPortStartFirstTask
    port.o(.text.xPortStartScheduler) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    port.o(.text.xPortStartScheduler) refers to port.o(.text.prvTaskExitError) for prvTaskExitError
    port.o(.ARM.exidx.text.xPortStartScheduler) refers to port.o(.text.xPortStartScheduler) for [Anonymous Symbol]
    port.o(.text.vPortSetupTimerInterrupt) refers to system_acm32g103.o(.data.g_SystemCoreClock) for g_SystemCoreClock
    port.o(.ARM.exidx.text.vPortSetupTimerInterrupt) refers to port.o(.text.vPortSetupTimerInterrupt) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.vPortEnableVFP) refers to port.o(.text.vPortEnableVFP) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.prvPortStartFirstTask) refers to port.o(.text.prvPortStartFirstTask) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.vPortEndScheduler) refers to port.o(.text.vPortEndScheduler) for [Anonymous Symbol]
    port.o(.text.vPortEnterCritical) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.vPortEnterCritical) refers to port.o(.text.vPortEnterCritical) for [Anonymous Symbol]
    port.o(.text.vPortExitCritical) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.vPortExitCritical) refers to port.o(.text.vPortExitCritical) for [Anonymous Symbol]
    port.o(.text.xPortPendSVHandler) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    port.o(.text.xPortPendSVHandler) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    port.o(.ARM.exidx.text.xPortPendSVHandler) refers to port.o(.text.xPortPendSVHandler) for [Anonymous Symbol]
    port.o(.text.xPortSysTickHandler) refers to tasks.o(.text.xTaskIncrementTick) for xTaskIncrementTick
    port.o(.ARM.exidx.text.xPortSysTickHandler) refers to port.o(.text.xPortSysTickHandler) for [Anonymous Symbol]
    system_accelerate.o(.ARM.exidx.text.System_EnableIAccelerate) refers to system_accelerate.o(.text.System_EnableIAccelerate) for [Anonymous Symbol]
    system_accelerate.o(.ARM.exidx.text.System_DisableIAccelerate) refers to system_accelerate.o(.text.System_DisableIAccelerate) for [Anonymous Symbol]
    system_accelerate.o(.ARM.exidx.text.System_InvalidateIAccelerate) refers to system_accelerate.o(.text.System_InvalidateIAccelerate) for [Anonymous Symbol]
    system_accelerate.o(.ARM.exidx.text.System_EnableDAccelerate) refers to system_accelerate.o(.text.System_EnableDAccelerate) for [Anonymous Symbol]
    system_accelerate.o(.ARM.exidx.text.System_DisableDAccelerate) refers to system_accelerate.o(.text.System_DisableDAccelerate) for [Anonymous Symbol]
    system_accelerate.o(.ARM.exidx.text.System_InvalidateDAccelerate) refers to system_accelerate.o(.text.System_InvalidateDAccelerate) for [Anonymous Symbol]
    system_accelerate.o(.ARM.exidx.text.System_CleanDAccelerate) refers to system_accelerate.o(.text.System_CleanDAccelerate) for [Anonymous Symbol]
    system_accelerate.o(.ARM.exidx.text.System_CleanInvalidateDAccelerate) refers to system_accelerate.o(.text.System_CleanInvalidateDAccelerate) for [Anonymous Symbol]
    system_accelerate.o(.ARM.exidx.text.System_InvalidateDAccelerate_by_Addr) refers to system_accelerate.o(.text.System_InvalidateDAccelerate_by_Addr) for [Anonymous Symbol]
    system_accelerate.o(.ARM.exidx.text.System_CleanDAccelerate_by_Addr) refers to system_accelerate.o(.text.System_CleanDAccelerate_by_Addr) for [Anonymous Symbol]
    system_accelerate.o(.ARM.exidx.text.System_CleanInvalidateDAccelerate_by_Addr) refers to system_accelerate.o(.text.System_CleanInvalidateDAccelerate_by_Addr) for [Anonymous Symbol]
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry10a.o(.ARM.Collect$$$$0000000D) for __rt_final_cpp
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry11a.o(.ARM.Collect$$$$0000000F) for __rt_final_exit
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry7b.o(.ARM.Collect$$$$00000008) for _main_clock
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry8b.o(.ARM.Collect$$$$0000000A) for _main_cpp_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry9a.o(.ARM.Collect$$$$0000000B) for _main_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry5.o(.ARM.Collect$$$$00000004) for _main_scatterload
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry2.o(.ARM.Collect$$$$00000001) for _main_stk
    uldiv.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    uldiv.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    printfb.o(i.__0fprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0fprintf$bare) refers to hal_uart.o(.text.fputc) for fputc
    printfb.o(i.__0printf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0printf$bare) refers to hal_uart.o(.text.fputc) for fputc
    printfb.o(i.__0printf$bare) refers to stdout.o(.data) for __stdout
    printfb.o(i.__0snprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0snprintf$bare) refers to printfb.o(i._snputc) for _snputc
    printfb.o(i.__0sprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0sprintf$bare) refers to printfb.o(i._sputc) for _sputc
    printfb.o(i.__0vfprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vfprintf$bare) refers to hal_uart.o(.text.fputc) for fputc
    printfb.o(i.__0vprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vprintf$bare) refers to hal_uart.o(.text.fputc) for fputc
    printfb.o(i.__0vprintf$bare) refers to stdout.o(.data) for __stdout
    printfb.o(i.__0vsnprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vsnprintf$bare) refers to printfb.o(i._snputc) for _snputc
    printfb.o(i.__0vsprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vsprintf$bare) refers to printfb.o(i._sputc) for _sputc
    printf0.o(i.__0fprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0fprintf$0) refers to hal_uart.o(.text.fputc) for fputc
    printf0.o(i.__0printf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0printf$0) refers to hal_uart.o(.text.fputc) for fputc
    printf0.o(i.__0printf$0) refers to stdout.o(.data) for __stdout
    printf0.o(i.__0snprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0snprintf$0) refers to printf0.o(i._snputc) for _snputc
    printf0.o(i.__0sprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0sprintf$0) refers to printf0.o(i._sputc) for _sputc
    printf0.o(i.__0vfprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vfprintf$0) refers to hal_uart.o(.text.fputc) for fputc
    printf0.o(i.__0vprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vprintf$0) refers to hal_uart.o(.text.fputc) for fputc
    printf0.o(i.__0vprintf$0) refers to stdout.o(.data) for __stdout
    printf0.o(i.__0vsnprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vsnprintf$0) refers to printf0.o(i._snputc) for _snputc
    printf0.o(i.__0vsprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vsprintf$0) refers to printf0.o(i._sputc) for _sputc
    printf1.o(i.__0fprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0fprintf$1) refers to hal_uart.o(.text.fputc) for fputc
    printf1.o(i.__0printf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0printf$1) refers to hal_uart.o(.text.fputc) for fputc
    printf1.o(i.__0printf$1) refers to stdout.o(.data) for __stdout
    printf1.o(i.__0snprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0snprintf$1) refers to printf1.o(i._snputc) for _snputc
    printf1.o(i.__0sprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0sprintf$1) refers to printf1.o(i._sputc) for _sputc
    printf1.o(i.__0vfprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vfprintf$1) refers to hal_uart.o(.text.fputc) for fputc
    printf1.o(i.__0vprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vprintf$1) refers to hal_uart.o(.text.fputc) for fputc
    printf1.o(i.__0vprintf$1) refers to stdout.o(.data) for __stdout
    printf1.o(i.__0vsnprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vsnprintf$1) refers to printf1.o(i._snputc) for _snputc
    printf1.o(i.__0vsprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vsprintf$1) refers to printf1.o(i._sputc) for _sputc
    printf1.o(i._printf_core) refers to uidiv.o(.text) for __aeabi_uidivmod
    printf2.o(i.__0fprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0fprintf$2) refers to hal_uart.o(.text.fputc) for fputc
    printf2.o(i.__0printf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0printf$2) refers to hal_uart.o(.text.fputc) for fputc
    printf2.o(i.__0printf$2) refers to stdout.o(.data) for __stdout
    printf2.o(i.__0snprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0snprintf$2) refers to printf2.o(i._snputc) for _snputc
    printf2.o(i.__0sprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0sprintf$2) refers to printf2.o(i._sputc) for _sputc
    printf2.o(i.__0vfprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vfprintf$2) refers to hal_uart.o(.text.fputc) for fputc
    printf2.o(i.__0vprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vprintf$2) refers to hal_uart.o(.text.fputc) for fputc
    printf2.o(i.__0vprintf$2) refers to stdout.o(.data) for __stdout
    printf2.o(i.__0vsnprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vsnprintf$2) refers to printf2.o(i._snputc) for _snputc
    printf2.o(i.__0vsprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vsprintf$2) refers to printf2.o(i._sputc) for _sputc
    printf3.o(i.__0fprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0fprintf$3) refers to hal_uart.o(.text.fputc) for fputc
    printf3.o(i.__0printf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0printf$3) refers to hal_uart.o(.text.fputc) for fputc
    printf3.o(i.__0printf$3) refers to stdout.o(.data) for __stdout
    printf3.o(i.__0snprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0snprintf$3) refers to printf3.o(i._snputc) for _snputc
    printf3.o(i.__0sprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0sprintf$3) refers to printf3.o(i._sputc) for _sputc
    printf3.o(i.__0vfprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vfprintf$3) refers to hal_uart.o(.text.fputc) for fputc
    printf3.o(i.__0vprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vprintf$3) refers to hal_uart.o(.text.fputc) for fputc
    printf3.o(i.__0vprintf$3) refers to stdout.o(.data) for __stdout
    printf3.o(i.__0vsnprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vsnprintf$3) refers to printf3.o(i._snputc) for _snputc
    printf3.o(i.__0vsprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vsprintf$3) refers to printf3.o(i._sputc) for _sputc
    printf3.o(i._printf_core) refers to uidiv.o(.text) for __aeabi_uidivmod
    printf4.o(i.__0fprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0fprintf$4) refers to hal_uart.o(.text.fputc) for fputc
    printf4.o(i.__0printf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0printf$4) refers to hal_uart.o(.text.fputc) for fputc
    printf4.o(i.__0printf$4) refers to stdout.o(.data) for __stdout
    printf4.o(i.__0snprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0snprintf$4) refers to printf4.o(i._snputc) for _snputc
    printf4.o(i.__0sprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0sprintf$4) refers to printf4.o(i._sputc) for _sputc
    printf4.o(i.__0vfprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vfprintf$4) refers to hal_uart.o(.text.fputc) for fputc
    printf4.o(i.__0vprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vprintf$4) refers to hal_uart.o(.text.fputc) for fputc
    printf4.o(i.__0vprintf$4) refers to stdout.o(.data) for __stdout
    printf4.o(i.__0vsnprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vsnprintf$4) refers to printf4.o(i._snputc) for _snputc
    printf4.o(i.__0vsprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vsprintf$4) refers to printf4.o(i._sputc) for _sputc
    printf4.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printf5.o(i.__0fprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0fprintf$5) refers to hal_uart.o(.text.fputc) for fputc
    printf5.o(i.__0printf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0printf$5) refers to hal_uart.o(.text.fputc) for fputc
    printf5.o(i.__0printf$5) refers to stdout.o(.data) for __stdout
    printf5.o(i.__0snprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0snprintf$5) refers to printf5.o(i._snputc) for _snputc
    printf5.o(i.__0sprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0sprintf$5) refers to printf5.o(i._sputc) for _sputc
    printf5.o(i.__0vfprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vfprintf$5) refers to hal_uart.o(.text.fputc) for fputc
    printf5.o(i.__0vprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vprintf$5) refers to hal_uart.o(.text.fputc) for fputc
    printf5.o(i.__0vprintf$5) refers to stdout.o(.data) for __stdout
    printf5.o(i.__0vsnprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vsnprintf$5) refers to printf5.o(i._snputc) for _snputc
    printf5.o(i.__0vsprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vsprintf$5) refers to printf5.o(i._sputc) for _sputc
    printf5.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printf6.o(i.__0fprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0fprintf$6) refers to hal_uart.o(.text.fputc) for fputc
    printf6.o(i.__0printf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0printf$6) refers to hal_uart.o(.text.fputc) for fputc
    printf6.o(i.__0printf$6) refers to stdout.o(.data) for __stdout
    printf6.o(i.__0snprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0snprintf$6) refers to printf6.o(i._snputc) for _snputc
    printf6.o(i.__0sprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0sprintf$6) refers to printf6.o(i._sputc) for _sputc
    printf6.o(i.__0vfprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vfprintf$6) refers to hal_uart.o(.text.fputc) for fputc
    printf6.o(i.__0vprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vprintf$6) refers to hal_uart.o(.text.fputc) for fputc
    printf6.o(i.__0vprintf$6) refers to stdout.o(.data) for __stdout
    printf6.o(i.__0vsnprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vsnprintf$6) refers to printf6.o(i._snputc) for _snputc
    printf6.o(i.__0vsprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vsprintf$6) refers to printf6.o(i._sputc) for _sputc
    printf6.o(i._printf_core) refers to printf6.o(i._printf_pre_padding) for _printf_pre_padding
    printf6.o(i._printf_core) refers to uidiv.o(.text) for __aeabi_uidivmod
    printf6.o(i._printf_core) refers to printf6.o(i._printf_post_padding) for _printf_post_padding
    printf7.o(i.__0fprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0fprintf$7) refers to hal_uart.o(.text.fputc) for fputc
    printf7.o(i.__0printf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0printf$7) refers to hal_uart.o(.text.fputc) for fputc
    printf7.o(i.__0printf$7) refers to stdout.o(.data) for __stdout
    printf7.o(i.__0snprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0snprintf$7) refers to printf7.o(i._snputc) for _snputc
    printf7.o(i.__0sprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0sprintf$7) refers to printf7.o(i._sputc) for _sputc
    printf7.o(i.__0vfprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vfprintf$7) refers to hal_uart.o(.text.fputc) for fputc
    printf7.o(i.__0vprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vprintf$7) refers to hal_uart.o(.text.fputc) for fputc
    printf7.o(i.__0vprintf$7) refers to stdout.o(.data) for __stdout
    printf7.o(i.__0vsnprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vsnprintf$7) refers to printf7.o(i._snputc) for _snputc
    printf7.o(i.__0vsprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vsprintf$7) refers to printf7.o(i._sputc) for _sputc
    printf7.o(i._printf_core) refers to printf7.o(i._printf_pre_padding) for _printf_pre_padding
    printf7.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printf7.o(i._printf_core) refers to printf7.o(i._printf_post_padding) for _printf_post_padding
    printf8.o(i.__0fprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0fprintf$8) refers to hal_uart.o(.text.fputc) for fputc
    printf8.o(i.__0printf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0printf$8) refers to hal_uart.o(.text.fputc) for fputc
    printf8.o(i.__0printf$8) refers to stdout.o(.data) for __stdout
    printf8.o(i.__0snprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0snprintf$8) refers to printf8.o(i._snputc) for _snputc
    printf8.o(i.__0sprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0sprintf$8) refers to printf8.o(i._sputc) for _sputc
    printf8.o(i.__0vfprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vfprintf$8) refers to hal_uart.o(.text.fputc) for fputc
    printf8.o(i.__0vprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vprintf$8) refers to hal_uart.o(.text.fputc) for fputc
    printf8.o(i.__0vprintf$8) refers to stdout.o(.data) for __stdout
    printf8.o(i.__0vsnprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vsnprintf$8) refers to printf8.o(i._snputc) for _snputc
    printf8.o(i.__0vsprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vsprintf$8) refers to printf8.o(i._sputc) for _sputc
    printf8.o(i._printf_core) refers to printf8.o(i._printf_pre_padding) for _printf_pre_padding
    printf8.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printf8.o(i._printf_core) refers to printf8.o(i._printf_post_padding) for _printf_post_padding
    printfa.o(i.__0fprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0fprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0fprintf) refers to hal_uart.o(.text.fputc) for fputc
    printfa.o(i.__0printf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0printf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0printf) refers to hal_uart.o(.text.fputc) for fputc
    printfa.o(i.__0printf) refers to stdout.o(.data) for __stdout
    printfa.o(i.__0snprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0snprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0snprintf) refers to printfa.o(i._snputc) for _snputc
    printfa.o(i.__0sprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0sprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0sprintf) refers to printfa.o(i._sputc) for _sputc
    printfa.o(i.__0vfprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vfprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vfprintf) refers to hal_uart.o(.text.fputc) for fputc
    printfa.o(i.__0vprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vprintf) refers to hal_uart.o(.text.fputc) for fputc
    printfa.o(i.__0vprintf) refers to stdout.o(.data) for __stdout
    printfa.o(i.__0vsnprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vsnprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vsnprintf) refers to printfa.o(i._snputc) for _snputc
    printfa.o(i.__0vsprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vsprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vsprintf) refers to printfa.o(i._sputc) for _sputc
    printfa.o(i._fp_digits) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._fp_digits) refers to dmul.o(.text) for __aeabi_dmul
    printfa.o(i._fp_digits) refers to ddiv.o(.text) for __aeabi_ddiv
    printfa.o(i._fp_digits) refers to cdrcmple.o(.text) for __aeabi_cdrcmple
    printfa.o(i._fp_digits) refers to dadd.o(.text) for __aeabi_dadd
    printfa.o(i._fp_digits) refers to dfixul.o(.text) for __aeabi_d2ulz
    printfa.o(i._fp_digits) refers to uldiv.o(.text) for __aeabi_uldivmod
    printfa.o(i._printf_core) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._printf_core) refers to printfa.o(i._printf_pre_padding) for _printf_pre_padding
    printfa.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printfa.o(i._printf_core) refers to printfa.o(i._printf_post_padding) for _printf_post_padding
    printfa.o(i._printf_core) refers to printfa.o(i._fp_digits) for _fp_digits
    printfa.o(i._printf_core) refers to uidiv.o(.text) for __aeabi_uidivmod
    printfa.o(i._printf_post_padding) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._printf_pre_padding) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._snputc) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._sputc) refers (Special) to iusefp.o(.text) for __I$use$fp
    entry2.o(.ARM.Collect$$$$00000001) refers to entry2.o(.ARM.Collect$$$$00002712) for __lit__00000000
    entry2.o(.ARM.Collect$$$$00002712) refers to startup_acm32g103.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to startup_acm32g103.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    entry5.o(.ARM.Collect$$$$00000004) refers to init.o(.text) for __scatterload
    entry9a.o(.ARM.Collect$$$$0000000B) refers to main.o(.text.main) for main
    entry9b.o(.ARM.Collect$$$$0000000C) refers to main.o(.text.main) for main
    dadd.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dadd.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    dadd.o(.text) refers to llsshr.o(.text) for __aeabi_lasr
    dadd.o(.text) refers to depilogue.o(.text) for _double_epilogue
    dmul.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dmul.o(.text) refers to depilogue.o(.text) for _double_epilogue
    ddiv.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    ddiv.o(.text) refers to depilogue.o(.text) for _double_round
    dfixul.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dfixul.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    dfixul.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    cdrcmple.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    init.o(.text) refers to entry5.o(.ARM.Collect$$$$00000004) for __main_after_scatterload
    depilogue.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    depilogue.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    depilogue.o(.text) refers to llushr.o(.text) for __aeabi_llsr


==============================================================================

Removing Unused input sections from the image.

    Removing system_acm32g103.o(.text), (0 bytes).
    Removing system_acm32g103.o(.ARM.exidx.text.SystemInit), (8 bytes).
    Removing system_acm32g103.o(.text.SystemCoreClockUpdate), (18 bytes).
    Removing system_acm32g103.o(.ARM.exidx.text.SystemCoreClockUpdate), (8 bytes).
    Removing system_acm32g103.o(.ARM.exidx.text.SystemClock_FastConfig), (8 bytes).
    Removing system_acm32g103.o(.text.SystemClock_FlexibleConfig), (94 bytes).
    Removing system_acm32g103.o(.ARM.exidx.text.SystemClock_FlexibleConfig), (8 bytes).
    Removing system_acm32g103.o(.ARM.exidx.text.SystemClock_Config), (8 bytes).
    Removing startup_acm32g103.o(HEAP), (0 bytes).
    Removing hal.o(.text), (0 bytes).
    Removing hal.o(.ARM.exidx.text.HAL_Init), (8 bytes).
    Removing hal.o(.ARM.exidx.text.__NVIC_SetPriorityGrouping), (8 bytes).
    Removing hal.o(.text.HAL_InitTick), (134 bytes).
    Removing hal.o(.ARM.exidx.text.HAL_InitTick), (8 bytes).
    Removing hal.o(.ARM.exidx.text.HAL_MspInit), (8 bytes).
    Removing hal.o(.text.HAL_DeInit), (10 bytes).
    Removing hal.o(.ARM.exidx.text.HAL_DeInit), (8 bytes).
    Removing hal.o(.text.HAL_MspDeInit), (2 bytes).
    Removing hal.o(.ARM.exidx.text.HAL_MspDeInit), (8 bytes).
    Removing hal.o(.text.HAL_IncTick), (26 bytes).
    Removing hal.o(.ARM.exidx.text.HAL_IncTick), (8 bytes).
    Removing hal.o(.text.HAL_GetTick), (12 bytes).
    Removing hal.o(.ARM.exidx.text.HAL_GetTick), (8 bytes).
    Removing hal.o(.text.HAL_SetTickMsPeriod), (26 bytes).
    Removing hal.o(.ARM.exidx.text.HAL_SetTickMsPeriod), (8 bytes).
    Removing hal.o(.text.HAL_GetTickMsPeriod), (12 bytes).
    Removing hal.o(.ARM.exidx.text.HAL_GetTickMsPeriod), (8 bytes).
    Removing hal.o(.text.HAL_Delay), (40 bytes).
    Removing hal.o(.ARM.exidx.text.HAL_Delay), (8 bytes).
    Removing hal.o(.text.HAL_SuspendTick), (18 bytes).
    Removing hal.o(.ARM.exidx.text.HAL_SuspendTick), (8 bytes).
    Removing hal.o(.text.HAL_ResumeTick), (18 bytes).
    Removing hal.o(.ARM.exidx.text.HAL_ResumeTick), (8 bytes).
    Removing hal.o(.text.HAL_DelayClks), (50 bytes).
    Removing hal.o(.ARM.exidx.text.HAL_DelayClks), (8 bytes).
    Removing hal.o(.text.HAL_DelayUs), (62 bytes).
    Removing hal.o(.ARM.exidx.text.HAL_DelayUs), (8 bytes).
    Removing hal.o(.text.HAL_DelayMs), (48 bytes).
    Removing hal.o(.ARM.exidx.text.HAL_DelayMs), (8 bytes).
    Removing hal.o(.text.HAL_SimpleDelay), (2 bytes).
    Removing hal.o(.ARM.exidx.text.HAL_SimpleDelay), (8 bytes).
    Removing hal.o(.text.HAL_StartDelay), (48 bytes).
    Removing hal.o(.ARM.exidx.text.HAL_StartDelay), (8 bytes).
    Removing hal.o(.text.HAL_UpdateDelay), (152 bytes).
    Removing hal.o(.ARM.exidx.text.HAL_UpdateDelay), (8 bytes).
    Removing hal.o(.text.HAL_GetClkDelay), (28 bytes).
    Removing hal.o(.ARM.exidx.text.HAL_GetClkDelay), (8 bytes).
    Removing hal.o(.text.HAL_GetUsDelay), (40 bytes).
    Removing hal.o(.ARM.exidx.text.HAL_GetUsDelay), (8 bytes).
    Removing hal.o(.text.HAL_GetMsDelay), (12 bytes).
    Removing hal.o(.ARM.exidx.text.HAL_GetMsDelay), (8 bytes).
    Removing hal.o(.text.HAL_GetUID), (2 bytes).
    Removing hal.o(.ARM.exidx.text.HAL_GetUID), (8 bytes).
    Removing hal.o(.bss.g_msTick), (4 bytes).
    Removing hal_uart.o(.text), (0 bytes).
    Removing hal_uart.o(.text.HAL_UART_IRQHandler), (584 bytes).
    Removing hal_uart.o(.ARM.exidx.text.HAL_UART_IRQHandler), (8 bytes).
    Removing hal_uart.o(.text.HAL_UART_TxCpltCallback), (2 bytes).
    Removing hal_uart.o(.ARM.exidx.text.HAL_UART_TxCpltCallback), (8 bytes).
    Removing hal_uart.o(.text.HAL_UART_RxCpltCallback), (2 bytes).
    Removing hal_uart.o(.ARM.exidx.text.HAL_UART_RxCpltCallback), (8 bytes).
    Removing hal_uart.o(.ARM.exidx.text.HAL_UART_MspInit), (8 bytes).
    Removing hal_uart.o(.ARM.exidx.text.__NVIC_ClearPendingIRQ), (8 bytes).
    Removing hal_uart.o(.ARM.exidx.text.__NVIC_SetPriority), (8 bytes).
    Removing hal_uart.o(.ARM.exidx.text.__NVIC_EnableIRQ), (8 bytes).
    Removing hal_uart.o(.text.HAL_UART_RS485Msp_Init), (258 bytes).
    Removing hal_uart.o(.ARM.exidx.text.HAL_UART_RS485Msp_Init), (8 bytes).
    Removing hal_uart.o(.ARM.exidx.text.HAL_UART_Init), (8 bytes).
    Removing hal_uart.o(.ARM.exidx.text.UART_Config_BaudRate), (8 bytes).
    Removing hal_uart.o(.text.HAL_UART_RS485_Init), (110 bytes).
    Removing hal_uart.o(.ARM.exidx.text.HAL_UART_RS485_Init), (8 bytes).
    Removing hal_uart.o(.text.HAL_UART_IRDA_Init), (92 bytes).
    Removing hal_uart.o(.ARM.exidx.text.HAL_UART_IRDA_Init), (8 bytes).
    Removing hal_uart.o(.text.HAL_UART_MultiProcessor_Init), (70 bytes).
    Removing hal_uart.o(.ARM.exidx.text.HAL_UART_MultiProcessor_Init), (8 bytes).
    Removing hal_uart.o(.text.HAL_UART_MspDeInit), (90 bytes).
    Removing hal_uart.o(.ARM.exidx.text.HAL_UART_MspDeInit), (8 bytes).
    Removing hal_uart.o(.text.__NVIC_DisableIRQ), (24 bytes).
    Removing hal_uart.o(.ARM.exidx.text.__NVIC_DisableIRQ), (8 bytes).
    Removing hal_uart.o(.text.HAL_UART_DeInit), (94 bytes).
    Removing hal_uart.o(.ARM.exidx.text.HAL_UART_DeInit), (8 bytes).
    Removing hal_uart.o(.text.HAL_UART_Transmit), (256 bytes).
    Removing hal_uart.o(.ARM.exidx.text.HAL_UART_Transmit), (8 bytes).
    Removing hal_uart.o(.text.HAL_UART_Wait_Tx_Done), (92 bytes).
    Removing hal_uart.o(.ARM.exidx.text.HAL_UART_Wait_Tx_Done), (8 bytes).
    Removing hal_uart.o(.text.HAL_UART_Receive), (214 bytes).
    Removing hal_uart.o(.ARM.exidx.text.HAL_UART_Receive), (8 bytes).
    Removing hal_uart.o(.text.HAL_UART_Receive_To_IDLEorBCNT), (232 bytes).
    Removing hal_uart.o(.ARM.exidx.text.HAL_UART_Receive_To_IDLEorBCNT), (8 bytes).
    Removing hal_uart.o(.text.HAL_UART_Transmit_IT), (268 bytes).
    Removing hal_uart.o(.ARM.exidx.text.HAL_UART_Transmit_IT), (8 bytes).
    Removing hal_uart.o(.text.HAL_UART_Receive_IT), (196 bytes).
    Removing hal_uart.o(.ARM.exidx.text.HAL_UART_Receive_IT), (8 bytes).
    Removing hal_uart.o(.text.HAL_UART_Transmit_DMA), (152 bytes).
    Removing hal_uart.o(.ARM.exidx.text.HAL_UART_Transmit_DMA), (8 bytes).
    Removing hal_uart.o(.text.HAL_UART_Receive_DMA), (152 bytes).
    Removing hal_uart.o(.ARM.exidx.text.HAL_UART_Receive_DMA), (8 bytes).
    Removing hal_uart.o(.text.HAL_UART_ErrorCallBack), (2 bytes).
    Removing hal_uart.o(.ARM.exidx.text.HAL_UART_ErrorCallBack), (8 bytes).
    Removing hal_uart.o(.text.HAL_UART_GetState), (110 bytes).
    Removing hal_uart.o(.ARM.exidx.text.HAL_UART_GetState), (8 bytes).
    Removing hal_uart.o(.text.HAL_UART_GetError), (4 bytes).
    Removing hal_uart.o(.ARM.exidx.text.HAL_UART_GetError), (8 bytes).
    Removing hal_uart.o(.text.HAL_UART_Abort), (168 bytes).
    Removing hal_uart.o(.ARM.exidx.text.HAL_UART_Abort), (8 bytes).
    Removing hal_uart.o(.text.HAL_UART_DMAPause), (126 bytes).
    Removing hal_uart.o(.ARM.exidx.text.HAL_UART_DMAPause), (8 bytes).
    Removing hal_uart.o(.text.HAL_UART_DMAResume), (132 bytes).
    Removing hal_uart.o(.ARM.exidx.text.HAL_UART_DMAResume), (8 bytes).
    Removing hal_uart.o(.text.HAL_UART_DMAStop), (168 bytes).
    Removing hal_uart.o(.ARM.exidx.text.HAL_UART_DMAStop), (8 bytes).
    Removing hal_uart.o(.text.HAL_UART_MultiProcessor_EnterMuteMode), (14 bytes).
    Removing hal_uart.o(.ARM.exidx.text.HAL_UART_MultiProcessor_EnterMuteMode), (8 bytes).
    Removing hal_uart.o(.text.HAL_UART_MultiProcessor_ExitMuteMode), (14 bytes).
    Removing hal_uart.o(.ARM.exidx.text.HAL_UART_MultiProcessor_ExitMuteMode), (8 bytes).
    Removing hal_uart.o(.ARM.exidx.text.HAL_UART_SetDebugUart), (8 bytes).
    Removing hal_uart.o(.ARM.exidx.text.fputc), (8 bytes).
    Removing hal_cortex.o(.text), (0 bytes).
    Removing hal_cortex.o(.text.HAL_NVIC_SetPriorityGrouping), (32 bytes).
    Removing hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SetPriorityGrouping), (8 bytes).
    Removing hal_cortex.o(.text.__NVIC_SetPriorityGrouping), (32 bytes).
    Removing hal_cortex.o(.ARM.exidx.text.__NVIC_SetPriorityGrouping), (8 bytes).
    Removing hal_cortex.o(.text.HAL_NVIC_SetPriority), (66 bytes).
    Removing hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SetPriority), (8 bytes).
    Removing hal_cortex.o(.text.__NVIC_GetPriorityGrouping), (16 bytes).
    Removing hal_cortex.o(.ARM.exidx.text.__NVIC_GetPriorityGrouping), (8 bytes).
    Removing hal_cortex.o(.text.__NVIC_SetPriority), (34 bytes).
    Removing hal_cortex.o(.ARM.exidx.text.__NVIC_SetPriority), (8 bytes).
    Removing hal_cortex.o(.text.NVIC_EncodePriority), (44 bytes).
    Removing hal_cortex.o(.ARM.exidx.text.NVIC_EncodePriority), (8 bytes).
    Removing hal_cortex.o(.text.HAL_NVIC_EnableIRQ), (32 bytes).
    Removing hal_cortex.o(.ARM.exidx.text.HAL_NVIC_EnableIRQ), (8 bytes).
    Removing hal_cortex.o(.text.__NVIC_EnableIRQ), (32 bytes).
    Removing hal_cortex.o(.ARM.exidx.text.__NVIC_EnableIRQ), (8 bytes).
    Removing hal_cortex.o(.text.HAL_NVIC_DisableIRQ), (32 bytes).
    Removing hal_cortex.o(.ARM.exidx.text.HAL_NVIC_DisableIRQ), (8 bytes).
    Removing hal_cortex.o(.text.__NVIC_DisableIRQ), (40 bytes).
    Removing hal_cortex.o(.ARM.exidx.text.__NVIC_DisableIRQ), (8 bytes).
    Removing hal_cortex.o(.text.HAL_NVIC_SystemReset), (4 bytes).
    Removing hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SystemReset), (8 bytes).
    Removing hal_cortex.o(.text.__NVIC_SystemReset), (36 bytes).
    Removing hal_cortex.o(.ARM.exidx.text.__NVIC_SystemReset), (8 bytes).
    Removing hal_cortex.o(.text.HAL_SYSTICK_Config), (14 bytes).
    Removing hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_Config), (8 bytes).
    Removing hal_cortex.o(.text.SysTick_Config), (46 bytes).
    Removing hal_cortex.o(.ARM.exidx.text.SysTick_Config), (8 bytes).
    Removing hal_cortex.o(.text.HAL_MPU_Enable), (32 bytes).
    Removing hal_cortex.o(.ARM.exidx.text.HAL_MPU_Enable), (8 bytes).
    Removing hal_cortex.o(.text.HAL_MPU_Disable), (26 bytes).
    Removing hal_cortex.o(.ARM.exidx.text.HAL_MPU_Disable), (8 bytes).
    Removing hal_cortex.o(.text.HAL_MPU_ConfigRegion), (8 bytes).
    Removing hal_cortex.o(.ARM.exidx.text.HAL_MPU_ConfigRegion), (8 bytes).
    Removing hal_cortex.o(.text.MPU_ConfigRegion), (188 bytes).
    Removing hal_cortex.o(.ARM.exidx.text.MPU_ConfigRegion), (8 bytes).
    Removing hal_cortex.o(.text.HAL_MPU_ConfigMemoryAttributes), (8 bytes).
    Removing hal_cortex.o(.ARM.exidx.text.HAL_MPU_ConfigMemoryAttributes), (8 bytes).
    Removing hal_cortex.o(.text.MPU_ConfigMemoryAttributes), (86 bytes).
    Removing hal_cortex.o(.ARM.exidx.text.MPU_ConfigMemoryAttributes), (8 bytes).
    Removing hal_cortex.o(.text.HAL_NVIC_GetPriorityGrouping), (8 bytes).
    Removing hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetPriorityGrouping), (8 bytes).
    Removing hal_cortex.o(.text.HAL_NVIC_GetPriority), (54 bytes).
    Removing hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetPriority), (8 bytes).
    Removing hal_cortex.o(.text.NVIC_DecodePriority), (56 bytes).
    Removing hal_cortex.o(.ARM.exidx.text.NVIC_DecodePriority), (8 bytes).
    Removing hal_cortex.o(.text.__NVIC_GetPriority), (34 bytes).
    Removing hal_cortex.o(.ARM.exidx.text.__NVIC_GetPriority), (8 bytes).
    Removing hal_cortex.o(.text.HAL_NVIC_SetPendingIRQ), (34 bytes).
    Removing hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SetPendingIRQ), (8 bytes).
    Removing hal_cortex.o(.text.__NVIC_SetPendingIRQ), (32 bytes).
    Removing hal_cortex.o(.ARM.exidx.text.__NVIC_SetPendingIRQ), (8 bytes).
    Removing hal_cortex.o(.text.HAL_NVIC_GetPendingIRQ), (34 bytes).
    Removing hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetPendingIRQ), (8 bytes).
    Removing hal_cortex.o(.text.__NVIC_GetPendingIRQ), (36 bytes).
    Removing hal_cortex.o(.ARM.exidx.text.__NVIC_GetPendingIRQ), (8 bytes).
    Removing hal_cortex.o(.text.HAL_NVIC_ClearPendingIRQ), (34 bytes).
    Removing hal_cortex.o(.ARM.exidx.text.HAL_NVIC_ClearPendingIRQ), (8 bytes).
    Removing hal_cortex.o(.text.__NVIC_ClearPendingIRQ), (32 bytes).
    Removing hal_cortex.o(.ARM.exidx.text.__NVIC_ClearPendingIRQ), (8 bytes).
    Removing hal_cortex.o(.text.HAL_NVIC_GetActive), (34 bytes).
    Removing hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetActive), (8 bytes).
    Removing hal_cortex.o(.text.__NVIC_GetActive), (36 bytes).
    Removing hal_cortex.o(.ARM.exidx.text.__NVIC_GetActive), (8 bytes).
    Removing hal_cortex.o(.text.HAL_SYSTICK_CLKSourceConfig), (52 bytes).
    Removing hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_CLKSourceConfig), (8 bytes).
    Removing hal_cortex.o(.text.HAL_SYSTICK_IRQHandler), (8 bytes).
    Removing hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_IRQHandler), (8 bytes).
    Removing hal_cortex.o(.text.HAL_SYSTICK_Callback), (2 bytes).
    Removing hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_Callback), (8 bytes).
    Removing hal_cortex.o(.rodata.str1.1), (39 bytes).
    Removing hal_dma.o(.text), (0 bytes).
    Removing hal_dma.o(.text.HAL_DMA_IRQHandler), (198 bytes).
    Removing hal_dma.o(.ARM.exidx.text.HAL_DMA_IRQHandler), (8 bytes).
    Removing hal_dma.o(.text.HAL_DMA_Init), (636 bytes).
    Removing hal_dma.o(.ARM.exidx.text.HAL_DMA_Init), (8 bytes).
    Removing hal_dma.o(.text.HAL_DMA_DeInit), (254 bytes).
    Removing hal_dma.o(.ARM.exidx.text.HAL_DMA_DeInit), (8 bytes).
    Removing hal_dma.o(.text.HAL_DMA_RegisterCallback), (280 bytes).
    Removing hal_dma.o(.ARM.exidx.text.HAL_DMA_RegisterCallback), (8 bytes).
    Removing hal_dma.o(.text.HAL_DMA_UnRegisterCallback), (278 bytes).
    Removing hal_dma.o(.ARM.exidx.text.HAL_DMA_UnRegisterCallback), (8 bytes).
    Removing hal_dma.o(.text.HAL_DMA_Start), (428 bytes).
    Removing hal_dma.o(.ARM.exidx.text.HAL_DMA_Start), (8 bytes).
    Removing hal_dma.o(.text.HAL_DMA_Start_IT), (440 bytes).
    Removing hal_dma.o(.ARM.exidx.text.HAL_DMA_Start_IT), (8 bytes).
    Removing hal_dma.o(.text.HAL_DMA_InitLink), (342 bytes).
    Removing hal_dma.o(.ARM.exidx.text.HAL_DMA_InitLink), (8 bytes).
    Removing hal_dma.o(.text.HAL_DMA_SetLinkNext), (12 bytes).
    Removing hal_dma.o(.ARM.exidx.text.HAL_DMA_SetLinkNext), (8 bytes).
    Removing hal_dma.o(.text.HAL_DMA_Start_Link), (266 bytes).
    Removing hal_dma.o(.ARM.exidx.text.HAL_DMA_Start_Link), (8 bytes).
    Removing hal_dma.o(.text.HAL_DMA_Abort), (282 bytes).
    Removing hal_dma.o(.ARM.exidx.text.HAL_DMA_Abort), (8 bytes).
    Removing hal_dma.o(.text.HAL_DMA_GetState), (548 bytes).
    Removing hal_dma.o(.ARM.exidx.text.HAL_DMA_GetState), (8 bytes).
    Removing hal_dma.o(.rodata.str1.1), (36 bytes).
    Removing hal_rcc.o(.text), (0 bytes).
    Removing hal_rcc.o(.ARM.exidx.text.HAL_RCC_OscConfig), (8 bytes).
    Removing hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetSysCoreClockFreq), (8 bytes).
    Removing hal_rcc.o(.ARM.exidx.text.HAL_EFLASH_SetRdwaitBySysCoreClock), (8 bytes).
    Removing hal_rcc.o(.ARM.exidx.text.HAL_RCC_ClockConfig), (8 bytes).
    Removing hal_rcc.o(.text.HAL_RCC_SwitchSYSCLK), (206 bytes).
    Removing hal_rcc.o(.ARM.exidx.text.HAL_RCC_SwitchSYSCLK), (8 bytes).
    Removing hal_rcc.o(.text.HAL_RCC_LPTIM1ClockConfig), (64 bytes).
    Removing hal_rcc.o(.ARM.exidx.text.HAL_RCC_LPTIM1ClockConfig), (8 bytes).
    Removing hal_rcc.o(.text.HAL_RCC_FLTClockConfig), (64 bytes).
    Removing hal_rcc.o(.ARM.exidx.text.HAL_RCC_FLTClockConfig), (8 bytes).
    Removing hal_rcc.o(.text.HAL_RCC_LPUART1ClockConfig), (96 bytes).
    Removing hal_rcc.o(.ARM.exidx.text.HAL_RCC_LPUART1ClockConfig), (8 bytes).
    Removing hal_rcc.o(.text.HAL_RCC_MCOConfig), (260 bytes).
    Removing hal_rcc.o(.ARM.exidx.text.HAL_RCC_MCOConfig), (8 bytes).
    Removing hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetRC64MVal), (8 bytes).
    Removing hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetRC32KVal), (8 bytes).
    Removing hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetSYSCLKFreq), (8 bytes).
    Removing hal_rcc.o(.text.HAL_RCC_GetFCLKFreq), (12 bytes).
    Removing hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetFCLKFreq), (8 bytes).
    Removing hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetHCLKFreq), (8 bytes).
    Removing hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetPCLK1Freq), (8 bytes).
    Removing hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetPCLK2Freq), (8 bytes).
    Removing hal_rcc.o(.text.HAL_RCC_GetLPTIM1CLKFreq), (54 bytes).
    Removing hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetLPTIM1CLKFreq), (8 bytes).
    Removing hal_rcc.o(.text.HAL_RCC_GetFLTCLKFreq), (30 bytes).
    Removing hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetFLTCLKFreq), (8 bytes).
    Removing hal_rcc.o(.text.HAL_RCC_GetLPUART1CLKFreq), (80 bytes).
    Removing hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetLPUART1CLKFreq), (8 bytes).
    Removing hal_gpio.o(.text), (0 bytes).
    Removing hal_gpio.o(.ARM.exidx.text.HAL_GPIO_Init), (8 bytes).
    Removing hal_gpio.o(.text.HAL_GPIO_DeInit), (262 bytes).
    Removing hal_gpio.o(.ARM.exidx.text.HAL_GPIO_DeInit), (8 bytes).
    Removing hal_gpio.o(.text.HAL_GPIO_WritePin), (118 bytes).
    Removing hal_gpio.o(.ARM.exidx.text.HAL_GPIO_WritePin), (8 bytes).
    Removing hal_gpio.o(.text.HAL_GPIO_ReadPin), (98 bytes).
    Removing hal_gpio.o(.ARM.exidx.text.HAL_GPIO_ReadPin), (8 bytes).
    Removing hal_gpio.o(.text.HAL_GPIO_TogglePin), (100 bytes).
    Removing hal_gpio.o(.ARM.exidx.text.HAL_GPIO_TogglePin), (8 bytes).
    Removing hal_gpio.o(.text.HAL_GPIO_LockPin), (128 bytes).
    Removing hal_gpio.o(.ARM.exidx.text.HAL_GPIO_LockPin), (8 bytes).
    Removing hal_exti.o(.text), (0 bytes).
    Removing hal_exti.o(.text.HAL_EXTI_IRQHandler), (66 bytes).
    Removing hal_exti.o(.ARM.exidx.text.HAL_EXTI_IRQHandler), (8 bytes).
    Removing hal_exti.o(.text.HAL_EXTI_LineCallback), (2 bytes).
    Removing hal_exti.o(.ARM.exidx.text.HAL_EXTI_LineCallback), (8 bytes).
    Removing hal_exti.o(.ARM.exidx.text.HAL_EXTI_SetConfigLine), (8 bytes).
    Removing hal_exti.o(.ARM.exidx.text.HAL_EXTI_ClearConfigLine), (8 bytes).
    Removing hal_exti.o(.ARM.exidx.text.HAL_EXTI_IsConfigLine), (8 bytes).
    Removing hal_exti.o(.text.HAL_EXTI_GenerateSWI), (64 bytes).
    Removing hal_exti.o(.ARM.exidx.text.HAL_EXTI_GenerateSWI), (8 bytes).
    Removing hal_exti.o(.text.HAL_EXTI_GetPending), (270 bytes).
    Removing hal_exti.o(.ARM.exidx.text.HAL_EXTI_GetPending), (8 bytes).
    Removing hal_exti.o(.ARM.exidx.text.HAL_EXTI_ClearPending), (8 bytes).
    Removing hal_exti.o(.text.HAL_EXTI_ClearAllPending), (20 bytes).
    Removing hal_exti.o(.ARM.exidx.text.HAL_EXTI_ClearAllPending), (8 bytes).
    Removing main.o(.text), (0 bytes).
    Removing main.o(.ARM.exidx.text.main), (8 bytes).
    Removing main.o(.ARM.exidx.text.prvSetupHardware), (8 bytes).
    Removing main.o(.ARM.exidx.text.vCheckTask), (8 bytes).
    Removing main.o(.ARM.exidx.text.vPrintTask), (8 bytes).
    Removing main.o(.ARM.exidx.text.assert_failed), (8 bytes).
    Removing main.o(.ARM.exidx.text.uart_init), (8 bytes).
    Removing main.o(.bss.pcNextChar), (4 bytes).
    Removing main.o(.ARM.use_no_argv), (4 bytes).
    Removing semtest.o(.text), (0 bytes).
    Removing semtest.o(.ARM.exidx.text.vStartSemaphoreTasks), (8 bytes).
    Removing semtest.o(.ARM.exidx.text.prvSemaphoreTest), (8 bytes).
    Removing semtest.o(.ARM.exidx.text.xAreSemaphoreTasksStillRunning), (8 bytes).
    Removing integer.o(.text), (0 bytes).
    Removing integer.o(.ARM.exidx.text.vStartIntegerMathTasks), (8 bytes).
    Removing integer.o(.ARM.exidx.text.vCompeteingIntMathTask), (8 bytes).
    Removing integer.o(.ARM.exidx.text.xAreIntegerMathsTaskStillRunning), (8 bytes).
    Removing pollq.o(.text), (0 bytes).
    Removing pollq.o(.ARM.exidx.text.vStartPolledQueueTasks), (8 bytes).
    Removing pollq.o(.ARM.exidx.text.vPolledQueueConsumer), (8 bytes).
    Removing pollq.o(.ARM.exidx.text.vPolledQueueProducer), (8 bytes).
    Removing pollq.o(.ARM.exidx.text.xArePollingQueuesStillRunning), (8 bytes).
    Removing blockq.o(.text), (0 bytes).
    Removing blockq.o(.ARM.exidx.text.vStartBlockingQueueTasks), (8 bytes).
    Removing blockq.o(.ARM.exidx.text.vBlockingQueueConsumer), (8 bytes).
    Removing blockq.o(.ARM.exidx.text.vBlockingQueueProducer), (8 bytes).
    Removing blockq.o(.ARM.exidx.text.xAreBlockingQueuesStillRunning), (8 bytes).
    Removing acm32g103_it.o(.text), (0 bytes).
    Removing acm32g103_it.o(.ARM.exidx.text.SVC_Handler), (8 bytes).
    Removing acm32g103_it.o(.ARM.exidx.text.PendSV_Handler), (8 bytes).
    Removing acm32g103_it.o(.ARM.exidx.text.SysTick_Handler), (8 bytes).
    Removing acm32g103_it.o(.ARM.exidx.text.HAL_InitTick), (8 bytes).
    Removing tasks.o(.text), (0 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCreate), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvInitialiseNewTask), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvAddNewTaskToReadyList), (8 bytes).
    Removing tasks.o(.text.vTaskDelete), (210 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskDelete), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvDeleteTCB), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvResetNextTaskUnblockTime), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskDelayUntil), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSuspendAll), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvAddCurrentTaskToDelayedList), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskResumeAll), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskDelay), (8 bytes).
    Removing tasks.o(.text.uxTaskPriorityGet), (30 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskPriorityGet), (8 bytes).
    Removing tasks.o(.text.uxTaskPriorityGetFromISR), (40 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskPriorityGetFromISR), (8 bytes).
    Removing tasks.o(.text.vTaskPrioritySet), (208 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPrioritySet), (8 bytes).
    Removing tasks.o(.text.vTaskSuspend), (220 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSuspend), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSwitchContext), (8 bytes).
    Removing tasks.o(.text.vTaskResume), (124 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskResume), (8 bytes).
    Removing tasks.o(.text.prvTaskIsTaskSuspended), (26 bytes).
    Removing tasks.o(.ARM.exidx.text.prvTaskIsTaskSuspended), (8 bytes).
    Removing tasks.o(.text.xTaskResumeFromISR), (150 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskResumeFromISR), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskStartScheduler), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvIdleTask), (8 bytes).
    Removing tasks.o(.text.vTaskEndScheduler), (36 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskEndScheduler), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskIncrementTick), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetTickCount), (8 bytes).
    Removing tasks.o(.text.xTaskGetTickCountFromISR), (12 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetTickCountFromISR), (8 bytes).
    Removing tasks.o(.text.uxTaskGetNumberOfTasks), (12 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetNumberOfTasks), (8 bytes).
    Removing tasks.o(.text.pcTaskGetName), (20 bytes).
    Removing tasks.o(.ARM.exidx.text.pcTaskGetName), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnEventList), (8 bytes).
    Removing tasks.o(.text.vTaskPlaceOnUnorderedEventList), (38 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnUnorderedEventList), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskRemoveFromEventList), (8 bytes).
    Removing tasks.o(.text.vTaskRemoveFromUnorderedEventList), (96 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskRemoveFromUnorderedEventList), (8 bytes).
    Removing tasks.o(.text.vTaskSetTimeOutState), (38 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSetTimeOutState), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskInternalSetTimeOutState), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCheckForTimeOut), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskMissedYield), (8 bytes).
    Removing tasks.o(.text.xTaskGetCurrentTaskHandle), (12 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetCurrentTaskHandle), (8 bytes).
    Removing tasks.o(.text.uxTaskResetEventItemValue), (26 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskResetEventItemValue), (8 bytes).
    Removing tasks.o(.text.ulTaskNotifyTake), (106 bytes).
    Removing tasks.o(.ARM.exidx.text.ulTaskNotifyTake), (8 bytes).
    Removing tasks.o(.text.xTaskNotifyWait), (144 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskNotifyWait), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotify), (182 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotify), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotifyFromISR), (216 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyFromISR), (8 bytes).
    Removing tasks.o(.text.vTaskNotifyGiveFromISR), (170 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskNotifyGiveFromISR), (8 bytes).
    Removing tasks.o(.text.xTaskNotifyStateClear), (44 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskNotifyStateClear), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvInitialiseTaskLists), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvCheckTasksWaitingTermination), (8 bytes).
    Removing list.o(.text), (0 bytes).
    Removing list.o(.ARM.exidx.text.vListInitialise), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInitialiseItem), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInsertEnd), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInsert), (8 bytes).
    Removing list.o(.ARM.exidx.text.uxListRemove), (8 bytes).
    Removing queue.o(.text), (0 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericReset), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericCreate), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvInitialiseNewQueue), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericSend), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvCopyDataToQueue), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvIsQueueFull), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvUnlockQueue), (8 bytes).
    Removing queue.o(.text.xQueueGenericSendFromISR), (110 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericSendFromISR), (8 bytes).
    Removing queue.o(.text.xQueueGiveFromISR), (110 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGiveFromISR), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueReceive), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvCopyDataFromQueue), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvIsQueueEmpty), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueSemaphoreTake), (8 bytes).
    Removing queue.o(.text.xQueuePeek), (288 bytes).
    Removing queue.o(.ARM.exidx.text.xQueuePeek), (8 bytes).
    Removing queue.o(.text.xQueueReceiveFromISR), (130 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueReceiveFromISR), (8 bytes).
    Removing queue.o(.text.xQueuePeekFromISR), (54 bytes).
    Removing queue.o(.ARM.exidx.text.xQueuePeekFromISR), (8 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueMessagesWaiting), (8 bytes).
    Removing queue.o(.text.uxQueueSpacesAvailable), (22 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueSpacesAvailable), (8 bytes).
    Removing queue.o(.text.uxQueueMessagesWaitingFromISR), (4 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueMessagesWaitingFromISR), (8 bytes).
    Removing queue.o(.text.vQueueDelete), (8 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueDelete), (8 bytes).
    Removing queue.o(.text.xQueueIsQueueEmptyFromISR), (10 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueIsQueueEmptyFromISR), (8 bytes).
    Removing queue.o(.text.xQueueIsQueueFullFromISR), (14 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueIsQueueFullFromISR), (8 bytes).
    Removing heap_2.o(.text), (0 bytes).
    Removing heap_2.o(.ARM.exidx.text.pvPortMalloc), (8 bytes).
    Removing heap_2.o(.ARM.exidx.text.prvHeapInit), (8 bytes).
    Removing heap_2.o(.ARM.exidx.text.vPortFree), (8 bytes).
    Removing heap_2.o(.text.xPortGetFreeHeapSize), (12 bytes).
    Removing heap_2.o(.ARM.exidx.text.xPortGetFreeHeapSize), (8 bytes).
    Removing heap_2.o(.text.vPortInitialiseBlocks), (2 bytes).
    Removing heap_2.o(.ARM.exidx.text.vPortInitialiseBlocks), (8 bytes).
    Removing port.o(.text), (0 bytes).
    Removing port.o(.ARM.exidx.text.pxPortInitialiseStack), (8 bytes).
    Removing port.o(.ARM.exidx.text.prvTaskExitError), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortSVCHandler), (8 bytes).
    Removing port.o(.ARM.exidx.text.xPortStartScheduler), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortSetupTimerInterrupt), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortEnableVFP), (8 bytes).
    Removing port.o(.ARM.exidx.text.prvPortStartFirstTask), (8 bytes).
    Removing port.o(.text.vPortEndScheduler), (2 bytes).
    Removing port.o(.ARM.exidx.text.vPortEndScheduler), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortEnterCritical), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortExitCritical), (8 bytes).
    Removing port.o(.ARM.exidx.text.xPortPendSVHandler), (8 bytes).
    Removing port.o(.ARM.exidx.text.xPortSysTickHandler), (8 bytes).
    Removing system_accelerate.o(.text), (0 bytes).
    Removing system_accelerate.o(.ARM.exidx.text.System_EnableIAccelerate), (8 bytes).
    Removing system_accelerate.o(.text.System_DisableIAccelerate), (46 bytes).
    Removing system_accelerate.o(.ARM.exidx.text.System_DisableIAccelerate), (8 bytes).
    Removing system_accelerate.o(.text.System_InvalidateIAccelerate), (30 bytes).
    Removing system_accelerate.o(.ARM.exidx.text.System_InvalidateIAccelerate), (8 bytes).
    Removing system_accelerate.o(.text.System_EnableDAccelerate), (130 bytes).
    Removing system_accelerate.o(.ARM.exidx.text.System_EnableDAccelerate), (8 bytes).
    Removing system_accelerate.o(.text.System_DisableDAccelerate), (134 bytes).
    Removing system_accelerate.o(.ARM.exidx.text.System_DisableDAccelerate), (8 bytes).
    Removing system_accelerate.o(.text.System_InvalidateDAccelerate), (110 bytes).
    Removing system_accelerate.o(.ARM.exidx.text.System_InvalidateDAccelerate), (8 bytes).
    Removing system_accelerate.o(.text.System_CleanDAccelerate), (110 bytes).
    Removing system_accelerate.o(.ARM.exidx.text.System_CleanDAccelerate), (8 bytes).
    Removing system_accelerate.o(.text.System_CleanInvalidateDAccelerate), (110 bytes).
    Removing system_accelerate.o(.ARM.exidx.text.System_CleanInvalidateDAccelerate), (8 bytes).
    Removing system_accelerate.o(.text.System_InvalidateDAccelerate_by_Addr), (74 bytes).
    Removing system_accelerate.o(.ARM.exidx.text.System_InvalidateDAccelerate_by_Addr), (8 bytes).
    Removing system_accelerate.o(.text.System_CleanDAccelerate_by_Addr), (74 bytes).
    Removing system_accelerate.o(.ARM.exidx.text.System_CleanDAccelerate_by_Addr), (8 bytes).
    Removing system_accelerate.o(.text.System_CleanInvalidateDAccelerate_by_Addr), (74 bytes).
    Removing system_accelerate.o(.ARM.exidx.text.System_CleanInvalidateDAccelerate_by_Addr), (8 bytes).
    Removing dadd.o(.text), (334 bytes).
    Removing dmul.o(.text), (228 bytes).
    Removing ddiv.o(.text), (222 bytes).
    Removing dfixul.o(.text), (48 bytes).
    Removing cdrcmple.o(.text), (48 bytes).
    Removing depilogue.o(.text), (186 bytes).

461 unused section(s) (total 18847 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/division.s                       0x00000000   Number         0  aeabi_sdiv.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  uldiv.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  uidiv.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry2.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry5.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11b.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llshl.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llushr.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llsshr.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printfb.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf0.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf1.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf2.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf3.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf4.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf5.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf6.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf7.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf8.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printfa.o ABSOLUTE
    ../clib/microlib/printf/stubs.s          0x00000000   Number         0  printfstubs.o ABSOLUTE
    ../clib/microlib/stdio/streams.c         0x00000000   Number         0  stdout.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpya.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpyb.o ABSOLUTE
    ../clib/microlib/string/memset.c         0x00000000   Number         0  memseta.o ABSOLUTE
    ../clib/microlib/stubs.s                 0x00000000   Number         0  iusefp.o ABSOLUTE
    ../fplib/microlib/fpadd.c                0x00000000   Number         0  dadd.o ABSOLUTE
    ../fplib/microlib/fpdiv.c                0x00000000   Number         0  ddiv.o ABSOLUTE
    ../fplib/microlib/fpepilogue.c           0x00000000   Number         0  depilogue.o ABSOLUTE
    ../fplib/microlib/fpfix.c                0x00000000   Number         0  dfixul.o ABSOLUTE
    ../fplib/microlib/fpmul.c                0x00000000   Number         0  dmul.o ABSOLUTE
    BlockQ.c                                 0x00000000   Number         0  blockq.o ABSOLUTE
    PollQ.c                                  0x00000000   Number         0  pollq.o ABSOLUTE
    System_Accelerate.c                      0x00000000   Number         0  system_accelerate.o ABSOLUTE
    acm32g103_it.c                           0x00000000   Number         0  acm32g103_it.o ABSOLUTE
    cdrcmple.s                               0x00000000   Number         0  cdrcmple.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    hal.c                                    0x00000000   Number         0  hal.o ABSOLUTE
    hal_cortex.c                             0x00000000   Number         0  hal_cortex.o ABSOLUTE
    hal_dma.c                                0x00000000   Number         0  hal_dma.o ABSOLUTE
    hal_exti.c                               0x00000000   Number         0  hal_exti.o ABSOLUTE
    hal_gpio.c                               0x00000000   Number         0  hal_gpio.o ABSOLUTE
    hal_rcc.c                                0x00000000   Number         0  hal_rcc.o ABSOLUTE
    hal_uart.c                               0x00000000   Number         0  hal_uart.o ABSOLUTE
    handlers.s                               0x00000000   Number         0  handlers.o ABSOLUTE
    heap_2.c                                 0x00000000   Number         0  heap_2.o ABSOLUTE
    init.s                                   0x00000000   Number         0  init.o ABSOLUTE
    integer.c                                0x00000000   Number         0  integer.o ABSOLUTE
    list.c                                   0x00000000   Number         0  list.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    port.c                                   0x00000000   Number         0  port.o ABSOLUTE
    queue.c                                  0x00000000   Number         0  queue.o ABSOLUTE
    semtest.c                                0x00000000   Number         0  semtest.o ABSOLUTE
    startup_acm32g103.s                      0x00000000   Number         0  startup_acm32g103.o ABSOLUTE
    system_acm32g103.c                       0x00000000   Number         0  system_acm32g103.o ABSOLUTE
    tasks.c                                  0x00000000   Number         0  tasks.o ABSOLUTE
    RESET                                    0x00000000   Section      288  startup_acm32g103.o(RESET)
    .ARM.Collect$$$$00000000                 0x00000120   Section        0  entry.o(.ARM.Collect$$$$00000000)
    .ARM.Collect$$$$00000001                 0x00000120   Section        4  entry2.o(.ARM.Collect$$$$00000001)
    .ARM.Collect$$$$00000004                 0x00000124   Section        4  entry5.o(.ARM.Collect$$$$00000004)
    .ARM.Collect$$$$00000008                 0x00000128   Section        0  entry7b.o(.ARM.Collect$$$$00000008)
    .ARM.Collect$$$$0000000A                 0x00000128   Section        0  entry8b.o(.ARM.Collect$$$$0000000A)
    .ARM.Collect$$$$0000000B                 0x00000128   Section        8  entry9a.o(.ARM.Collect$$$$0000000B)
    __lit__00000000                          0x00000130   Data           4  entry2.o(.ARM.Collect$$$$00002712)
    .ARM.Collect$$$$0000000D                 0x00000130   Section        0  entry10a.o(.ARM.Collect$$$$0000000D)
    .ARM.Collect$$$$0000000F                 0x00000130   Section        0  entry11a.o(.ARM.Collect$$$$0000000F)
    .ARM.Collect$$$$00002712                 0x00000130   Section        4  entry2.o(.ARM.Collect$$$$00002712)
    $v0                                      0x00000134   Number         0  startup_acm32g103.o(.text)
    .text                                    0x00000134   Section       36  startup_acm32g103.o(.text)
    .text                                    0x00000158   Section        0  uldiv.o(.text)
    .text                                    0x000001ba   Section        0  memcpya.o(.text)
    .text                                    0x000001de   Section        0  memseta.o(.text)
    .text                                    0x00000202   Section        0  uidiv.o(.text)
    .text                                    0x0000022e   Section        0  llshl.o(.text)
    .text                                    0x0000024c   Section        0  llushr.o(.text)
    .text                                    0x0000026c   Section       36  init.o(.text)
    HAL_EFLASH_SetRdwaitBySysCoreClock       0x00000291   Thumb Code   128  hal_rcc.o(.text.HAL_EFLASH_SetRdwaitBySysCoreClock)
    [Anonymous Symbol]                       0x00000290   Section        0  hal_rcc.o(.text.HAL_EFLASH_SetRdwaitBySysCoreClock)
    [Anonymous Symbol]                       0x00000310   Section        0  hal_exti.o(.text.HAL_EXTI_ClearConfigLine)
    [Anonymous Symbol]                       0x00000360   Section        0  hal_exti.o(.text.HAL_EXTI_ClearPending)
    [Anonymous Symbol]                       0x00000398   Section        0  hal_exti.o(.text.HAL_EXTI_IsConfigLine)
    [Anonymous Symbol]                       0x0000053c   Section        0  hal_exti.o(.text.HAL_EXTI_SetConfigLine)
    [Anonymous Symbol]                       0x000007b0   Section        0  hal_gpio.o(.text.HAL_GPIO_Init)
    [Anonymous Symbol]                       0x00000ab4   Section        0  hal.o(.text.HAL_Init)
    [Anonymous Symbol]                       0x00000adc   Section        0  acm32g103_it.o(.text.HAL_InitTick)
    [Anonymous Symbol]                       0x00000ae0   Section        0  hal.o(.text.HAL_MspInit)
    [Anonymous Symbol]                       0x00000ae4   Section        0  hal_rcc.o(.text.HAL_RCC_ClockConfig)
    [Anonymous Symbol]                       0x00000c48   Section        0  hal_rcc.o(.text.HAL_RCC_GetHCLKFreq)
    [Anonymous Symbol]                       0x00000c54   Section        0  hal_rcc.o(.text.HAL_RCC_GetPCLK1Freq)
    [Anonymous Symbol]                       0x00000c88   Section        0  hal_rcc.o(.text.HAL_RCC_GetPCLK2Freq)
    [Anonymous Symbol]                       0x00000cbc   Section        0  hal_rcc.o(.text.HAL_RCC_GetRC32KVal)
    [Anonymous Symbol]                       0x00000ce0   Section        0  hal_rcc.o(.text.HAL_RCC_GetRC64MVal)
    [Anonymous Symbol]                       0x00000d0c   Section        0  hal_rcc.o(.text.HAL_RCC_GetSYSCLKFreq)
    [Anonymous Symbol]                       0x00000db8   Section        0  hal_rcc.o(.text.HAL_RCC_GetSysCoreClockFreq)
    [Anonymous Symbol]                       0x00000de0   Section        0  hal_rcc.o(.text.HAL_RCC_OscConfig)
    [Anonymous Symbol]                       0x00001220   Section        0  hal_uart.o(.text.HAL_UART_Init)
    [Anonymous Symbol]                       0x00001310   Section        0  hal_uart.o(.text.HAL_UART_MspInit)
    [Anonymous Symbol]                       0x00001558   Section        0  hal_uart.o(.text.HAL_UART_SetDebugUart)
    [Anonymous Symbol]                       0x000015b8   Section        0  acm32g103_it.o(.text.PendSV_Handler)
    [Anonymous Symbol]                       0x000015c0   Section        0  acm32g103_it.o(.text.SVC_Handler)
    [Anonymous Symbol]                       0x000015c8   Section        0  acm32g103_it.o(.text.SysTick_Handler)
    [Anonymous Symbol]                       0x000015d0   Section        0  system_acm32g103.o(.text.SystemClock_Config)
    [Anonymous Symbol]                       0x000015e4   Section        0  system_acm32g103.o(.text.SystemClock_FastConfig)
    [Anonymous Symbol]                       0x00001728   Section        0  system_acm32g103.o(.text.SystemInit)
    [Anonymous Symbol]                       0x00001784   Section        0  system_accelerate.o(.text.System_EnableIAccelerate)
    UART_Config_BaudRate                     0x000017bd   Thumb Code   156  hal_uart.o(.text.UART_Config_BaudRate)
    [Anonymous Symbol]                       0x000017bc   Section        0  hal_uart.o(.text.UART_Config_BaudRate)
    __NVIC_ClearPendingIRQ                   0x00001859   Thumb Code    22  hal_uart.o(.text.__NVIC_ClearPendingIRQ)
    [Anonymous Symbol]                       0x00001858   Section        0  hal_uart.o(.text.__NVIC_ClearPendingIRQ)
    __NVIC_EnableIRQ                         0x00001871   Thumb Code    22  hal_uart.o(.text.__NVIC_EnableIRQ)
    [Anonymous Symbol]                       0x00001870   Section        0  hal_uart.o(.text.__NVIC_EnableIRQ)
    __NVIC_SetPriority                       0x00001889   Thumb Code    16  hal_uart.o(.text.__NVIC_SetPriority)
    [Anonymous Symbol]                       0x00001888   Section        0  hal_uart.o(.text.__NVIC_SetPriority)
    __NVIC_SetPriorityGrouping               0x00001899   Thumb Code    30  hal.o(.text.__NVIC_SetPriorityGrouping)
    [Anonymous Symbol]                       0x00001898   Section        0  hal.o(.text.__NVIC_SetPriorityGrouping)
    [Anonymous Symbol]                       0x000018b8   Section        0  main.o(.text.assert_failed)
    [Anonymous Symbol]                       0x000018e4   Section        0  hal_uart.o(.text.fputc)
    [Anonymous Symbol]                       0x00001900   Section        0  main.o(.text.main)
    prvAddCurrentTaskToDelayedList           0x00001981   Thumb Code   162  tasks.o(.text.prvAddCurrentTaskToDelayedList)
    [Anonymous Symbol]                       0x00001980   Section        0  tasks.o(.text.prvAddCurrentTaskToDelayedList)
    prvAddNewTaskToReadyList                 0x00001a25   Thumb Code   172  tasks.o(.text.prvAddNewTaskToReadyList)
    [Anonymous Symbol]                       0x00001a24   Section        0  tasks.o(.text.prvAddNewTaskToReadyList)
    prvCheckTasksWaitingTermination          0x00001ad1   Thumb Code    78  tasks.o(.text.prvCheckTasksWaitingTermination)
    [Anonymous Symbol]                       0x00001ad0   Section        0  tasks.o(.text.prvCheckTasksWaitingTermination)
    prvCopyDataFromQueue                     0x00001b21   Thumb Code    38  queue.o(.text.prvCopyDataFromQueue)
    [Anonymous Symbol]                       0x00001b20   Section        0  queue.o(.text.prvCopyDataFromQueue)
    prvCopyDataToQueue                       0x00001b49   Thumb Code    98  queue.o(.text.prvCopyDataToQueue)
    [Anonymous Symbol]                       0x00001b48   Section        0  queue.o(.text.prvCopyDataToQueue)
    prvDeleteTCB                             0x00001bad   Thumb Code    18  tasks.o(.text.prvDeleteTCB)
    [Anonymous Symbol]                       0x00001bac   Section        0  tasks.o(.text.prvDeleteTCB)
    prvHeapInit                              0x00001bc1   Thumb Code    50  heap_2.o(.text.prvHeapInit)
    [Anonymous Symbol]                       0x00001bc0   Section        0  heap_2.o(.text.prvHeapInit)
    prvIdleTask                              0x00001bf5   Thumb Code     6  tasks.o(.text.prvIdleTask)
    [Anonymous Symbol]                       0x00001bf4   Section        0  tasks.o(.text.prvIdleTask)
    prvInitialiseNewQueue                    0x00001bfd   Thumb Code    24  queue.o(.text.prvInitialiseNewQueue)
    [Anonymous Symbol]                       0x00001bfc   Section        0  queue.o(.text.prvInitialiseNewQueue)
    prvInitialiseNewTask                     0x00001c15   Thumb Code   122  tasks.o(.text.prvInitialiseNewTask)
    [Anonymous Symbol]                       0x00001c14   Section        0  tasks.o(.text.prvInitialiseNewTask)
    prvInitialiseTaskLists                   0x00001c91   Thumb Code   110  tasks.o(.text.prvInitialiseTaskLists)
    [Anonymous Symbol]                       0x00001c90   Section        0  tasks.o(.text.prvInitialiseTaskLists)
    prvIsQueueEmpty                          0x00001d01   Thumb Code    24  queue.o(.text.prvIsQueueEmpty)
    [Anonymous Symbol]                       0x00001d00   Section        0  queue.o(.text.prvIsQueueEmpty)
    prvIsQueueFull                           0x00001d19   Thumb Code    28  queue.o(.text.prvIsQueueFull)
    [Anonymous Symbol]                       0x00001d18   Section        0  queue.o(.text.prvIsQueueFull)
    prvPortStartFirstTask                    0x00001d35   Thumb Code    34  port.o(.text.prvPortStartFirstTask)
    [Anonymous Symbol]                       0x00001d34   Section        0  port.o(.text.prvPortStartFirstTask)
    prvResetNextTaskUnblockTime              0x00001d5d   Thumb Code    40  tasks.o(.text.prvResetNextTaskUnblockTime)
    [Anonymous Symbol]                       0x00001d5c   Section        0  tasks.o(.text.prvResetNextTaskUnblockTime)
    prvSemaphoreTest                         0x00001d85   Thumb Code   190  semtest.o(.text.prvSemaphoreTest)
    [Anonymous Symbol]                       0x00001d84   Section        0  semtest.o(.text.prvSemaphoreTest)
    prvSetupHardware                         0x00001e45   Thumb Code    16  main.o(.text.prvSetupHardware)
    [Anonymous Symbol]                       0x00001e44   Section        0  main.o(.text.prvSetupHardware)
    prvTaskExitError                         0x00001e55   Thumb Code    34  port.o(.text.prvTaskExitError)
    [Anonymous Symbol]                       0x00001e54   Section        0  port.o(.text.prvTaskExitError)
    prvUnlockQueue                           0x00001e79   Thumb Code   114  queue.o(.text.prvUnlockQueue)
    [Anonymous Symbol]                       0x00001e78   Section        0  queue.o(.text.prvUnlockQueue)
    [Anonymous Symbol]                       0x00001eec   Section        0  heap_2.o(.text.pvPortMalloc)
    [Anonymous Symbol]                       0x00001fbc   Section        0  port.o(.text.pxPortInitialiseStack)
    uart_init                                0x00001fe5   Thumb Code    58  main.o(.text.uart_init)
    [Anonymous Symbol]                       0x00001fe4   Section        0  main.o(.text.uart_init)
    [Anonymous Symbol]                       0x00002020   Section        0  list.o(.text.uxListRemove)
    [Anonymous Symbol]                       0x00002048   Section        0  queue.o(.text.uxQueueMessagesWaiting)
    vBlockingQueueConsumer                   0x0000205d   Thumb Code    60  blockq.o(.text.vBlockingQueueConsumer)
    [Anonymous Symbol]                       0x0000205c   Section        0  blockq.o(.text.vBlockingQueueConsumer)
    vBlockingQueueProducer                   0x00002099   Thumb Code    60  blockq.o(.text.vBlockingQueueProducer)
    [Anonymous Symbol]                       0x00002098   Section        0  blockq.o(.text.vBlockingQueueProducer)
    vCheckTask                               0x000020d5   Thumb Code   132  main.o(.text.vCheckTask)
    [Anonymous Symbol]                       0x000020d4   Section        0  main.o(.text.vCheckTask)
    vCompeteingIntMathTask                   0x00002159   Thumb Code    94  integer.o(.text.vCompeteingIntMathTask)
    [Anonymous Symbol]                       0x00002158   Section        0  integer.o(.text.vCompeteingIntMathTask)
    [Anonymous Symbol]                       0x000021b8   Section        0  list.o(.text.vListInitialise)
    [Anonymous Symbol]                       0x000021d0   Section        0  list.o(.text.vListInitialiseItem)
    [Anonymous Symbol]                       0x000021d8   Section        0  list.o(.text.vListInsert)
    [Anonymous Symbol]                       0x00002214   Section        0  list.o(.text.vListInsertEnd)
    vPolledQueueConsumer                     0x00002231   Thumb Code   102  pollq.o(.text.vPolledQueueConsumer)
    [Anonymous Symbol]                       0x00002230   Section        0  pollq.o(.text.vPolledQueueConsumer)
    vPolledQueueProducer                     0x00002299   Thumb Code    90  pollq.o(.text.vPolledQueueProducer)
    [Anonymous Symbol]                       0x00002298   Section        0  pollq.o(.text.vPolledQueueProducer)
    vPortEnableVFP                           0x000022f5   Thumb Code    14  port.o(.text.vPortEnableVFP)
    [Anonymous Symbol]                       0x000022f4   Section        0  port.o(.text.vPortEnableVFP)
    [Anonymous Symbol]                       0x00002308   Section        0  port.o(.text.vPortEnterCritical)
    [Anonymous Symbol]                       0x00002328   Section        0  port.o(.text.vPortExitCritical)
    [Anonymous Symbol]                       0x00002344   Section        0  heap_2.o(.text.vPortFree)
    [Anonymous Symbol]                       0x00002390   Section        0  port.o(.text.vPortSVCHandler)
    pxCurrentTCBConst2                       0x000023b0   Number         0  port.o(.text.vPortSVCHandler)
    [Anonymous Symbol]                       0x000023b4   Section        0  port.o(.text.vPortSetupTimerInterrupt)
    vPrintTask                               0x000023e9   Thumb Code    72  main.o(.text.vPrintTask)
    [Anonymous Symbol]                       0x000023e8   Section        0  main.o(.text.vPrintTask)
    [Anonymous Symbol]                       0x00002430   Section        0  blockq.o(.text.vStartBlockingQueueTasks)
    [Anonymous Symbol]                       0x00002598   Section        0  integer.o(.text.vStartIntegerMathTasks)
    [Anonymous Symbol]                       0x000025cc   Section        0  pollq.o(.text.vStartPolledQueueTasks)
    [Anonymous Symbol]                       0x00002634   Section        0  semtest.o(.text.vStartSemaphoreTasks)
    [Anonymous Symbol]                       0x00002718   Section        0  tasks.o(.text.vTaskDelay)
    [Anonymous Symbol]                       0x0000274c   Section        0  tasks.o(.text.vTaskDelayUntil)
    [Anonymous Symbol]                       0x000027a8   Section        0  tasks.o(.text.vTaskInternalSetTimeOutState)
    [Anonymous Symbol]                       0x000027c4   Section        0  tasks.o(.text.vTaskMissedYield)
    [Anonymous Symbol]                       0x000027d4   Section        0  tasks.o(.text.vTaskPlaceOnEventList)
    [Anonymous Symbol]                       0x000027f4   Section        0  tasks.o(.text.vTaskStartScheduler)
    [Anonymous Symbol]                       0x00002860   Section        0  tasks.o(.text.vTaskSuspendAll)
    [Anonymous Symbol]                       0x00002870   Section        0  tasks.o(.text.vTaskSwitchContext)
    [Anonymous Symbol]                       0x000028dc   Section        0  blockq.o(.text.xAreBlockingQueuesStillRunning)
    [Anonymous Symbol]                       0x00002938   Section        0  integer.o(.text.xAreIntegerMathsTaskStillRunning)
    [Anonymous Symbol]                       0x00002950   Section        0  pollq.o(.text.xArePollingQueuesStillRunning)
    [Anonymous Symbol]                       0x0000297c   Section        0  semtest.o(.text.xAreSemaphoreTasksStillRunning)
    [Anonymous Symbol]                       0x000029c0   Section        0  port.o(.text.xPortPendSVHandler)
    pxCurrentTCBConst                        0x00002a20   Number         0  port.o(.text.xPortPendSVHandler)
    [Anonymous Symbol]                       0x00002a24   Section        0  port.o(.text.xPortStartScheduler)
    [Anonymous Symbol]                       0x00002a70   Section        0  port.o(.text.xPortSysTickHandler)
    [Anonymous Symbol]                       0x00002aa0   Section        0  queue.o(.text.xQueueGenericCreate)
    [Anonymous Symbol]                       0x00002acc   Section        0  queue.o(.text.xQueueGenericReset)
    [Anonymous Symbol]                       0x00002b38   Section        0  queue.o(.text.xQueueGenericSend)
    [Anonymous Symbol]                       0x00002c54   Section        0  queue.o(.text.xQueueReceive)
    [Anonymous Symbol]                       0x00002d80   Section        0  queue.o(.text.xQueueSemaphoreTake)
    [Anonymous Symbol]                       0x00002e98   Section        0  tasks.o(.text.xTaskCheckForTimeOut)
    [Anonymous Symbol]                       0x00002ef4   Section        0  tasks.o(.text.xTaskCreate)
    [Anonymous Symbol]                       0x00002f54   Section        0  tasks.o(.text.xTaskGetTickCount)
    [Anonymous Symbol]                       0x00002f60   Section        0  tasks.o(.text.xTaskIncrementTick)
    [Anonymous Symbol]                       0x000030ac   Section        0  tasks.o(.text.xTaskRemoveFromEventList)
    [Anonymous Symbol]                       0x00003128   Section        0  tasks.o(.text.xTaskResumeAll)
    i.__0printf$3                            0x00003228   Section        0  printf3.o(i.__0printf$3)
    i.__scatterload_copy                     0x00003248   Section       14  handlers.o(i.__scatterload_copy)
    i.__scatterload_null                     0x00003256   Section        2  handlers.o(i.__scatterload_null)
    i.__scatterload_zeroinit                 0x00003258   Section       14  handlers.o(i.__scatterload_zeroinit)
    _printf_core                             0x00003269   Thumb Code   436  printf3.o(i._printf_core)
    i._printf_core                           0x00003268   Section        0  printf3.o(i._printf_core)
    .L.str                                   0x00003420   Data          37  hal_uart.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x00003420   Section        0  hal_uart.o(.rodata.str1.1)
    .L.str                                   0x00003445   Data          36  hal_rcc.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x00003445   Section        0  hal_rcc.o(.rodata.str1.1)
    .L.str                                   0x00003469   Data          37  hal_gpio.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x00003469   Section        0  hal_gpio.o(.rodata.str1.1)
    .L.str                                   0x0000348e   Data          37  hal_exti.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x0000348e   Section        0  hal_exti.o(.rodata.str1.1)
    .data                                    0x20000000   Section        4  stdout.o(.data)
    uxCriticalNesting                        0x20000008   Data           4  port.o(.data.uxCriticalNesting)
    [Anonymous Symbol]                       0x20000008   Section        0  port.o(.data.uxCriticalNesting)
    xFreeBytesRemaining                      0x2000000c   Data           4  heap_2.o(.data.xFreeBytesRemaining)
    [Anonymous Symbol]                       0x2000000c   Section        0  heap_2.o(.data.xFreeBytesRemaining)
    pvPortMalloc.xHeapHasBeenInitialised     0x20000074   Data           1  heap_2.o(.bss.pvPortMalloc.xHeapHasBeenInitialised)
    [Anonymous Symbol]                       0x20000074   Section        0  heap_2.o(.bss.pvPortMalloc.xHeapHasBeenInitialised)
    pxDelayedTaskList                        0x2000007c   Data           4  tasks.o(.bss.pxDelayedTaskList)
    [Anonymous Symbol]                       0x2000007c   Section        0  tasks.o(.bss.pxDelayedTaskList)
    pxOverflowDelayedTaskList                0x20000080   Data           4  tasks.o(.bss.pxOverflowDelayedTaskList)
    [Anonymous Symbol]                       0x20000080   Section        0  tasks.o(.bss.pxOverflowDelayedTaskList)
    pxReadyTasksLists                        0x20000084   Data          80  tasks.o(.bss.pxReadyTasksLists)
    [Anonymous Symbol]                       0x20000084   Section        0  tasks.o(.bss.pxReadyTasksLists)
    sBlockingConsumerCount                   0x200000d4   Data           6  blockq.o(.bss.sBlockingConsumerCount)
    [Anonymous Symbol]                       0x200000d4   Section        0  blockq.o(.bss.sBlockingConsumerCount)
    sBlockingProducerCount                   0x200000da   Data           6  blockq.o(.bss.sBlockingProducerCount)
    [Anonymous Symbol]                       0x200000da   Section        0  blockq.o(.bss.sBlockingProducerCount)
    sCheckVariables                          0x200000e0   Data           8  semtest.o(.bss.sCheckVariables)
    [Anonymous Symbol]                       0x200000e0   Section        0  semtest.o(.bss.sCheckVariables)
    sNextCheckVariable                       0x200000e8   Data           2  semtest.o(.bss.sNextCheckVariable)
    [Anonymous Symbol]                       0x200000e8   Section        0  semtest.o(.bss.sNextCheckVariable)
    ucHeap                                   0x200000ea   Data       10240  heap_2.o(.bss.ucHeap)
    [Anonymous Symbol]                       0x200000ea   Section        0  heap_2.o(.bss.ucHeap)
    uxCurrentNumberOfTasks                   0x200028ec   Data           4  tasks.o(.bss.uxCurrentNumberOfTasks)
    [Anonymous Symbol]                       0x200028ec   Section        0  tasks.o(.bss.uxCurrentNumberOfTasks)
    uxDeletedTasksWaitingCleanUp             0x200028f0   Data           4  tasks.o(.bss.uxDeletedTasksWaitingCleanUp)
    [Anonymous Symbol]                       0x200028f0   Section        0  tasks.o(.bss.uxDeletedTasksWaitingCleanUp)
    uxPendedTicks                            0x200028f4   Data           4  tasks.o(.bss.uxPendedTicks)
    [Anonymous Symbol]                       0x200028f4   Section        0  tasks.o(.bss.uxPendedTicks)
    uxSchedulerSuspended                     0x200028f8   Data           4  tasks.o(.bss.uxSchedulerSuspended)
    [Anonymous Symbol]                       0x200028f8   Section        0  tasks.o(.bss.uxSchedulerSuspended)
    uxTaskNumber                             0x200028fc   Data           4  tasks.o(.bss.uxTaskNumber)
    [Anonymous Symbol]                       0x200028fc   Section        0  tasks.o(.bss.uxTaskNumber)
    uxTopReadyPriority                       0x20002900   Data           4  tasks.o(.bss.uxTopReadyPriority)
    [Anonymous Symbol]                       0x20002900   Section        0  tasks.o(.bss.uxTopReadyPriority)
    vStartPolledQueueTasks.xPolledQueue      0x20002904   Data           4  pollq.o(.bss.vStartPolledQueueTasks.xPolledQueue)
    [Anonymous Symbol]                       0x20002904   Section        0  pollq.o(.bss.vStartPolledQueueTasks.xPolledQueue)
    xAreBlockingQueuesStillRunning.sLastBlockingConsumerCount 0x20002908   Data           6  blockq.o(.bss.xAreBlockingQueuesStillRunning.sLastBlockingConsumerCount)
    [Anonymous Symbol]                       0x20002908   Section        0  blockq.o(.bss.xAreBlockingQueuesStillRunning.sLastBlockingConsumerCount)
    xAreBlockingQueuesStillRunning.sLastBlockingProducerCount 0x2000290e   Data           6  blockq.o(.bss.xAreBlockingQueuesStillRunning.sLastBlockingProducerCount)
    [Anonymous Symbol]                       0x2000290e   Section        0  blockq.o(.bss.xAreBlockingQueuesStillRunning.sLastBlockingProducerCount)
    xAreSemaphoreTasksStillRunning.sLastCheckVariables 0x20002914   Data           8  semtest.o(.bss.xAreSemaphoreTasksStillRunning.sLastCheckVariables)
    [Anonymous Symbol]                       0x20002914   Section        0  semtest.o(.bss.xAreSemaphoreTasksStillRunning.sLastCheckVariables)
    xDelayedTaskList1                        0x2000291c   Data          20  tasks.o(.bss.xDelayedTaskList1)
    [Anonymous Symbol]                       0x2000291c   Section        0  tasks.o(.bss.xDelayedTaskList1)
    xDelayedTaskList2                        0x20002930   Data          20  tasks.o(.bss.xDelayedTaskList2)
    [Anonymous Symbol]                       0x20002930   Section        0  tasks.o(.bss.xDelayedTaskList2)
    xEnd                                     0x20002944   Data           8  heap_2.o(.bss.xEnd)
    [Anonymous Symbol]                       0x20002944   Section        0  heap_2.o(.bss.xEnd)
    xIdleTaskHandle                          0x2000294c   Data           4  tasks.o(.bss.xIdleTaskHandle)
    [Anonymous Symbol]                       0x2000294c   Section        0  tasks.o(.bss.xIdleTaskHandle)
    xNextTaskUnblockTime                     0x20002950   Data           4  tasks.o(.bss.xNextTaskUnblockTime)
    [Anonymous Symbol]                       0x20002950   Section        0  tasks.o(.bss.xNextTaskUnblockTime)
    xNumOfOverflows                          0x20002954   Data           4  tasks.o(.bss.xNumOfOverflows)
    [Anonymous Symbol]                       0x20002954   Section        0  tasks.o(.bss.xNumOfOverflows)
    xPendingReadyList                        0x20002958   Data          20  tasks.o(.bss.xPendingReadyList)
    [Anonymous Symbol]                       0x20002958   Section        0  tasks.o(.bss.xPendingReadyList)
    xPollingConsumerCount                    0x2000296c   Data           4  pollq.o(.bss.xPollingConsumerCount)
    [Anonymous Symbol]                       0x2000296c   Section        0  pollq.o(.bss.xPollingConsumerCount)
    xPollingProducerCount                    0x20002970   Data           4  pollq.o(.bss.xPollingProducerCount)
    [Anonymous Symbol]                       0x20002970   Section        0  pollq.o(.bss.xPollingProducerCount)
    xSchedulerRunning                        0x20002978   Data           4  tasks.o(.bss.xSchedulerRunning)
    [Anonymous Symbol]                       0x20002978   Section        0  tasks.o(.bss.xSchedulerRunning)
    xStart                                   0x2000297c   Data           8  heap_2.o(.bss.xStart)
    [Anonymous Symbol]                       0x2000297c   Section        0  heap_2.o(.bss.xStart)
    xSuspendedTaskList                       0x20002984   Data          20  tasks.o(.bss.xSuspendedTaskList)
    [Anonymous Symbol]                       0x20002984   Section        0  tasks.o(.bss.xSuspendedTaskList)
    xTaskCheck                               0x20002998   Data           4  integer.o(.bss.xTaskCheck)
    [Anonymous Symbol]                       0x20002998   Section        0  integer.o(.bss.xTaskCheck)
    xTasksWaitingTermination                 0x2000299c   Data          20  tasks.o(.bss.xTasksWaitingTermination)
    [Anonymous Symbol]                       0x2000299c   Section        0  tasks.o(.bss.xTasksWaitingTermination)
    xTickCount                               0x200029b0   Data           4  tasks.o(.bss.xTickCount)
    [Anonymous Symbol]                       0x200029b0   Section        0  tasks.o(.bss.xTickCount)
    xYieldPending                            0x200029b4   Data           4  tasks.o(.bss.xYieldPending)
    [Anonymous Symbol]                       0x200029b4   Section        0  tasks.o(.bss.xYieldPending)
    STACK                                    0x200029b8   Section     2048  startup_acm32g103.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv4$E$P$D$K$B$S$7EM$8M$VFPi5$EXTD16$VFPS$VFMA$PE$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OTIME$ROPI$EBA8$MICROLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __Vectors                                0x00000000   Data           0  startup_acm32g103.o(RESET)
    _printf_a                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_c                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_charcount                        0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_d                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_e                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_f                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_flags                            0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_fp_dec                           0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_fp_hex                           0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_g                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_i                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_int_dec                          0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_l                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_lc                               0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_ll                               0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_lld                              0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_lli                              0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_llo                              0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_llu                              0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_llx                              0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_longlong_dec                     0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_longlong_hex                     0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_longlong_oct                     0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_ls                               0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_mbtowc                           0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_n                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_o                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_p                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_percent                          0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_pre_padding                      0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_return_value                     0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_s                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_sizespec                         0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_str                              0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_truncate_signed                  0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_truncate_unsigned                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_u                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_wc                               0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_wctomb                           0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_widthprec                        0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_x                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    HAL_UART_ErrorCallback                    - Undefined Weak Reference
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __decompress                              - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _microlib_exit                            - Undefined Weak Reference
    __main                                   0x00000121   Thumb Code     0  entry.o(.ARM.Collect$$$$00000000)
    _main_stk                                0x00000121   Thumb Code     0  entry2.o(.ARM.Collect$$$$00000001)
    _main_scatterload                        0x00000125   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    __main_after_scatterload                 0x00000129   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    _main_clock                              0x00000129   Thumb Code     0  entry7b.o(.ARM.Collect$$$$00000008)
    _main_cpp_init                           0x00000129   Thumb Code     0  entry8b.o(.ARM.Collect$$$$0000000A)
    _main_init                               0x00000129   Thumb Code     0  entry9a.o(.ARM.Collect$$$$0000000B)
    __rt_final_cpp                           0x00000131   Thumb Code     0  entry10a.o(.ARM.Collect$$$$0000000D)
    __rt_final_exit                          0x00000131   Thumb Code     0  entry11a.o(.ARM.Collect$$$$0000000F)
    Reset_Handler                            0x00000135   Thumb Code     8  startup_acm32g103.o(.text)
    NMI_Handler                              0x0000013d   Thumb Code     2  startup_acm32g103.o(.text)
    HardFault_Handler                        0x0000013f   Thumb Code     2  startup_acm32g103.o(.text)
    MemManage_Handler                        0x00000141   Thumb Code     2  startup_acm32g103.o(.text)
    BusFault_Handler                         0x00000143   Thumb Code     2  startup_acm32g103.o(.text)
    UsageFault_Handler                       0x00000145   Thumb Code     2  startup_acm32g103.o(.text)
    DebugMon_Handler                         0x00000149   Thumb Code     2  startup_acm32g103.o(.text)
    ADC1_2_IRQHandler                        0x0000014f   Thumb Code     0  startup_acm32g103.o(.text)
    AES_IRQHandler                           0x0000014f   Thumb Code     0  startup_acm32g103.o(.text)
    CAN1_IRQHandler                          0x0000014f   Thumb Code     0  startup_acm32g103.o(.text)
    CAN2_IRQHandler                          0x0000014f   Thumb Code     0  startup_acm32g103.o(.text)
    CLKRDY_IRQHandler                        0x0000014f   Thumb Code     0  startup_acm32g103.o(.text)
    COMP1_2_IRQHandler                       0x0000014f   Thumb Code     0  startup_acm32g103.o(.text)
    COMP3_4_IRQHandler                       0x0000014f   Thumb Code     0  startup_acm32g103.o(.text)
    DAC_IRQHandler                           0x0000014f   Thumb Code     0  startup_acm32g103.o(.text)
    DMA1_IRQHandler                          0x0000014f   Thumb Code     0  startup_acm32g103.o(.text)
    DMA2_IRQHandler                          0x0000014f   Thumb Code     0  startup_acm32g103.o(.text)
    EFC_IRQHandler                           0x0000014f   Thumb Code     0  startup_acm32g103.o(.text)
    EXTI0_IRQHandler                         0x0000014f   Thumb Code     0  startup_acm32g103.o(.text)
    EXTI15_10_IRQHandler                     0x0000014f   Thumb Code     0  startup_acm32g103.o(.text)
    EXTI1_IRQHandler                         0x0000014f   Thumb Code     0  startup_acm32g103.o(.text)
    EXTI2_IRQHandler                         0x0000014f   Thumb Code     0  startup_acm32g103.o(.text)
    EXTI3_IRQHandler                         0x0000014f   Thumb Code     0  startup_acm32g103.o(.text)
    EXTI4_IRQHandler                         0x0000014f   Thumb Code     0  startup_acm32g103.o(.text)
    EXTI9_5_IRQHandler                       0x0000014f   Thumb Code     0  startup_acm32g103.o(.text)
    FPU_IRQHandler                           0x0000014f   Thumb Code     0  startup_acm32g103.o(.text)
    I2C1_IRQHandler                          0x0000014f   Thumb Code     0  startup_acm32g103.o(.text)
    I2C2_IRQHandler                          0x0000014f   Thumb Code     0  startup_acm32g103.o(.text)
    I2S1_IRQHandler                          0x0000014f   Thumb Code     0  startup_acm32g103.o(.text)
    I2S2_IRQHandler                          0x0000014f   Thumb Code     0  startup_acm32g103.o(.text)
    IWDT_WAKEUP_IRQHandler                   0x0000014f   Thumb Code     0  startup_acm32g103.o(.text)
    LPTIM1_IRQHandler                        0x0000014f   Thumb Code     0  startup_acm32g103.o(.text)
    LPUART1_IRQHandler                       0x0000014f   Thumb Code     0  startup_acm32g103.o(.text)
    LVD_IRQHandler                           0x0000014f   Thumb Code     0  startup_acm32g103.o(.text)
    RSV1_IRQHandler                          0x0000014f   Thumb Code     0  startup_acm32g103.o(.text)
    RSV2_IRQHandler                          0x0000014f   Thumb Code     0  startup_acm32g103.o(.text)
    RSV3_IRQHandler                          0x0000014f   Thumb Code     0  startup_acm32g103.o(.text)
    RSV4_IRQHandler                          0x0000014f   Thumb Code     0  startup_acm32g103.o(.text)
    RTC_IRQHandler                           0x0000014f   Thumb Code     0  startup_acm32g103.o(.text)
    SPI1_IRQHandler                          0x0000014f   Thumb Code     0  startup_acm32g103.o(.text)
    SPI2_IRQHandler                          0x0000014f   Thumb Code     0  startup_acm32g103.o(.text)
    SPI3_IRQHandler                          0x0000014f   Thumb Code     0  startup_acm32g103.o(.text)
    SRAM_PARITY_IRQHandler                   0x0000014f   Thumb Code     0  startup_acm32g103.o(.text)
    STOP_RESET_IRQHandler                    0x0000014f   Thumb Code     0  startup_acm32g103.o(.text)
    TIM15_IRQHandler                         0x0000014f   Thumb Code     0  startup_acm32g103.o(.text)
    TIM16_IRQHandler                         0x0000014f   Thumb Code     0  startup_acm32g103.o(.text)
    TIM17_IRQHandler                         0x0000014f   Thumb Code     0  startup_acm32g103.o(.text)
    TIM1_BRK_UP_TRG_COM_IRQHandler           0x0000014f   Thumb Code     0  startup_acm32g103.o(.text)
    TIM1_CC_IRQHandler                       0x0000014f   Thumb Code     0  startup_acm32g103.o(.text)
    TIM2_IRQHandler                          0x0000014f   Thumb Code     0  startup_acm32g103.o(.text)
    TIM3_IRQHandler                          0x0000014f   Thumb Code     0  startup_acm32g103.o(.text)
    TIM4_IRQHandler                          0x0000014f   Thumb Code     0  startup_acm32g103.o(.text)
    TIM6_IRQHandler                          0x0000014f   Thumb Code     0  startup_acm32g103.o(.text)
    TIM7_IRQHandler                          0x0000014f   Thumb Code     0  startup_acm32g103.o(.text)
    TIM8_BRK_UP_TRG_COM_IRQHandler           0x0000014f   Thumb Code     0  startup_acm32g103.o(.text)
    TIM8_CC_IRQHandler                       0x0000014f   Thumb Code     0  startup_acm32g103.o(.text)
    UART1_IRQHandler                         0x0000014f   Thumb Code     0  startup_acm32g103.o(.text)
    UART2_IRQHandler                         0x0000014f   Thumb Code     0  startup_acm32g103.o(.text)
    UART3_IRQHandler                         0x0000014f   Thumb Code     0  startup_acm32g103.o(.text)
    UART4_IRQHandler                         0x0000014f   Thumb Code     0  startup_acm32g103.o(.text)
    USB_IRQHandler                           0x0000014f   Thumb Code     0  startup_acm32g103.o(.text)
    USB_WAKEUP_IRQHandler                    0x0000014f   Thumb Code     0  startup_acm32g103.o(.text)
    WDT_IRQHandler                           0x0000014f   Thumb Code     0  startup_acm32g103.o(.text)
    __aeabi_uldivmod                         0x00000159   Thumb Code    98  uldiv.o(.text)
    __aeabi_memcpy                           0x000001bb   Thumb Code    36  memcpya.o(.text)
    __aeabi_memcpy4                          0x000001bb   Thumb Code     0  memcpya.o(.text)
    __aeabi_memcpy8                          0x000001bb   Thumb Code     0  memcpya.o(.text)
    __aeabi_memset                           0x000001df   Thumb Code    14  memseta.o(.text)
    __aeabi_memset4                          0x000001df   Thumb Code     0  memseta.o(.text)
    __aeabi_memset8                          0x000001df   Thumb Code     0  memseta.o(.text)
    __aeabi_memclr                           0x000001ed   Thumb Code     4  memseta.o(.text)
    __aeabi_memclr4                          0x000001ed   Thumb Code     0  memseta.o(.text)
    __aeabi_memclr8                          0x000001ed   Thumb Code     0  memseta.o(.text)
    _memset$wrapper                          0x000001f1   Thumb Code    18  memseta.o(.text)
    __aeabi_uidiv                            0x00000203   Thumb Code     0  uidiv.o(.text)
    __aeabi_uidivmod                         0x00000203   Thumb Code    44  uidiv.o(.text)
    __aeabi_llsl                             0x0000022f   Thumb Code    30  llshl.o(.text)
    _ll_shift_l                              0x0000022f   Thumb Code     0  llshl.o(.text)
    __aeabi_llsr                             0x0000024d   Thumb Code    32  llushr.o(.text)
    _ll_ushift_r                             0x0000024d   Thumb Code     0  llushr.o(.text)
    __scatterload                            0x0000026d   Thumb Code    28  init.o(.text)
    __scatterload_rt2                        0x0000026d   Thumb Code     0  init.o(.text)
    HAL_EXTI_ClearConfigLine                 0x00000311   Thumb Code    78  hal_exti.o(.text.HAL_EXTI_ClearConfigLine)
    HAL_EXTI_ClearPending                    0x00000361   Thumb Code    54  hal_exti.o(.text.HAL_EXTI_ClearPending)
    HAL_EXTI_IsConfigLine                    0x00000399   Thumb Code   418  hal_exti.o(.text.HAL_EXTI_IsConfigLine)
    HAL_EXTI_SetConfigLine                   0x0000053d   Thumb Code   628  hal_exti.o(.text.HAL_EXTI_SetConfigLine)
    HAL_GPIO_Init                            0x000007b1   Thumb Code   770  hal_gpio.o(.text.HAL_GPIO_Init)
    HAL_Init                                 0x00000ab5   Thumb Code    40  hal.o(.text.HAL_Init)
    HAL_InitTick                             0x00000add   Thumb Code     4  acm32g103_it.o(.text.HAL_InitTick)
    HAL_MspInit                              0x00000ae1   Thumb Code     2  hal.o(.text.HAL_MspInit)
    HAL_RCC_ClockConfig                      0x00000ae5   Thumb Code   354  hal_rcc.o(.text.HAL_RCC_ClockConfig)
    HAL_RCC_GetHCLKFreq                      0x00000c49   Thumb Code    12  hal_rcc.o(.text.HAL_RCC_GetHCLKFreq)
    HAL_RCC_GetPCLK1Freq                     0x00000c55   Thumb Code    52  hal_rcc.o(.text.HAL_RCC_GetPCLK1Freq)
    HAL_RCC_GetPCLK2Freq                     0x00000c89   Thumb Code    52  hal_rcc.o(.text.HAL_RCC_GetPCLK2Freq)
    HAL_RCC_GetRC32KVal                      0x00000cbd   Thumb Code    34  hal_rcc.o(.text.HAL_RCC_GetRC32KVal)
    HAL_RCC_GetRC64MVal                      0x00000ce1   Thumb Code    42  hal_rcc.o(.text.HAL_RCC_GetRC64MVal)
    HAL_RCC_GetSYSCLKFreq                    0x00000d0d   Thumb Code   172  hal_rcc.o(.text.HAL_RCC_GetSYSCLKFreq)
    HAL_RCC_GetSysCoreClockFreq              0x00000db9   Thumb Code    40  hal_rcc.o(.text.HAL_RCC_GetSysCoreClockFreq)
    HAL_RCC_OscConfig                        0x00000de1   Thumb Code  1086  hal_rcc.o(.text.HAL_RCC_OscConfig)
    HAL_UART_Init                            0x00001221   Thumb Code   238  hal_uart.o(.text.HAL_UART_Init)
    HAL_UART_MspInit                         0x00001311   Thumb Code   584  hal_uart.o(.text.HAL_UART_MspInit)
    HAL_UART_SetDebugUart                    0x00001559   Thumb Code    96  hal_uart.o(.text.HAL_UART_SetDebugUart)
    PendSV_Handler                           0x000015b9   Thumb Code     6  acm32g103_it.o(.text.PendSV_Handler)
    SVC_Handler                              0x000015c1   Thumb Code     6  acm32g103_it.o(.text.SVC_Handler)
    SysTick_Handler                          0x000015c9   Thumb Code     6  acm32g103_it.o(.text.SysTick_Handler)
    SystemClock_Config                       0x000015d1   Thumb Code    18  system_acm32g103.o(.text.SystemClock_Config)
    SystemClock_FastConfig                   0x000015e5   Thumb Code   322  system_acm32g103.o(.text.SystemClock_FastConfig)
    SystemInit                               0x00001729   Thumb Code    90  system_acm32g103.o(.text.SystemInit)
    System_EnableIAccelerate                 0x00001785   Thumb Code    54  system_accelerate.o(.text.System_EnableIAccelerate)
    assert_failed                            0x000018b9   Thumb Code    44  main.o(.text.assert_failed)
    fputc                                    0x000018e5   Thumb Code    28  hal_uart.o(.text.fputc)
    main                                     0x00001901   Thumb Code   128  main.o(.text.main)
    pvPortMalloc                             0x00001eed   Thumb Code   206  heap_2.o(.text.pvPortMalloc)
    pxPortInitialiseStack                    0x00001fbd   Thumb Code    40  port.o(.text.pxPortInitialiseStack)
    uxListRemove                             0x00002021   Thumb Code    40  list.o(.text.uxListRemove)
    uxQueueMessagesWaiting                   0x00002049   Thumb Code    18  queue.o(.text.uxQueueMessagesWaiting)
    vListInitialise                          0x000021b9   Thumb Code    22  list.o(.text.vListInitialise)
    vListInitialiseItem                      0x000021d1   Thumb Code     6  list.o(.text.vListInitialiseItem)
    vListInsert                              0x000021d9   Thumb Code    58  list.o(.text.vListInsert)
    vListInsertEnd                           0x00002215   Thumb Code    28  list.o(.text.vListInsertEnd)
    vPortEnterCritical                       0x00002309   Thumb Code    32  port.o(.text.vPortEnterCritical)
    vPortExitCritical                        0x00002329   Thumb Code    26  port.o(.text.vPortExitCritical)
    vPortFree                                0x00002345   Thumb Code    68  heap_2.o(.text.vPortFree)
    vPortSVCHandler                          0x00002391   Thumb Code    36  port.o(.text.vPortSVCHandler)
    vPortSetupTimerInterrupt                 0x000023b5   Thumb Code    52  port.o(.text.vPortSetupTimerInterrupt)
    vStartBlockingQueueTasks                 0x00002431   Thumb Code   360  blockq.o(.text.vStartBlockingQueueTasks)
    vStartIntegerMathTasks                   0x00002599   Thumb Code    52  integer.o(.text.vStartIntegerMathTasks)
    vStartPolledQueueTasks                   0x000025cd   Thumb Code   104  pollq.o(.text.vStartPolledQueueTasks)
    vStartSemaphoreTasks                     0x00002635   Thumb Code   228  semtest.o(.text.vStartSemaphoreTasks)
    vTaskDelay                               0x00002719   Thumb Code    52  tasks.o(.text.vTaskDelay)
    vTaskDelayUntil                          0x0000274d   Thumb Code    92  tasks.o(.text.vTaskDelayUntil)
    vTaskInternalSetTimeOutState             0x000027a9   Thumb Code    26  tasks.o(.text.vTaskInternalSetTimeOutState)
    vTaskMissedYield                         0x000027c5   Thumb Code    14  tasks.o(.text.vTaskMissedYield)
    vTaskPlaceOnEventList                    0x000027d5   Thumb Code    30  tasks.o(.text.vTaskPlaceOnEventList)
    vTaskStartScheduler                      0x000027f5   Thumb Code   108  tasks.o(.text.vTaskStartScheduler)
    vTaskSuspendAll                          0x00002861   Thumb Code    16  tasks.o(.text.vTaskSuspendAll)
    vTaskSwitchContext                       0x00002871   Thumb Code   108  tasks.o(.text.vTaskSwitchContext)
    xAreBlockingQueuesStillRunning           0x000028dd   Thumb Code    92  blockq.o(.text.xAreBlockingQueuesStillRunning)
    xAreIntegerMathsTaskStillRunning         0x00002939   Thumb Code    22  integer.o(.text.xAreIntegerMathsTaskStillRunning)
    xArePollingQueuesStillRunning            0x00002951   Thumb Code    42  pollq.o(.text.xArePollingQueuesStillRunning)
    xAreSemaphoreTasksStillRunning           0x0000297d   Thumb Code    54  semtest.o(.text.xAreSemaphoreTasksStillRunning)
    xPortPendSVHandler                       0x000029c1   Thumb Code   100  port.o(.text.xPortPendSVHandler)
    xPortStartScheduler                      0x00002a25   Thumb Code    74  port.o(.text.xPortStartScheduler)
    xPortSysTickHandler                      0x00002a71   Thumb Code    46  port.o(.text.xPortSysTickHandler)
    xQueueGenericCreate                      0x00002aa1   Thumb Code    44  queue.o(.text.xQueueGenericCreate)
    xQueueGenericReset                       0x00002acd   Thumb Code   106  queue.o(.text.xQueueGenericReset)
    xQueueGenericSend                        0x00002b39   Thumb Code   284  queue.o(.text.xQueueGenericSend)
    xQueueReceive                            0x00002c55   Thumb Code   300  queue.o(.text.xQueueReceive)
    xQueueSemaphoreTake                      0x00002d81   Thumb Code   280  queue.o(.text.xQueueSemaphoreTake)
    xTaskCheckForTimeOut                     0x00002e99   Thumb Code    92  tasks.o(.text.xTaskCheckForTimeOut)
    xTaskCreate                              0x00002ef5   Thumb Code    96  tasks.o(.text.xTaskCreate)
    xTaskGetTickCount                        0x00002f55   Thumb Code    12  tasks.o(.text.xTaskGetTickCount)
    xTaskIncrementTick                       0x00002f61   Thumb Code   332  tasks.o(.text.xTaskIncrementTick)
    xTaskRemoveFromEventList                 0x000030ad   Thumb Code   124  tasks.o(.text.xTaskRemoveFromEventList)
    xTaskResumeAll                           0x00003129   Thumb Code   256  tasks.o(.text.xTaskResumeAll)
    __0printf$3                              0x00003229   Thumb Code    22  printf3.o(i.__0printf$3)
    __1printf$3                              0x00003229   Thumb Code     0  printf3.o(i.__0printf$3)
    __2printf                                0x00003229   Thumb Code     0  printf3.o(i.__0printf$3)
    __scatterload_copy                       0x00003249   Thumb Code    14  handlers.o(i.__scatterload_copy)
    __scatterload_null                       0x00003257   Thumb Code     2  handlers.o(i.__scatterload_null)
    __scatterload_zeroinit                   0x00003259   Thumb Code    14  handlers.o(i.__scatterload_zeroinit)
    Region$$Table$$Base                      0x000034b4   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x000034d4   Number         0  anon$$obj.o(Region$$Table)
    __stdout                                 0x20000000   Data           4  stdout.o(.data)
    g_SystemCoreClock                        0x20000004   Data           4  system_acm32g103.o(.data.g_SystemCoreClock)
    UART2_Handle                             0x20000010   Data          68  main.o(.bss.UART2_Handle)
    g_DebugUart                              0x20000054   Data           4  hal_uart.o(.bss.g_DebugUart)
    g_systickHandle                          0x20000058   Data          28  hal.o(.bss.g_systickHandle)
    pxCurrentTCB                             0x20000078   Data           4  tasks.o(.bss.pxCurrentTCB)
    xPrintQueue                              0x20002974   Data           4  main.o(.bss.xPrintQueue)
    __initial_sp                             0x200031b8   Data           0  startup_acm32g103.o(STACK)



==============================================================================

Memory Map of the image

  Image Entry point : 0x00000121

  Load Region LR_IROM1 (Base: 0x00000000, Size: 0x000034e8, Max: 0x00050000, ABSOLUTE)

    Execution Region ER_IROM1 (Exec base: 0x00000000, Load base: 0x00000000, Size: 0x000034d4, Max: 0x00050000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x00000000   0x00000000   0x00000120   Data   RO           22    RESET               startup_acm32g103.o
    0x00000120   0x00000120   0x00000000   Code   RO          757  * .ARM.Collect$$$$00000000  mc_w.l(entry.o)
    0x00000120   0x00000120   0x00000004   Code   RO         1029    .ARM.Collect$$$$00000001  mc_w.l(entry2.o)
    0x00000124   0x00000124   0x00000004   Code   RO         1032    .ARM.Collect$$$$00000004  mc_w.l(entry5.o)
    0x00000128   0x00000128   0x00000000   Code   RO         1034    .ARM.Collect$$$$00000008  mc_w.l(entry7b.o)
    0x00000128   0x00000128   0x00000000   Code   RO         1036    .ARM.Collect$$$$0000000A  mc_w.l(entry8b.o)
    0x00000128   0x00000128   0x00000008   Code   RO         1037    .ARM.Collect$$$$0000000B  mc_w.l(entry9a.o)
    0x00000130   0x00000130   0x00000000   Code   RO         1039    .ARM.Collect$$$$0000000D  mc_w.l(entry10a.o)
    0x00000130   0x00000130   0x00000000   Code   RO         1041    .ARM.Collect$$$$0000000F  mc_w.l(entry11a.o)
    0x00000130   0x00000130   0x00000004   Code   RO         1030    .ARM.Collect$$$$00002712  mc_w.l(entry2.o)
    0x00000134   0x00000134   0x00000024   Code   RO           23    .text               startup_acm32g103.o
    0x00000158   0x00000158   0x00000062   Code   RO          760    .text               mc_w.l(uldiv.o)
    0x000001ba   0x000001ba   0x00000024   Code   RO          762    .text               mc_w.l(memcpya.o)
    0x000001de   0x000001de   0x00000024   Code   RO          764    .text               mc_w.l(memseta.o)
    0x00000202   0x00000202   0x0000002c   Code   RO         1053    .text               mc_w.l(uidiv.o)
    0x0000022e   0x0000022e   0x0000001e   Code   RO         1055    .text               mc_w.l(llshl.o)
    0x0000024c   0x0000024c   0x00000020   Code   RO         1057    .text               mc_w.l(llushr.o)
    0x0000026c   0x0000026c   0x00000024   Code   RO         1070    .text               mc_w.l(init.o)
    0x00000290   0x00000290   0x00000080   Code   RO          282    .text.HAL_EFLASH_SetRdwaitBySysCoreClock  hal_rcc.o
    0x00000310   0x00000310   0x0000004e   Code   RO          352    .text.HAL_EXTI_ClearConfigLine  hal_exti.o
    0x0000035e   0x0000035e   0x00000002   PAD
    0x00000360   0x00000360   0x00000036   Code   RO          360    .text.HAL_EXTI_ClearPending  hal_exti.o
    0x00000396   0x00000396   0x00000002   PAD
    0x00000398   0x00000398   0x000001a2   Code   RO          354    .text.HAL_EXTI_IsConfigLine  hal_exti.o
    0x0000053a   0x0000053a   0x00000002   PAD
    0x0000053c   0x0000053c   0x00000274   Code   RO          350    .text.HAL_EXTI_SetConfigLine  hal_exti.o
    0x000007b0   0x000007b0   0x00000302   Code   RO          325    .text.HAL_GPIO_Init  hal_gpio.o
    0x00000ab2   0x00000ab2   0x00000002   PAD
    0x00000ab4   0x00000ab4   0x00000028   Code   RO           30    .text.HAL_Init      hal.o
    0x00000adc   0x00000adc   0x00000004   Code   RO          474    .text.HAL_InitTick  acm32g103_it.o
    0x00000ae0   0x00000ae0   0x00000002   Code   RO           36    .text.HAL_MspInit   hal.o
    0x00000ae2   0x00000ae2   0x00000002   PAD
    0x00000ae4   0x00000ae4   0x00000162   Code   RO          284    .text.HAL_RCC_ClockConfig  hal_rcc.o
    0x00000c46   0x00000c46   0x00000002   PAD
    0x00000c48   0x00000c48   0x0000000c   Code   RO          304    .text.HAL_RCC_GetHCLKFreq  hal_rcc.o
    0x00000c54   0x00000c54   0x00000034   Code   RO          306    .text.HAL_RCC_GetPCLK1Freq  hal_rcc.o
    0x00000c88   0x00000c88   0x00000034   Code   RO          308    .text.HAL_RCC_GetPCLK2Freq  hal_rcc.o
    0x00000cbc   0x00000cbc   0x00000022   Code   RO          298    .text.HAL_RCC_GetRC32KVal  hal_rcc.o
    0x00000cde   0x00000cde   0x00000002   PAD
    0x00000ce0   0x00000ce0   0x0000002a   Code   RO          296    .text.HAL_RCC_GetRC64MVal  hal_rcc.o
    0x00000d0a   0x00000d0a   0x00000002   PAD
    0x00000d0c   0x00000d0c   0x000000ac   Code   RO          300    .text.HAL_RCC_GetSYSCLKFreq  hal_rcc.o
    0x00000db8   0x00000db8   0x00000028   Code   RO          280    .text.HAL_RCC_GetSysCoreClockFreq  hal_rcc.o
    0x00000de0   0x00000de0   0x0000043e   Code   RO          278    .text.HAL_RCC_OscConfig  hal_rcc.o
    0x0000121e   0x0000121e   0x00000002   PAD
    0x00001220   0x00001220   0x000000ee   Code   RO          102    .text.HAL_UART_Init  hal_uart.o
    0x0000130e   0x0000130e   0x00000002   PAD
    0x00001310   0x00001310   0x00000248   Code   RO           92    .text.HAL_UART_MspInit  hal_uart.o
    0x00001558   0x00001558   0x00000060   Code   RO          152    .text.HAL_UART_SetDebugUart  hal_uart.o
    0x000015b8   0x000015b8   0x00000006   Code   RO          470    .text.PendSV_Handler  acm32g103_it.o
    0x000015be   0x000015be   0x00000002   PAD
    0x000015c0   0x000015c0   0x00000006   Code   RO          468    .text.SVC_Handler   acm32g103_it.o
    0x000015c6   0x000015c6   0x00000002   PAD
    0x000015c8   0x000015c8   0x00000006   Code   RO          472    .text.SysTick_Handler  acm32g103_it.o
    0x000015ce   0x000015ce   0x00000002   PAD
    0x000015d0   0x000015d0   0x00000012   Code   RO           10    .text.SystemClock_Config  system_acm32g103.o
    0x000015e2   0x000015e2   0x00000002   PAD
    0x000015e4   0x000015e4   0x00000142   Code   RO            6    .text.SystemClock_FastConfig  system_acm32g103.o
    0x00001726   0x00001726   0x00000002   PAD
    0x00001728   0x00001728   0x0000005a   Code   RO            2    .text.SystemInit    system_acm32g103.o
    0x00001782   0x00001782   0x00000002   PAD
    0x00001784   0x00001784   0x00000036   Code   RO          729    .text.System_EnableIAccelerate  system_accelerate.lib(system_accelerate.o)
    0x000017ba   0x000017ba   0x00000002   PAD
    0x000017bc   0x000017bc   0x0000009c   Code   RO          104    .text.UART_Config_BaudRate  hal_uart.o
    0x00001858   0x00001858   0x00000016   Code   RO           94    .text.__NVIC_ClearPendingIRQ  hal_uart.o
    0x0000186e   0x0000186e   0x00000002   PAD
    0x00001870   0x00001870   0x00000016   Code   RO           98    .text.__NVIC_EnableIRQ  hal_uart.o
    0x00001886   0x00001886   0x00000002   PAD
    0x00001888   0x00001888   0x00000010   Code   RO           96    .text.__NVIC_SetPriority  hal_uart.o
    0x00001898   0x00001898   0x0000001e   Code   RO           32    .text.__NVIC_SetPriorityGrouping  hal.o
    0x000018b6   0x000018b6   0x00000002   PAD
    0x000018b8   0x000018b8   0x0000002c   Code   RO          381    .text.assert_failed  main.o
    0x000018e4   0x000018e4   0x0000001c   Code   RO          154    .text.fputc         hal_uart.o
    0x00001900   0x00001900   0x00000080   Code   RO          373    .text.main          main.o
    0x00001980   0x00001980   0x000000a2   Code   RO          500    .text.prvAddCurrentTaskToDelayedList  tasks.o
    0x00001a22   0x00001a22   0x00000002   PAD
    0x00001a24   0x00001a24   0x000000ac   Code   RO          488    .text.prvAddNewTaskToReadyList  tasks.o
    0x00001ad0   0x00001ad0   0x0000004e   Code   RO          572    .text.prvCheckTasksWaitingTermination  tasks.o
    0x00001b1e   0x00001b1e   0x00000002   PAD
    0x00001b20   0x00001b20   0x00000026   Code   RO          641    .text.prvCopyDataFromQueue  queue.o
    0x00001b46   0x00001b46   0x00000002   PAD
    0x00001b48   0x00001b48   0x00000062   Code   RO          629    .text.prvCopyDataToQueue  queue.o
    0x00001baa   0x00001baa   0x00000002   PAD
    0x00001bac   0x00001bac   0x00000012   Code   RO          492    .text.prvDeleteTCB  tasks.o
    0x00001bbe   0x00001bbe   0x00000002   PAD
    0x00001bc0   0x00001bc0   0x00000032   Code   RO          675    .text.prvHeapInit   heap_2.o
    0x00001bf2   0x00001bf2   0x00000002   PAD
    0x00001bf4   0x00001bf4   0x00000006   Code   RO          524    .text.prvIdleTask   tasks.o
    0x00001bfa   0x00001bfa   0x00000002   PAD
    0x00001bfc   0x00001bfc   0x00000018   Code   RO          625    .text.prvInitialiseNewQueue  queue.o
    0x00001c14   0x00001c14   0x0000007a   Code   RO          486    .text.prvInitialiseNewTask  tasks.o
    0x00001c8e   0x00001c8e   0x00000002   PAD
    0x00001c90   0x00001c90   0x0000006e   Code   RO          570    .text.prvInitialiseTaskLists  tasks.o
    0x00001cfe   0x00001cfe   0x00000002   PAD
    0x00001d00   0x00001d00   0x00000018   Code   RO          643    .text.prvIsQueueEmpty  queue.o
    0x00001d18   0x00001d18   0x0000001c   Code   RO          631    .text.prvIsQueueFull  queue.o
    0x00001d34   0x00001d34   0x00000028   Code   RO          708    .text.prvPortStartFirstTask  port.o
    0x00001d5c   0x00001d5c   0x00000028   Code   RO          494    .text.prvResetNextTaskUnblockTime  tasks.o
    0x00001d84   0x00001d84   0x000000be   Code   RO          399    .text.prvSemaphoreTest  semtest.o
    0x00001e42   0x00001e42   0x00000002   PAD
    0x00001e44   0x00001e44   0x00000010   Code   RO          375    .text.prvSetupHardware  main.o
    0x00001e54   0x00001e54   0x00000022   Code   RO          698    .text.prvTaskExitError  port.o
    0x00001e76   0x00001e76   0x00000002   PAD
    0x00001e78   0x00001e78   0x00000072   Code   RO          633    .text.prvUnlockQueue  queue.o
    0x00001eea   0x00001eea   0x00000002   PAD
    0x00001eec   0x00001eec   0x000000ce   Code   RO          673    .text.pvPortMalloc  heap_2.o
    0x00001fba   0x00001fba   0x00000002   PAD
    0x00001fbc   0x00001fbc   0x00000028   Code   RO          696    .text.pxPortInitialiseStack  port.o
    0x00001fe4   0x00001fe4   0x0000003a   Code   RO          383    .text.uart_init     main.o
    0x0000201e   0x0000201e   0x00000002   PAD
    0x00002020   0x00002020   0x00000028   Code   RO          611    .text.uxListRemove  list.o
    0x00002048   0x00002048   0x00000012   Code   RO          653    .text.uxQueueMessagesWaiting  queue.o
    0x0000205a   0x0000205a   0x00000002   PAD
    0x0000205c   0x0000205c   0x0000003c   Code   RO          450    .text.vBlockingQueueConsumer  blockq.o
    0x00002098   0x00002098   0x0000003c   Code   RO          452    .text.vBlockingQueueProducer  blockq.o
    0x000020d4   0x000020d4   0x00000084   Code   RO          377    .text.vCheckTask    main.o
    0x00002158   0x00002158   0x0000005e   Code   RO          416    .text.vCompeteingIntMathTask  integer.o
    0x000021b6   0x000021b6   0x00000002   PAD
    0x000021b8   0x000021b8   0x00000016   Code   RO          603    .text.vListInitialise  list.o
    0x000021ce   0x000021ce   0x00000002   PAD
    0x000021d0   0x000021d0   0x00000006   Code   RO          605    .text.vListInitialiseItem  list.o
    0x000021d6   0x000021d6   0x00000002   PAD
    0x000021d8   0x000021d8   0x0000003a   Code   RO          609    .text.vListInsert   list.o
    0x00002212   0x00002212   0x00000002   PAD
    0x00002214   0x00002214   0x0000001c   Code   RO          607    .text.vListInsertEnd  list.o
    0x00002230   0x00002230   0x00000066   Code   RO          431    .text.vPolledQueueConsumer  pollq.o
    0x00002296   0x00002296   0x00000002   PAD
    0x00002298   0x00002298   0x0000005a   Code   RO          433    .text.vPolledQueueProducer  pollq.o
    0x000022f2   0x000022f2   0x00000002   PAD
    0x000022f4   0x000022f4   0x00000014   Code   RO          706    .text.vPortEnableVFP  port.o
    0x00002308   0x00002308   0x00000020   Code   RO          712    .text.vPortEnterCritical  port.o
    0x00002328   0x00002328   0x0000001a   Code   RO          714    .text.vPortExitCritical  port.o
    0x00002342   0x00002342   0x00000002   PAD
    0x00002344   0x00002344   0x00000044   Code   RO          677    .text.vPortFree     heap_2.o
    0x00002388   0x00002388   0x00000008   PAD
    0x00002390   0x00002390   0x00000024   Code   RO          700    .text.vPortSVCHandler  port.o
    0x000023b4   0x000023b4   0x00000034   Code   RO          704    .text.vPortSetupTimerInterrupt  port.o
    0x000023e8   0x000023e8   0x00000048   Code   RO          379    .text.vPrintTask    main.o
    0x00002430   0x00002430   0x00000168   Code   RO          448    .text.vStartBlockingQueueTasks  blockq.o
    0x00002598   0x00002598   0x00000034   Code   RO          414    .text.vStartIntegerMathTasks  integer.o
    0x000025cc   0x000025cc   0x00000068   Code   RO          429    .text.vStartPolledQueueTasks  pollq.o
    0x00002634   0x00002634   0x000000e4   Code   RO          397    .text.vStartSemaphoreTasks  semtest.o
    0x00002718   0x00002718   0x00000034   Code   RO          504    .text.vTaskDelay    tasks.o
    0x0000274c   0x0000274c   0x0000005c   Code   RO          496    .text.vTaskDelayUntil  tasks.o
    0x000027a8   0x000027a8   0x0000001a   Code   RO          548    .text.vTaskInternalSetTimeOutState  tasks.o
    0x000027c2   0x000027c2   0x00000002   PAD
    0x000027c4   0x000027c4   0x0000000e   Code   RO          552    .text.vTaskMissedYield  tasks.o
    0x000027d2   0x000027d2   0x00000002   PAD
    0x000027d4   0x000027d4   0x0000001e   Code   RO          538    .text.vTaskPlaceOnEventList  tasks.o
    0x000027f2   0x000027f2   0x00000002   PAD
    0x000027f4   0x000027f4   0x0000006c   Code   RO          522    .text.vTaskStartScheduler  tasks.o
    0x00002860   0x00002860   0x00000010   Code   RO          498    .text.vTaskSuspendAll  tasks.o
    0x00002870   0x00002870   0x0000006c   Code   RO          514    .text.vTaskSwitchContext  tasks.o
    0x000028dc   0x000028dc   0x0000005c   Code   RO          454    .text.xAreBlockingQueuesStillRunning  blockq.o
    0x00002938   0x00002938   0x00000016   Code   RO          418    .text.xAreIntegerMathsTaskStillRunning  integer.o
    0x0000294e   0x0000294e   0x00000002   PAD
    0x00002950   0x00002950   0x0000002a   Code   RO          435    .text.xArePollingQueuesStillRunning  pollq.o
    0x0000297a   0x0000297a   0x00000002   PAD
    0x0000297c   0x0000297c   0x00000036   Code   RO          401    .text.xAreSemaphoreTasksStillRunning  semtest.o
    0x000029b2   0x000029b2   0x0000000e   PAD
    0x000029c0   0x000029c0   0x00000064   Code   RO          716    .text.xPortPendSVHandler  port.o
    0x00002a24   0x00002a24   0x0000004a   Code   RO          702    .text.xPortStartScheduler  port.o
    0x00002a6e   0x00002a6e   0x00000002   PAD
    0x00002a70   0x00002a70   0x0000002e   Code   RO          718    .text.xPortSysTickHandler  port.o
    0x00002a9e   0x00002a9e   0x00000002   PAD
    0x00002aa0   0x00002aa0   0x0000002c   Code   RO          623    .text.xQueueGenericCreate  queue.o
    0x00002acc   0x00002acc   0x0000006a   Code   RO          621    .text.xQueueGenericReset  queue.o
    0x00002b36   0x00002b36   0x00000002   PAD
    0x00002b38   0x00002b38   0x0000011c   Code   RO          627    .text.xQueueGenericSend  queue.o
    0x00002c54   0x00002c54   0x0000012c   Code   RO          639    .text.xQueueReceive  queue.o
    0x00002d80   0x00002d80   0x00000118   Code   RO          645    .text.xQueueSemaphoreTake  queue.o
    0x00002e98   0x00002e98   0x0000005c   Code   RO          550    .text.xTaskCheckForTimeOut  tasks.o
    0x00002ef4   0x00002ef4   0x00000060   Code   RO          484    .text.xTaskCreate   tasks.o
    0x00002f54   0x00002f54   0x0000000c   Code   RO          530    .text.xTaskGetTickCount  tasks.o
    0x00002f60   0x00002f60   0x0000014c   Code   RO          528    .text.xTaskIncrementTick  tasks.o
    0x000030ac   0x000030ac   0x0000007c   Code   RO          542    .text.xTaskRemoveFromEventList  tasks.o
    0x00003128   0x00003128   0x00000100   Code   RO          502    .text.xTaskResumeAll  tasks.o
    0x00003228   0x00003228   0x00000020   Code   RO          857    i.__0printf$3       mc_w.l(printf3.o)
    0x00003248   0x00003248   0x0000000e   Code   RO         1078    i.__scatterload_copy  mc_w.l(handlers.o)
    0x00003256   0x00003256   0x00000002   Code   RO         1079    i.__scatterload_null  mc_w.l(handlers.o)
    0x00003258   0x00003258   0x0000000e   Code   RO         1080    i.__scatterload_zeroinit  mc_w.l(handlers.o)
    0x00003266   0x00003266   0x00000002   PAD
    0x00003268   0x00003268   0x000001b8   Code   RO          864    i._printf_core      mc_w.l(printf3.o)
    0x00003420   0x00003420   0x00000025   Data   RO          157    .rodata.str1.1      hal_uart.o
    0x00003445   0x00003445   0x00000024   Data   RO          316    .rodata.str1.1      hal_rcc.o
    0x00003469   0x00003469   0x00000025   Data   RO          337    .rodata.str1.1      hal_gpio.o
    0x0000348e   0x0000348e   0x00000025   Data   RO          364    .rodata.str1.1      hal_exti.o
    0x000034b3   0x000034b3   0x00000001   PAD
    0x000034b4   0x000034b4   0x00000020   Data   RO         1077    Region$$Table       anon$$obj.o


    Execution Region RW_IRAM1 (Exec base: 0x20000000, Load base: 0x000034d8, Size: 0x000031b8, Max: 0x00010000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x000034d8   0x00000004   Data   RW         1043    .data               mc_w.l(stdout.o)
    0x20000004   0x000034dc   0x00000004   Data   RW           12    .data.g_SystemCoreClock  system_acm32g103.o
    0x20000008   0x000034e0   0x00000004   Data   RW          720    .data.uxCriticalNesting  port.o
    0x2000000c   0x000034e4   0x00000004   Data   RW          686    .data.xFreeBytesRemaining  heap_2.o
    0x20000010        -       0x00000044   Zero   RW          387    .bss.UART2_Handle   main.o
    0x20000054        -       0x00000004   Zero   RW          156    .bss.g_DebugUart    hal_uart.o
    0x20000058        -       0x0000001c   Zero   RW           76    .bss.g_systickHandle  hal.o
    0x20000074        -       0x00000001   Zero   RW          683    .bss.pvPortMalloc.xHeapHasBeenInitialised  heap_2.o
    0x20000075   0x000034e8   0x00000003   PAD
    0x20000078        -       0x00000004   Zero   RW          574    .bss.pxCurrentTCB   tasks.o
    0x2000007c        -       0x00000004   Zero   RW          590    .bss.pxDelayedTaskList  tasks.o
    0x20000080        -       0x00000004   Zero   RW          591    .bss.pxOverflowDelayedTaskList  tasks.o
    0x20000084        -       0x00000050   Zero   RW          575    .bss.pxReadyTasksLists  tasks.o
    0x200000d4        -       0x00000006   Zero   RW          456    .bss.sBlockingConsumerCount  blockq.o
    0x200000da        -       0x00000006   Zero   RW          457    .bss.sBlockingProducerCount  blockq.o
    0x200000e0        -       0x00000008   Zero   RW          404    .bss.sCheckVariables  semtest.o
    0x200000e8        -       0x00000002   Zero   RW          405    .bss.sNextCheckVariable  semtest.o
    0x200000ea        -       0x00002800   Zero   RW          687    .bss.ucHeap         heap_2.o
    0x200028ea   0x000034e8   0x00000002   PAD
    0x200028ec        -       0x00000004   Zero   RW          580    .bss.uxCurrentNumberOfTasks  tasks.o
    0x200028f0        -       0x00000004   Zero   RW          579    .bss.uxDeletedTasksWaitingCleanUp  tasks.o
    0x200028f4        -       0x00000004   Zero   RW          589    .bss.uxPendedTicks  tasks.o
    0x200028f8        -       0x00000004   Zero   RW          584    .bss.uxSchedulerSuspended  tasks.o
    0x200028fc        -       0x00000004   Zero   RW          577    .bss.uxTaskNumber   tasks.o
    0x20002900        -       0x00000004   Zero   RW          576    .bss.uxTopReadyPriority  tasks.o
    0x20002904        -       0x00000004   Zero   RW          437    .bss.vStartPolledQueueTasks.xPolledQueue  pollq.o
    0x20002908        -       0x00000006   Zero   RW          458    .bss.xAreBlockingQueuesStillRunning.sLastBlockingConsumerCount  blockq.o
    0x2000290e        -       0x00000006   Zero   RW          459    .bss.xAreBlockingQueuesStillRunning.sLastBlockingProducerCount  blockq.o
    0x20002914        -       0x00000008   Zero   RW          403    .bss.xAreSemaphoreTasksStillRunning.sLastCheckVariables  semtest.o
    0x2000291c        -       0x00000014   Zero   RW          593    .bss.xDelayedTaskList1  tasks.o
    0x20002930        -       0x00000014   Zero   RW          594    .bss.xDelayedTaskList2  tasks.o
    0x20002944        -       0x00000008   Zero   RW          685    .bss.xEnd           heap_2.o
    0x2000294c        -       0x00000004   Zero   RW          586    .bss.xIdleTaskHandle  tasks.o
    0x20002950        -       0x00000004   Zero   RW          587    .bss.xNextTaskUnblockTime  tasks.o
    0x20002954        -       0x00000004   Zero   RW          592    .bss.xNumOfOverflows  tasks.o
    0x20002958        -       0x00000014   Zero   RW          585    .bss.xPendingReadyList  tasks.o
    0x2000296c        -       0x00000004   Zero   RW          438    .bss.xPollingConsumerCount  pollq.o
    0x20002970        -       0x00000004   Zero   RW          439    .bss.xPollingProducerCount  pollq.o
    0x20002974        -       0x00000004   Zero   RW          385    .bss.xPrintQueue    main.o
    0x20002978        -       0x00000004   Zero   RW          581    .bss.xSchedulerRunning  tasks.o
    0x2000297c        -       0x00000008   Zero   RW          684    .bss.xStart         heap_2.o
    0x20002984        -       0x00000014   Zero   RW          583    .bss.xSuspendedTaskList  tasks.o
    0x20002998        -       0x00000004   Zero   RW          420    .bss.xTaskCheck     integer.o
    0x2000299c        -       0x00000014   Zero   RW          578    .bss.xTasksWaitingTermination  tasks.o
    0x200029b0        -       0x00000004   Zero   RW          582    .bss.xTickCount     tasks.o
    0x200029b4        -       0x00000004   Zero   RW          588    .bss.xYieldPending  tasks.o
    0x200029b8        -       0x00000800   Zero   RW           20    STACK               startup_acm32g103.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

        22          0          0          0          0       1085   acm32g103_it.o
       572         48          0          0         24       3282   blockq.o
        72          0          0          0         28       7773   hal.o
      1178         64         37          0          0       4073   hal_exti.o
       770          0         37          0          0       4479   hal_gpio.o
      1972         12         36          0          0       9217   hal_rcc.o
      1162          0         37          0          4      18289   hal_uart.o
       324          0          0          4      10257       2861   heap_2.o
       168          8          0          0          4       1646   integer.o
       154          0          0          0          0       2160   list.o
       450         60          0          0         72       4392   main.o
       338         16          0          0         12       2321   pollq.o
       500         16          0          4          0       2723   port.o
      1358          0          0          0          0      12650   queue.o
       472         32          0          0         18       2679   semtest.o
        36          8        288          0       2048        868   startup_acm32g103.o
       430         12          0          4          0       4469   system_acm32g103.o
      2066          8          0          0        240      18685   tasks.o

    ----------------------------------------------------------------------
     12164        284        468         12      12712     103652   Object Totals
         0          0         32          0          0          0   (incl. Generated)
       120          0          1          0          5          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

         0          0          0          0          0          0   entry.o
         0          0          0          0          0          0   entry10a.o
         0          0          0          0          0          0   entry11a.o
         8          4          0          0          0          0   entry2.o
         4          0          0          0          0          0   entry5.o
         0          0          0          0          0          0   entry7b.o
         0          0          0          0          0          0   entry8b.o
         8          4          0          0          0          0   entry9a.o
        30          0          0          0          0          0   handlers.o
        36          8          0          0          0         68   init.o
        30          0          0          0          0         68   llshl.o
        32          0          0          0          0         68   llushr.o
        36          0          0          0          0         68   memcpya.o
        36          0          0          0          0        108   memseta.o
       472         14          0          0          0        184   printf3.o
         0          0          0          4          0          0   stdout.o
        44          0          0          0          0         80   uidiv.o
        98          0          0          0          0         92   uldiv.o
        54          0          0          0          0       3911   system_accelerate.o

    ----------------------------------------------------------------------
       892         30          0          4          0       4647   Library Totals
         4          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

       834         30          0          4          0        736   mc_w.l
        54          0          0          0          0       3911   system_accelerate.lib

    ----------------------------------------------------------------------
       892         30          0          4          0       4647   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     13056        314        468         16      12712     107919   Grand Totals
     13056        314        468         16      12712     107919   ELF Image Totals
     13056        314        468         16          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                13524 (  13.21kB)
    Total RW  Size (RW Data + ZI Data)             12728 (  12.43kB)
    Total ROM Size (Code + RO Data + RW Data)      13540 (  13.22kB)

==============================================================================

